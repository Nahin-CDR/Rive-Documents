{"ast":null,"code":"var _jsxFileName = \"I:\\\\poridhi\\\\practice rive\\\\riveapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport { useRive, useStateMachineInput } from 'rive-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const styles = {\n    width: '300px',\n    height: '300px'\n  };\n  const STATE_MACHINE_NAME = 'State Machine ';\n  const INPUT_NAME = 'Level';\n  const {\n    RiveComponent,\n    rive\n  } = useRive({\n    src: 'skills.riv',\n    stateMachines: STATE_MACHINE_NAME,\n    artboard: 'New Artboard',\n    autoplay: true\n  });\n  // levelInput is a number state machine input. To transition the state machine,\n  // we need to set the value to a number. For this state machine input, we need\n  // to set to 0, 1 or 2 for a state transition to occur.\n  const levelInput = useStateMachineInput(rive, STATE_MACHINE_NAME, INPUT_NAME);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px',\n      width: '500px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(RiveComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Level:\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => levelInput.value = 0,\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => levelInput.value = 1,\n        children: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => levelInput.value = 2,\n        children: \"2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tRQGNXdKpcKJonTOuP3zrLqQVOk=\", false, function () {\n  return [useRive, useStateMachineInput];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRive","useStateMachineInput","jsxDEV","_jsxDEV","App","_s","styles","width","height","STATE_MACHINE_NAME","INPUT_NAME","RiveComponent","rive","src","stateMachines","artboard","autoplay","levelInput","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","_c","$RefreshReg$"],"sources":["I:/poridhi/practice rive/riveapp/src/App.js"],"sourcesContent":["import './App.css';\nimport React from 'react';\nimport { useRive, useStateMachineInput } from 'rive-react';\n\nfunction App() {\n  const styles = {\n    width: '300px',\n    height: '300px',\n  };\n\n  const STATE_MACHINE_NAME = 'State Machine ';\n  const INPUT_NAME = 'Level';\n\n  const { RiveComponent, rive } = useRive({\n    src: 'skills.riv',\n    stateMachines: STATE_MACHINE_NAME,\n    artboard: 'New Artboard',\n    autoplay: true,\n  });\n  // levelInput is a number state machine input. To transition the state machine,\n  // we need to set the value to a number. For this state machine input, we need\n  // to set to 0, 1 or 2 for a state transition to occur.\n  const levelInput = useStateMachineInput(rive, STATE_MACHINE_NAME, INPUT_NAME);\n  return (\n    <div style={{ height: '500px', width: '500px' }}>\n    <RiveComponent />\n    <div>\n      Level:\n      <button onClick={() => (levelInput.value = 0)}>0</button>\n      <button onClick={() => (levelInput.value = 1)}>1</button>\n      <button onClick={() => (levelInput.value = 2)}>2</button>\n    </div>\n  </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,oBAAoB,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAG;IACbC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE;EACV,CAAC;EAED,MAAMC,kBAAkB,GAAG,gBAAgB;EAC3C,MAAMC,UAAU,GAAG,OAAO;EAE1B,MAAM;IAAEC,aAAa;IAAEC;EAAK,CAAC,GAAGZ,OAAO,CAAC;IACtCa,GAAG,EAAE,YAAY;IACjBC,aAAa,EAAEL,kBAAkB;IACjCM,QAAQ,EAAE,cAAc;IACxBC,QAAQ,EAAE;EACZ,CAAC,CAAC;EACF;EACA;EACA;EACA,MAAMC,UAAU,GAAGhB,oBAAoB,CAACW,IAAI,EAAEH,kBAAkB,EAAEC,UAAU,CAAC;EAC7E,oBACEP,OAAA;IAAKe,KAAK,EAAE;MAAEV,MAAM,EAAE,OAAO;MAAED,KAAK,EAAE;IAAQ,CAAE;IAAAY,QAAA,gBAChDhB,OAAA,CAACQ,aAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjBpB,OAAA;MAAAgB,QAAA,GAAK,QAEH,eAAAhB,OAAA;QAAQqB,OAAO,EAAEA,CAAA,KAAOP,UAAU,CAACQ,KAAK,GAAG,CAAG;QAAAN,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzDpB,OAAA;QAAQqB,OAAO,EAAEA,CAAA,KAAOP,UAAU,CAACQ,KAAK,GAAG,CAAG;QAAAN,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzDpB,OAAA;QAAQqB,OAAO,EAAEA,CAAA,KAAOP,UAAU,CAACQ,KAAK,GAAG,CAAG;QAAAN,QAAA,EAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER;AAAClB,EAAA,CA9BQD,GAAG;EAAA,QASsBJ,OAAO,EASpBC,oBAAoB;AAAA;AAAAyB,EAAA,GAlBhCtB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}