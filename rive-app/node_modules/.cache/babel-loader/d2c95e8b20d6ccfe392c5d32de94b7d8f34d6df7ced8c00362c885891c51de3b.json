{"ast":null,"code":"(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"rive\"] = factory();else root[\"rive\"] = factory();\n})(this, function () {\n  return (/******/(() => {\n      // webpackBootstrap\n      /******/\n      \"use strict\";\n\n      /******/\n      var __webpack_modules__ = [\n        /* 0 */\n      , /* 1 */\n      /***/(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {\n        __webpack_require__.r(__webpack_exports__);\n        /* harmony export */\n        __webpack_require__.d(__webpack_exports__, {\n          /* harmony export */\"default\": () => __WEBPACK_DEFAULT_EXPORT__\n          /* harmony export */\n        });\n\n        var Rive = (() => {\n          var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n          return function (Rive) {\n            Rive = Rive || {};\n            var m;\n            m || (m = typeof Rive !== 'undefined' ? Rive : {});\n            var aa, ba;\n            m.ready = new Promise(function (b, a) {\n              aa = b;\n              ba = a;\n            });\n            function ca() {\n              function b(h) {\n                const g = d;\n                c = a = 0;\n                d = new Map();\n                g.forEach(l => {\n                  try {\n                    l(h);\n                  } catch (k) {\n                    console.error(k);\n                  }\n                });\n                this.La();\n                e && e.fb();\n              }\n              let a = 0,\n                c = 0,\n                d = new Map(),\n                e = null,\n                f = null;\n              this.requestAnimationFrame = function (h) {\n                a || (a = requestAnimationFrame(b.bind(this)));\n                const g = ++c;\n                d.set(g, h);\n                return g;\n              };\n              this.cancelAnimationFrame = function (h) {\n                d.delete(h);\n                a && 0 == d.size && (cancelAnimationFrame(a), a = 0);\n              };\n              this.cb = function (h) {\n                f && (document.body.remove(f), f = null);\n                h || (f = document.createElement(\"div\"), f.style.backgroundColor = \"black\", f.style.position = \"fixed\", f.style.right = 0, f.style.top = 0, f.style.color = \"white\", f.style.padding = \"4px\", f.innerHTML = \"RIVE FPS\", h = function (g) {\n                  f.innerHTML = \"RIVE FPS \" + g.toFixed(1);\n                }, document.body.appendChild(f));\n                e = new function () {\n                  let g = 0,\n                    l = 0;\n                  this.fb = function () {\n                    var k = performance.now();\n                    l ? (++g, k -= l, 1E3 < k && (h(1E3 * g / k), g = l = 0)) : (l = k, g = 0);\n                  };\n                }();\n              };\n              this.$a = function () {\n                f && (document.body.remove(f), f = null);\n                e = null;\n              };\n              this.La = function () {};\n            }\n            function ea(b) {\n              console.assert(!0);\n              const a = new Map();\n              let c = -Infinity;\n              this.push = function (d) {\n                d = d + ((1 << b) - 1) >> b;\n                a.has(d) && clearTimeout(a.get(d));\n                a.set(d, setTimeout(function () {\n                  a.delete(d);\n                  0 == a.length ? c = -Infinity : d == c && (c = Math.max(...a.keys()), console.assert(c < d));\n                }, 1E3));\n                c = Math.max(d, c);\n                return c << b;\n              };\n            }\n            const fa = new function () {\n              function b() {\n                if (!a) {\n                  var t = document.createElement(\"canvas\"),\n                    v = {\n                      alpha: 1,\n                      depth: 0,\n                      stencil: 0,\n                      antialias: 0,\n                      premultipliedAlpha: 1,\n                      preserveDrawingBuffer: 0,\n                      preferLowPowerToHighPerformance: 0,\n                      failIfMajorPerformanceCaveat: 0,\n                      enableExtensionsByDefault: 1,\n                      explicitSwapControl: 1,\n                      renderViaOffscreenBackBuffer: 1\n                    };\n                  let q = t.getContext(\"webgl2\", v);\n                  if (q) c = 2;else if (q = t.getContext(\"webgl\", v)) c = 1;else return console.log(\"No WebGL support. Image mesh will not be drawn.\"), !1;\n                  d = Math.min(q.getParameter(q.MAX_RENDERBUFFER_SIZE), q.getParameter(q.MAX_TEXTURE_SIZE));\n                  function F(I, w, z) {\n                    w = q.createShader(w);\n                    q.shaderSource(w, z);\n                    q.compileShader(w);\n                    z = q.getShaderInfoLog(w);\n                    if (0 < z.length) throw z;\n                    q.attachShader(I, w);\n                  }\n                  t = q.createProgram();\n                  F(t, q.VERTEX_SHADER, \"attribute vec2 vertex;\\n                attribute vec2 uv;\\n                uniform vec4 mat;\\n                uniform vec2 translate;\\n                varying vec2 st;\\n                void main() {\\n                    st = uv;\\n                    gl_Position = vec4(mat2(mat) * vertex + translate, 0, 1);\\n                }\");\n                  F(t, q.FRAGMENT_SHADER, \"precision highp float;\\n                uniform sampler2D image;\\n                varying vec2 st;\\n                void main() {\\n                    gl_FragColor = texture2D(image, st);\\n                }\");\n                  q.bindAttribLocation(t, 0, \"vertex\");\n                  q.bindAttribLocation(t, 1, \"uv\");\n                  q.linkProgram(t);\n                  v = q.getProgramInfoLog(t);\n                  if (0 < v.trim().length) throw v;\n                  e = q.getUniformLocation(t, \"mat\");\n                  f = q.getUniformLocation(t, \"translate\");\n                  q.useProgram(t);\n                  q.bindBuffer(q.ARRAY_BUFFER, q.createBuffer());\n                  q.enableVertexAttribArray(0);\n                  q.enableVertexAttribArray(1);\n                  q.bindBuffer(q.ELEMENT_ARRAY_BUFFER, q.createBuffer());\n                  q.uniform1i(q.getUniformLocation(t, \"image\"), 0);\n                  q.pixelStorei(q.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !0);\n                  a = q;\n                }\n                return !0;\n              }\n              let a = null,\n                c = 0,\n                d = 0,\n                e = null,\n                f = null,\n                h = 0,\n                g = 0;\n              this.ob = function () {\n                b();\n                return d;\n              };\n              this.Ya = function (t) {\n                if (!b()) return null;\n                const v = a.createTexture();\n                a.bindTexture(a.TEXTURE_2D, v);\n                a.texImage2D(a.TEXTURE_2D, 0, a.RGBA, a.RGBA, a.UNSIGNED_BYTE, t);\n                a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_S, a.CLAMP_TO_EDGE);\n                a.texParameteri(a.TEXTURE_2D, a.TEXTURE_WRAP_T, a.CLAMP_TO_EDGE);\n                a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MAG_FILTER, a.LINEAR);\n                2 == c ? (a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MIN_FILTER, a.LINEAR_MIPMAP_LINEAR), a.generateMipmap(a.TEXTURE_2D)) : a.texParameteri(a.TEXTURE_2D, a.TEXTURE_MIN_FILTER, a.LINEAR);\n                return v;\n              };\n              const l = new ea(8),\n                k = new ea(8),\n                p = new ea(10),\n                r = new ea(10);\n              this.bb = function (t, v, q, F, I) {\n                if (b()) {\n                  var w = l.push(t),\n                    z = k.push(v);\n                  if (a.canvas.width != w || a.canvas.height != z) a.canvas.width = w, a.canvas.height = z;\n                  a.viewport(0, z - v, t, v);\n                  a.disable(a.SCISSOR_TEST);\n                  a.clearColor(0, 0, 0, 0);\n                  a.clear(a.COLOR_BUFFER_BIT);\n                  a.enable(a.SCISSOR_TEST);\n                  q.sort((y, da) => da.Oa - y.Oa);\n                  w = p.push(F);\n                  h != w && (a.bufferData(a.ARRAY_BUFFER, 8 * w, a.DYNAMIC_DRAW), h = w);\n                  w = 0;\n                  for (var J of q) a.bufferSubData(a.ARRAY_BUFFER, w, J.Aa), w += 4 * J.Aa.length;\n                  console.assert(w == 4 * F);\n                  for (var P of q) a.bufferSubData(a.ARRAY_BUFFER, w, P.Ra), w += 4 * P.Ra.length;\n                  console.assert(w == 8 * F);\n                  w = r.push(I);\n                  g != w && (a.bufferData(a.ELEMENT_ARRAY_BUFFER, 2 * w, a.DYNAMIC_DRAW), g = w);\n                  J = 0;\n                  for (var X of q) a.bufferSubData(a.ELEMENT_ARRAY_BUFFER, J, X.indices), J += 2 * X.indices.length;\n                  console.assert(J == 2 * I);\n                  X = 0;\n                  P = !0;\n                  w = J = 0;\n                  for (const y of q) {\n                    y.image.va != X && (a.bindTexture(a.TEXTURE_2D, y.image.Va || null), X = y.image.va);\n                    y.rb ? (a.scissor(y.Ea, z - y.Fa - y.Ka, y.yb, y.Ka), P = !0) : P && (a.scissor(0, z - v, t, v), P = !1);\n                    q = 2 / t;\n                    const da = -2 / v;\n                    a.uniform4f(e, y.la[0] * q * y.ra, y.la[1] * da * y.sa, y.la[2] * q * y.ra, y.la[3] * da * y.sa);\n                    a.uniform2f(f, y.la[4] * q * y.ra + q * (y.Ea - y.pb * y.ra) - 1, y.la[5] * da * y.sa + da * (y.Fa - y.qb * y.sa) + 1);\n                    a.vertexAttribPointer(0, 2, a.FLOAT, !1, 0, w);\n                    a.vertexAttribPointer(1, 2, a.FLOAT, !1, 0, w + 4 * F);\n                    a.drawElements(a.TRIANGLES, y.indices.length, a.UNSIGNED_SHORT, J);\n                    w += 4 * y.Aa.length;\n                    J += 2 * y.indices.length;\n                  }\n                  console.assert(w == 4 * F);\n                  console.assert(J == 2 * I);\n                }\n              };\n              this.canvas = function () {\n                return b() && a.canvas;\n              };\n            }();\n            Rive.onRuntimeInitialized = function () {\n              function b(n) {\n                switch (n) {\n                  case k.srcOver:\n                    return \"source-over\";\n                  case k.screen:\n                    return \"screen\";\n                  case k.overlay:\n                    return \"overlay\";\n                  case k.darken:\n                    return \"darken\";\n                  case k.lighten:\n                    return \"lighten\";\n                  case k.colorDodge:\n                    return \"color-dodge\";\n                  case k.colorBurn:\n                    return \"color-burn\";\n                  case k.hardLight:\n                    return \"hard-light\";\n                  case k.softLight:\n                    return \"soft-light\";\n                  case k.difference:\n                    return \"difference\";\n                  case k.exclusion:\n                    return \"exclusion\";\n                  case k.multiply:\n                    return \"multiply\";\n                  case k.hue:\n                    return \"hue\";\n                  case k.saturation:\n                    return \"saturation\";\n                  case k.color:\n                    return \"color\";\n                  case k.luminosity:\n                    return \"luminosity\";\n                }\n              }\n              function a(n) {\n                return \"rgba(\" + ((16711680 & n) >>> 16) + \",\" + ((65280 & n) >>> 8) + \",\" + ((255 & n) >>> 0) + \",\" + ((4278190080 & n) >>> 24) / 255 + \")\";\n              }\n              function c() {\n                0 < J.length && (fa.bb(z.drawWidth(), z.drawHeight(), J, P, X), J = [], X = P = 0, z.reset(512, 512));\n                for (const n of w) {\n                  for (const u of n.ba) u();\n                  n.ba = [];\n                }\n                w.clear();\n              }\n              var d = Rive.RenderPaintStyle;\n              const e = Rive.RenderPath,\n                f = Rive.RenderPaint,\n                h = Rive.Renderer,\n                g = Rive.StrokeCap,\n                l = Rive.StrokeJoin,\n                k = Rive.BlendMode,\n                p = d.fill,\n                r = d.stroke,\n                t = Rive.FillRule.evenOdd;\n              let v = 1;\n              var q = Rive.RenderImage.extend(\"CanvasRenderImage\", {\n                  __construct: function () {\n                    this.__parent.__construct.call(this);\n                    this.va = v;\n                    v = v + 1 & 2147483647 || 1;\n                  },\n                  decode: function (n) {\n                    let u = Xa;\n                    u.total++;\n                    var D = this,\n                      B = new Image();\n                    B.src = URL.createObjectURL(new Blob([n], {\n                      type: \"image/png\"\n                    }));\n                    B.onload = function () {\n                      D.Ta = B;\n                      D.Va = fa.Ya(B);\n                      D.size(B.width, B.height);\n                      u.loaded++;\n                      if (u.loaded === u.total) {\n                        const E = u.ready;\n                        E && (E(), u.ready = null);\n                      }\n                    };\n                  }\n                }),\n                F = e.extend(\"CanvasRenderPath\", {\n                  __construct: function () {\n                    this.__parent.__construct.call(this);\n                    this.ga = new Path2D();\n                  },\n                  rewind: function () {\n                    this.ga = new Path2D();\n                  },\n                  addPath: function (n, u, D, B, E, G, A) {\n                    var C = this.ga,\n                      R = C.addPath;\n                    n = n.ga;\n                    const K = new DOMMatrix();\n                    K.a = u;\n                    K.b = D;\n                    K.c = B;\n                    K.d = E;\n                    K.e = G;\n                    K.f = A;\n                    R.call(C, n, K);\n                  },\n                  fillRule: function (n) {\n                    this.Ca = n;\n                  },\n                  moveTo: function (n, u) {\n                    this.ga.moveTo(n, u);\n                  },\n                  lineTo: function (n, u) {\n                    this.ga.lineTo(n, u);\n                  },\n                  cubicTo: function (n, u, D, B, E, G) {\n                    this.ga.bezierCurveTo(n, u, D, B, E, G);\n                  },\n                  close: function () {\n                    this.ga.closePath();\n                  }\n                }),\n                I = f.extend(\"CanvasRenderPaint\", {\n                  color: function (n) {\n                    this.Da = a(n);\n                  },\n                  thickness: function (n) {\n                    this.Wa = n;\n                  },\n                  join: function (n) {\n                    switch (n) {\n                      case l.miter:\n                        this.ua = \"miter\";\n                        break;\n                      case l.round:\n                        this.ua = \"round\";\n                        break;\n                      case l.bevel:\n                        this.ua = \"bevel\";\n                    }\n                  },\n                  cap: function (n) {\n                    switch (n) {\n                      case g.butt:\n                        this.ta = \"butt\";\n                        break;\n                      case g.round:\n                        this.ta = \"round\";\n                        break;\n                      case g.square:\n                        this.ta = \"square\";\n                    }\n                  },\n                  style: function (n) {\n                    this.Ua = n;\n                  },\n                  blendMode: function (n) {\n                    this.Sa = b(n);\n                  },\n                  linearGradient: function (n, u, D, B) {\n                    this.oa = {\n                      Pa: n,\n                      Qa: u,\n                      Ha: D,\n                      Ia: B,\n                      za: []\n                    };\n                  },\n                  radialGradient: function (n, u, D, B) {\n                    this.oa = {\n                      Pa: n,\n                      Qa: u,\n                      Ha: D,\n                      Ia: B,\n                      za: [],\n                      mb: !0\n                    };\n                  },\n                  addStop: function (n, u) {\n                    this.oa.za.push({\n                      color: n,\n                      stop: u\n                    });\n                  },\n                  completeGradient: function () {},\n                  draw: function (n, u, D) {\n                    let B = this.Ua;\n                    var E = this.Da,\n                      G = this.oa;\n                    n.globalCompositeOperation = this.Sa;\n                    if (null != G) {\n                      E = G.Pa;\n                      var A = G.Qa;\n                      const R = G.Ha;\n                      var C = G.Ia;\n                      const K = G.za;\n                      G.mb ? (G = R - E, C -= A, E = n.createRadialGradient(E, A, 0, E, A, Math.sqrt(G * G + C * C))) : E = n.createLinearGradient(E, A, R, C);\n                      for (let U = 0, L = K.length; U < L; U++) A = K[U], E.addColorStop(A.stop, a(A.color));\n                      this.Da = E;\n                      this.oa = null;\n                    }\n                    switch (B) {\n                      case r:\n                        n.strokeStyle = E;\n                        n.lineWidth = this.Wa;\n                        n.lineCap = this.ta;\n                        n.lineJoin = this.ua;\n                        n.stroke(u);\n                        break;\n                      case p:\n                        n.fillStyle = E, n.fill(u, D);\n                    }\n                  }\n                });\n              const w = new Set();\n              let z = null,\n                J = [],\n                P = 0,\n                X = 0;\n              var y = Rive.CanvasRenderer = h.extend(\"Renderer\", {\n                __construct: function (n) {\n                  this.__parent.__construct.call(this);\n                  this.fa = [1, 0, 0, 1, 0, 0];\n                  this.Z = n.getContext(\"2d\");\n                  this.Ba = n;\n                  this.ba = [];\n                },\n                save: function () {\n                  this.fa.push(...this.fa.slice(this.fa.length - 6));\n                  this.ba.push(this.Z.save.bind(this.Z));\n                },\n                restore: function () {\n                  const n = this.fa.length - 6;\n                  if (6 > n) throw \"restore() called without matching save().\";\n                  this.fa.splice(n);\n                  this.ba.push(this.Z.restore.bind(this.Z));\n                },\n                transform: function (n, u, D, B, E, G) {\n                  const A = this.fa,\n                    C = A.length - 6;\n                  A.splice(C, 6, A[C] * n + A[C + 2] * u, A[C + 1] * n + A[C + 3] * u, A[C] * D + A[C + 2] * B, A[C + 1] * D + A[C + 3] * B, A[C] * E + A[C + 2] * G + A[C + 4], A[C + 1] * E + A[C + 3] * G + A[C + 5]);\n                  this.ba.push(this.Z.transform.bind(this.Z, n, u, D, B, E, G));\n                },\n                rotate: function (n) {\n                  const u = Math.sin(n);\n                  n = Math.cos(n);\n                  this.transform(n, u, -u, n, 0, 0);\n                },\n                _drawPath: function (n, u) {\n                  this.ba.push(u.draw.bind(u, this.Z, n.ga, n.Ca === t ? \"evenodd\" : \"nonzero\"));\n                },\n                drawImage: function (n) {\n                  for (var _len = arguments.length, u = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                    u[_key - 1] = arguments[_key];\n                  }\n                  var D = this.Z;\n                  this.ba.push(function () {\n                    D.drawImage(n, ...u);\n                  });\n                },\n                _drawRiveImage: function (n, u, D) {\n                  var B = n.Ta;\n                  if (B) {\n                    var E = this.Z,\n                      G = b(u);\n                    this.ba.push(function () {\n                      E.globalCompositeOperation = G;\n                      E.globalAlpha = D;\n                      E.drawImage(B, 0, 0);\n                      E.globalAlpha = 1;\n                    });\n                  }\n                },\n                _getMatrix: function (n) {\n                  const u = this.fa,\n                    D = u.length - 6;\n                  for (let B = 0; 6 > B; ++B) n[B] = u[D + B];\n                },\n                _drawImageMesh: function (n, u, D, B, E, G, A, C, R, K) {\n                  var U = this.Z.canvas.width,\n                    L = this.Z.canvas.height;\n                  const pb = R - A,\n                    qb = K - C;\n                  A = Math.max(A, 0);\n                  C = Math.max(C, 0);\n                  R = Math.min(R, U);\n                  K = Math.min(K, L);\n                  const sa = R - A,\n                    ta = K - C;\n                  console.assert(sa <= Math.min(pb, U));\n                  console.assert(ta <= Math.min(qb, L));\n                  if (!(0 >= sa || 0 >= ta)) {\n                    R = sa < pb || ta < qb;\n                    U = K = 1;\n                    var ia = Math.ceil(sa * K),\n                      ja = Math.ceil(ta * U);\n                    L = fa.ob();\n                    ia > L && (K *= L / ia, ia = L);\n                    ja > L && (U *= L / ja, ja = L);\n                    z || (z = new m.DynamicRectanizer(L), z.reset(512, 512));\n                    L = z.addRect(ia, ja);\n                    0 > L && (c(), w.add(this), L = z.addRect(ia, ja), console.assert(0 <= L));\n                    var rb = L & 65535,\n                      sb = L >> 16;\n                    J.push({\n                      la: this.fa.slice(this.fa.length - 6),\n                      image: n,\n                      Ea: rb,\n                      Fa: sb,\n                      pb: A,\n                      qb: C,\n                      yb: ia,\n                      Ka: ja,\n                      ra: K,\n                      sa: U,\n                      Aa: new Float32Array(B),\n                      Ra: new Float32Array(E),\n                      indices: new Uint16Array(G),\n                      rb: R,\n                      Oa: n.va << 1 | (R ? 1 : 0)\n                    });\n                    P += B.length;\n                    X += G.length;\n                    var na = this.Z,\n                      Yb = b(u);\n                    this.ba.push(function () {\n                      na.save();\n                      na.resetTransform();\n                      na.globalCompositeOperation = Yb;\n                      na.globalAlpha = D;\n                      na.drawImage(fa.canvas(), rb, sb, ia, ja, A, C, sa, ta);\n                      na.restore();\n                    });\n                  }\n                },\n                _clipPath: function (n) {\n                  this.ba.push(this.Z.clip.bind(this.Z, n.ga, n.Ca === t ? \"evenodd\" : \"nonzero\"));\n                },\n                clear: function () {\n                  w.add(this);\n                  this.ba.push(this.Z.clearRect.bind(this.Z, 0, 0, this.Ba.width, this.Ba.height));\n                },\n                flush: function () {},\n                translate: function (n, u) {\n                  this.transform(1, 0, 0, 1, n, u);\n                }\n              });\n              Rive.makeRenderer = function (n) {\n                return new y(n);\n              };\n              Rive.renderFactory = {\n                makeRenderPaint: function () {\n                  return new I();\n                },\n                makeRenderPath: function () {\n                  return new F();\n                },\n                makeRenderImage: function () {\n                  return new q();\n                }\n              };\n              let da = Rive.load,\n                Xa = null;\n              Rive.load = function (n) {\n                return new Promise(function (u) {\n                  let D = null;\n                  Xa = {\n                    total: 0,\n                    loaded: 0,\n                    ready: function () {\n                      u(D);\n                    }\n                  };\n                  D = da(n);\n                  0 == Xa.total && u(D);\n                });\n              };\n              d = new ca();\n              Rive.requestAnimationFrame = d.requestAnimationFrame.bind(d);\n              Rive.cancelAnimationFrame = d.cancelAnimationFrame.bind(d);\n              Rive.enableFPSCounter = d.cb.bind(d);\n              Rive.disableFPSCounter = d.$a;\n              d.La = c;\n              Rive.cleanup = function () {\n                z && z.delete();\n              };\n            };\n            var ha = Object.assign({}, m),\n              ka = \"object\" == typeof window,\n              la = \"function\" == typeof importScripts,\n              x = \"\",\n              ma,\n              oa;\n            if (ka || la) la ? x = self.location.href : \"undefined\" != typeof document && document.currentScript && (x = document.currentScript.src), _scriptDir && (x = _scriptDir), 0 !== x.indexOf(\"blob:\") ? x = x.substr(0, x.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1) : x = \"\", la && (oa = b => {\n              var a = new XMLHttpRequest();\n              a.open(\"GET\", b, !1);\n              a.responseType = \"arraybuffer\";\n              a.send(null);\n              return new Uint8Array(a.response);\n            }), ma = (b, a, c) => {\n              var d = new XMLHttpRequest();\n              d.open(\"GET\", b, !0);\n              d.responseType = \"arraybuffer\";\n              d.onload = () => {\n                200 == d.status || 0 == d.status && d.response ? a(d.response) : c();\n              };\n              d.onerror = c;\n              d.send(null);\n            };\n            var pa = m.print || console.log.bind(console),\n              qa = m.printErr || console.warn.bind(console);\n            Object.assign(m, ha);\n            ha = null;\n            var ra;\n            m.wasmBinary && (ra = m.wasmBinary);\n            var noExitRuntime = m.noExitRuntime || !0;\n            \"object\" != typeof WebAssembly && ua(\"no native wasm support detected\");\n            var va,\n              wa = !1,\n              xa = \"undefined\" != typeof TextDecoder ? new TextDecoder(\"utf8\") : void 0;\n            function ya(b, a, c) {\n              var d = a + c;\n              for (c = a; b[c] && !(c >= d);) ++c;\n              if (16 < c - a && b.buffer && xa) return xa.decode(b.subarray(a, c));\n              for (d = \"\"; a < c;) {\n                var e = b[a++];\n                if (e & 128) {\n                  var f = b[a++] & 63;\n                  if (192 == (e & 224)) d += String.fromCharCode((e & 31) << 6 | f);else {\n                    var h = b[a++] & 63;\n                    e = 224 == (e & 240) ? (e & 15) << 12 | f << 6 | h : (e & 7) << 18 | f << 12 | h << 6 | b[a++] & 63;\n                    65536 > e ? d += String.fromCharCode(e) : (e -= 65536, d += String.fromCharCode(55296 | e >> 10, 56320 | e & 1023));\n                  }\n                } else d += String.fromCharCode(e);\n              }\n              return d;\n            }\n            var za, Aa, H, Ba, Ca, Da, M, Ea, Fa;\n            function Ga() {\n              var b = va.buffer;\n              za = b;\n              m.HEAP8 = Aa = new Int8Array(b);\n              m.HEAP16 = Ba = new Int16Array(b);\n              m.HEAP32 = Da = new Int32Array(b);\n              m.HEAPU8 = H = new Uint8Array(b);\n              m.HEAPU16 = Ca = new Uint16Array(b);\n              m.HEAPU32 = M = new Uint32Array(b);\n              m.HEAPF32 = Ea = new Float32Array(b);\n              m.HEAPF64 = Fa = new Float64Array(b);\n            }\n            var Ha,\n              Ia = [],\n              Ja = [],\n              Ka = [];\n            function La() {\n              var b = m.preRun.shift();\n              Ia.unshift(b);\n            }\n            var Ma = 0,\n              Na = null,\n              Oa = null;\n            function ua(b) {\n              if (m.onAbort) m.onAbort(b);\n              b = \"Aborted(\" + b + \")\";\n              qa(b);\n              wa = !0;\n              b = new WebAssembly.RuntimeError(b + \". Build with -sASSERTIONS for more info.\");\n              ba(b);\n              throw b;\n            }\n            function Pa() {\n              return N.startsWith(\"data:application/octet-stream;base64,\");\n            }\n            var N;\n            N = \"canvas_advanced.wasm\";\n            if (!Pa()) {\n              var Qa = N;\n              N = m.locateFile ? m.locateFile(Qa, x) : x + Qa;\n            }\n            function Ra() {\n              var b = N;\n              try {\n                if (b == N && ra) return new Uint8Array(ra);\n                if (oa) return oa(b);\n                throw \"both async and sync fetching of the wasm failed\";\n              } catch (a) {\n                ua(a);\n              }\n            }\n            function Sa() {\n              if (!ra && (ka || la)) {\n                if (\"function\" == typeof fetch && !N.startsWith(\"file://\")) return fetch(N, {\n                  credentials: \"same-origin\"\n                }).then(function (b) {\n                  if (!b.ok) throw \"failed to load wasm binary file at '\" + N + \"'\";\n                  return b.arrayBuffer();\n                }).catch(function () {\n                  return Ra();\n                });\n                if (ma) return new Promise(function (b, a) {\n                  ma(N, function (c) {\n                    b(new Uint8Array(c));\n                  }, a);\n                });\n              }\n              return Promise.resolve().then(function () {\n                return Ra();\n              });\n            }\n            function Ta(b) {\n              for (; 0 < b.length;) b.shift()(m);\n            }\n            function Ua(b) {\n              if (void 0 === b) return \"_unknown\";\n              b = b.replace(/[^a-zA-Z0-9_]/g, \"$\");\n              var a = b.charCodeAt(0);\n              return 48 <= a && 57 >= a ? \"_\" + b : b;\n            }\n            function Va(b, a) {\n              b = Ua(b);\n              return function () {\n                return a.apply(this, arguments);\n              };\n            }\n            var O = [{}, {\n                value: void 0\n              }, {\n                value: null\n              }, {\n                value: !0\n              }, {\n                value: !1\n              }],\n              Wa = [];\n            function Ya(b) {\n              var a = Error,\n                c = Va(b, function (d) {\n                  this.name = b;\n                  this.message = d;\n                  d = Error(d).stack;\n                  void 0 !== d && (this.stack = this.toString() + \"\\n\" + d.replace(/^Error(:[^\\n]*)?\\n/, \"\"));\n                });\n              c.prototype = Object.create(a.prototype);\n              c.prototype.constructor = c;\n              c.prototype.toString = function () {\n                return void 0 === this.message ? this.name : this.name + \": \" + this.message;\n              };\n              return c;\n            }\n            var Za = void 0;\n            function Q(b) {\n              throw new Za(b);\n            }\n            var $a = b => {\n                b || Q(\"Cannot use deleted val. handle = \" + b);\n                return O[b].value;\n              },\n              S = b => {\n                switch (b) {\n                  case void 0:\n                    return 1;\n                  case null:\n                    return 2;\n                  case !0:\n                    return 3;\n                  case !1:\n                    return 4;\n                  default:\n                    var a = Wa.length ? Wa.pop() : O.length;\n                    O[a] = {\n                      ya: 1,\n                      value: b\n                    };\n                    return a;\n                }\n              },\n              ab = void 0,\n              bb = void 0;\n            function T(b) {\n              for (var a = \"\"; H[b];) a += bb[H[b++]];\n              return a;\n            }\n            var cb = [];\n            function db() {\n              for (; cb.length;) {\n                var b = cb.pop();\n                b.U.ka = !1;\n                b[\"delete\"]();\n              }\n            }\n            var eb = void 0,\n              V = {};\n            function fb(b, a) {\n              for (void 0 === a && Q(\"ptr should not be undefined\"); b.$;) a = b.na(a), b = b.$;\n              return a;\n            }\n            var gb = {};\n            function hb(b) {\n              b = ib(b);\n              var a = T(b);\n              jb(b);\n              return a;\n            }\n            function kb(b, a) {\n              var c = gb[b];\n              void 0 === c && Q(a + \" has unknown type \" + hb(b));\n              return c;\n            }\n            function lb() {}\n            var mb = !1;\n            function nb(b) {\n              --b.count.value;\n              0 === b.count.value && (b.aa ? b.da.ha(b.aa) : b.X.V.ha(b.W));\n            }\n            function ob(b, a, c) {\n              if (a === c) return b;\n              if (void 0 === c.$) return null;\n              b = ob(b, a, c.$);\n              return null === b ? null : c.ab(b);\n            }\n            var tb = {};\n            function ub(b, a) {\n              a = fb(b, a);\n              return V[a];\n            }\n            var vb = void 0;\n            function wb(b) {\n              throw new vb(b);\n            }\n            function xb(b, a) {\n              a.X && a.W || wb(\"makeClassHandle requires ptr and ptrType\");\n              !!a.da !== !!a.aa && wb(\"Both smartPtrType and smartPtr must be specified\");\n              a.count = {\n                value: 1\n              };\n              return yb(Object.create(b, {\n                U: {\n                  value: a\n                }\n              }));\n            }\n            function yb(b) {\n              if (\"undefined\" === typeof FinalizationRegistry) return yb = a => a, b;\n              mb = new FinalizationRegistry(a => {\n                nb(a.U);\n              });\n              yb = a => {\n                var c = a.U;\n                c.aa && mb.register(a, {\n                  U: c\n                }, a);\n                return a;\n              };\n              lb = a => {\n                mb.unregister(a);\n              };\n              return yb(b);\n            }\n            var zb = {};\n            function Ab(b) {\n              for (; b.length;) {\n                var a = b.pop();\n                b.pop()(a);\n              }\n            }\n            function Bb(b) {\n              return this.fromWireType(Da[b >> 2]);\n            }\n            var Cb = {},\n              Db = {};\n            function W(b, a, c) {\n              function d(g) {\n                g = c(g);\n                g.length !== b.length && wb(\"Mismatched type converter count\");\n                for (var l = 0; l < b.length; ++l) Y(b[l], g[l]);\n              }\n              b.forEach(function (g) {\n                Db[g] = a;\n              });\n              var e = Array(a.length),\n                f = [],\n                h = 0;\n              a.forEach((g, l) => {\n                gb.hasOwnProperty(g) ? e[l] = gb[g] : (f.push(g), Cb.hasOwnProperty(g) || (Cb[g] = []), Cb[g].push(() => {\n                  e[l] = gb[g];\n                  ++h;\n                  h === f.length && d(e);\n                }));\n              });\n              0 === f.length && d(e);\n            }\n            function Eb(b) {\n              switch (b) {\n                case 1:\n                  return 0;\n                case 2:\n                  return 1;\n                case 4:\n                  return 2;\n                case 8:\n                  return 3;\n                default:\n                  throw new TypeError(\"Unknown type size: \" + b);\n              }\n            }\n            function Y(b, a) {\n              let c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n              if (!(\"argPackAdvance\" in a)) throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\n              var d = a.name;\n              b || Q('type \"' + d + '\" must have a positive integer typeid pointer');\n              if (gb.hasOwnProperty(b)) {\n                if (c.lb) return;\n                Q(\"Cannot register type '\" + d + \"' twice\");\n              }\n              gb[b] = a;\n              delete Db[b];\n              Cb.hasOwnProperty(b) && (a = Cb[b], delete Cb[b], a.forEach(e => e()));\n            }\n            function Fb(b) {\n              Q(b.U.X.V.name + \" instance already deleted\");\n            }\n            function Gb() {}\n            function Hb(b, a, c) {\n              if (void 0 === b[a].Y) {\n                var d = b[a];\n                b[a] = function () {\n                  b[a].Y.hasOwnProperty(arguments.length) || Q(\"Function '\" + c + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + b[a].Y + \")!\");\n                  return b[a].Y[arguments.length].apply(this, arguments);\n                };\n                b[a].Y = [];\n                b[a].Y[d.ja] = d;\n              }\n            }\n            function Ib(b, a, c) {\n              m.hasOwnProperty(b) ? ((void 0 === c || void 0 !== m[b].Y && void 0 !== m[b].Y[c]) && Q(\"Cannot register public name '\" + b + \"' twice\"), Hb(m, b, b), m.hasOwnProperty(c) && Q(\"Cannot register multiple overloads of a function with the same number of arguments (\" + c + \")!\"), m[b].Y[c] = a) : (m[b] = a, void 0 !== c && (m[b].zb = c));\n            }\n            function Jb(b, a, c, d, e, f, h, g) {\n              this.name = b;\n              this.constructor = a;\n              this.ea = c;\n              this.ha = d;\n              this.$ = e;\n              this.gb = f;\n              this.na = h;\n              this.ab = g;\n              this.Ma = [];\n            }\n            function Kb(b, a, c) {\n              for (; a !== c;) a.na || Q(\"Expected null or instance of \" + c.name + \", got an instance of \" + a.name), b = a.na(b), a = a.$;\n              return b;\n            }\n            function Lb(b, a) {\n              if (null === a) return this.wa && Q(\"null is not a valid \" + this.name), 0;\n              a.U || Q('Cannot pass \"' + Mb(a) + '\" as a ' + this.name);\n              a.U.W || Q(\"Cannot pass deleted object as a pointer of type \" + this.name);\n              return Kb(a.U.W, a.U.X.V, this.V);\n            }\n            function Nb(b, a) {\n              if (null === a) {\n                this.wa && Q(\"null is not a valid \" + this.name);\n                if (this.qa) {\n                  var c = this.xa();\n                  null !== b && b.push(this.ha, c);\n                  return c;\n                }\n                return 0;\n              }\n              a.U || Q('Cannot pass \"' + Mb(a) + '\" as a ' + this.name);\n              a.U.W || Q(\"Cannot pass deleted object as a pointer of type \" + this.name);\n              !this.pa && a.U.X.pa && Q(\"Cannot convert argument of type \" + (a.U.da ? a.U.da.name : a.U.X.name) + \" to parameter type \" + this.name);\n              c = Kb(a.U.W, a.U.X.V, this.V);\n              if (this.qa) switch (void 0 === a.U.aa && Q(\"Passing raw pointer to smart pointer is illegal\"), this.xb) {\n                case 0:\n                  a.U.da === this ? c = a.U.aa : Q(\"Cannot convert argument of type \" + (a.U.da ? a.U.da.name : a.U.X.name) + \" to parameter type \" + this.name);\n                  break;\n                case 1:\n                  c = a.U.aa;\n                  break;\n                case 2:\n                  if (a.U.da === this) c = a.U.aa;else {\n                    var d = a.clone();\n                    c = this.tb(c, S(function () {\n                      d[\"delete\"]();\n                    }));\n                    null !== b && b.push(this.ha, c);\n                  }\n                  break;\n                default:\n                  Q(\"Unsupporting sharing policy\");\n              }\n              return c;\n            }\n            function Ob(b, a) {\n              if (null === a) return this.wa && Q(\"null is not a valid \" + this.name), 0;\n              a.U || Q('Cannot pass \"' + Mb(a) + '\" as a ' + this.name);\n              a.U.W || Q(\"Cannot pass deleted object as a pointer of type \" + this.name);\n              a.U.X.pa && Q(\"Cannot convert argument of type \" + a.U.X.name + \" to parameter type \" + this.name);\n              return Kb(a.U.W, a.U.X.V, this.V);\n            }\n            function Pb(b, a, c, d) {\n              this.name = b;\n              this.V = a;\n              this.wa = c;\n              this.pa = d;\n              this.qa = !1;\n              this.ha = this.tb = this.xa = this.Na = this.xb = this.sb = void 0;\n              void 0 !== a.$ ? this.toWireType = Nb : (this.toWireType = d ? Lb : Ob, this.ca = null);\n            }\n            function Qb(b, a, c) {\n              m.hasOwnProperty(b) || wb(\"Replacing nonexistant public symbol\");\n              void 0 !== m[b].Y && void 0 !== c ? m[b].Y[c] = a : (m[b] = a, m[b].ja = c);\n            }\n            function Rb(b, a) {\n              var c = [];\n              return function () {\n                c.length = 0;\n                Object.assign(c, arguments);\n                if (b.includes(\"j\")) {\n                  var d = m[\"dynCall_\" + b];\n                  d = c && c.length ? d.apply(null, [a].concat(c)) : d.call(null, a);\n                } else d = Ha.get(a).apply(null, c);\n                return d;\n              };\n            }\n            function Z(b, a) {\n              b = T(b);\n              var c = b.includes(\"j\") ? Rb(b, a) : Ha.get(a);\n              \"function\" != typeof c && Q(\"unknown function pointer with signature \" + b + \": \" + a);\n              return c;\n            }\n            var Sb = void 0;\n            function Tb(b, a) {\n              function c(f) {\n                e[f] || gb[f] || (Db[f] ? Db[f].forEach(c) : (d.push(f), e[f] = !0));\n              }\n              var d = [],\n                e = {};\n              a.forEach(c);\n              throw new Sb(b + \": \" + d.map(hb).join([\", \"]));\n            }\n            function Ub(b, a, c, d, e) {\n              var f = a.length;\n              2 > f && Q(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\n              var h = null !== a[1] && null !== c,\n                g = !1;\n              for (c = 1; c < a.length; ++c) if (null !== a[c] && void 0 === a[c].ca) {\n                g = !0;\n                break;\n              }\n              var l = \"void\" !== a[0].name,\n                k = f - 2,\n                p = Array(k),\n                r = [],\n                t = [];\n              return function () {\n                arguments.length !== k && Q(\"function \" + b + \" called with \" + arguments.length + \" arguments, expected \" + k + \" args!\");\n                t.length = 0;\n                r.length = h ? 2 : 1;\n                r[0] = e;\n                if (h) {\n                  var v = a[1].toWireType(t, this);\n                  r[1] = v;\n                }\n                for (var q = 0; q < k; ++q) p[q] = a[q + 2].toWireType(t, arguments[q]), r.push(p[q]);\n                q = d.apply(null, r);\n                if (g) Ab(t);else for (var F = h ? 1 : 2; F < a.length; F++) {\n                  var I = 1 === F ? v : p[F - 2];\n                  null !== a[F].ca && a[F].ca(I);\n                }\n                v = l ? a[0].fromWireType(q) : void 0;\n                return v;\n              };\n            }\n            function Vb(b, a) {\n              for (var c = [], d = 0; d < b; d++) c.push(M[a + 4 * d >> 2]);\n              return c;\n            }\n            function Wb(b, a, c) {\n              b instanceof Object || Q(c + ' with invalid \"this\": ' + b);\n              b instanceof a.V.constructor || Q(c + ' incompatible with \"this\" of type ' + b.constructor.name);\n              b.U.W || Q(\"cannot call emscripten binding method \" + c + \" on deleted object\");\n              return Kb(b.U.W, b.U.X.V, a.V);\n            }\n            function Xb(b) {\n              4 < b && 0 === --O[b].ya && (O[b] = void 0, Wa.push(b));\n            }\n            function Zb(b, a, c) {\n              switch (a) {\n                case 0:\n                  return function (d) {\n                    return this.fromWireType((c ? Aa : H)[d]);\n                  };\n                case 1:\n                  return function (d) {\n                    return this.fromWireType((c ? Ba : Ca)[d >> 1]);\n                  };\n                case 2:\n                  return function (d) {\n                    return this.fromWireType((c ? Da : M)[d >> 2]);\n                  };\n                default:\n                  throw new TypeError(\"Unknown integer type: \" + b);\n              }\n            }\n            function Mb(b) {\n              if (null === b) return \"null\";\n              var a = typeof b;\n              return \"object\" === a || \"array\" === a || \"function\" === a ? b.toString() : \"\" + b;\n            }\n            function $b(b, a) {\n              switch (a) {\n                case 2:\n                  return function (c) {\n                    return this.fromWireType(Ea[c >> 2]);\n                  };\n                case 3:\n                  return function (c) {\n                    return this.fromWireType(Fa[c >> 3]);\n                  };\n                default:\n                  throw new TypeError(\"Unknown float type: \" + b);\n              }\n            }\n            function ac(b, a, c) {\n              switch (a) {\n                case 0:\n                  return c ? function (d) {\n                    return Aa[d];\n                  } : function (d) {\n                    return H[d];\n                  };\n                case 1:\n                  return c ? function (d) {\n                    return Ba[d >> 1];\n                  } : function (d) {\n                    return Ca[d >> 1];\n                  };\n                case 2:\n                  return c ? function (d) {\n                    return Da[d >> 2];\n                  } : function (d) {\n                    return M[d >> 2];\n                  };\n                default:\n                  throw new TypeError(\"Unknown integer type: \" + b);\n              }\n            }\n            var bc = \"undefined\" != typeof TextDecoder ? new TextDecoder(\"utf-16le\") : void 0;\n            function cc(b, a) {\n              var c = b >> 1;\n              for (var d = c + a / 2; !(c >= d) && Ca[c];) ++c;\n              c <<= 1;\n              if (32 < c - b && bc) return bc.decode(H.subarray(b, c));\n              c = \"\";\n              for (d = 0; !(d >= a / 2); ++d) {\n                var e = Ba[b + 2 * d >> 1];\n                if (0 == e) break;\n                c += String.fromCharCode(e);\n              }\n              return c;\n            }\n            function dc(b, a, c) {\n              void 0 === c && (c = 2147483647);\n              if (2 > c) return 0;\n              c -= 2;\n              var d = a;\n              c = c < 2 * b.length ? c / 2 : b.length;\n              for (var e = 0; e < c; ++e) Ba[a >> 1] = b.charCodeAt(e), a += 2;\n              Ba[a >> 1] = 0;\n              return a - d;\n            }\n            function ec(b) {\n              return 2 * b.length;\n            }\n            function fc(b, a) {\n              for (var c = 0, d = \"\"; !(c >= a / 4);) {\n                var e = Da[b + 4 * c >> 2];\n                if (0 == e) break;\n                ++c;\n                65536 <= e ? (e -= 65536, d += String.fromCharCode(55296 | e >> 10, 56320 | e & 1023)) : d += String.fromCharCode(e);\n              }\n              return d;\n            }\n            function gc(b, a, c) {\n              void 0 === c && (c = 2147483647);\n              if (4 > c) return 0;\n              var d = a;\n              c = d + c - 4;\n              for (var e = 0; e < b.length; ++e) {\n                var f = b.charCodeAt(e);\n                if (55296 <= f && 57343 >= f) {\n                  var h = b.charCodeAt(++e);\n                  f = 65536 + ((f & 1023) << 10) | h & 1023;\n                }\n                Da[a >> 2] = f;\n                a += 4;\n                if (a + 4 > c) break;\n              }\n              Da[a >> 2] = 0;\n              return a - d;\n            }\n            function hc(b) {\n              for (var a = 0, c = 0; c < b.length; ++c) {\n                var d = b.charCodeAt(c);\n                55296 <= d && 57343 >= d && ++c;\n                a += 4;\n              }\n              return a;\n            }\n            var ic = {};\n            function jc(b) {\n              var a = ic[b];\n              return void 0 === a ? T(b) : a;\n            }\n            var kc = [];\n            function lc(b) {\n              var a = kc.length;\n              kc.push(b);\n              return a;\n            }\n            function mc(b, a) {\n              for (var c = Array(b), d = 0; d < b; ++d) c[d] = kb(M[a + 4 * d >> 2], \"parameter \" + d);\n              return c;\n            }\n            var nc = [],\n              oc = [null, [], []];\n            Za = m.BindingError = Ya(\"BindingError\");\n            m.count_emval_handles = function () {\n              for (var b = 0, a = 5; a < O.length; ++a) void 0 !== O[a] && ++b;\n              return b;\n            };\n            m.get_first_emval = function () {\n              for (var b = 5; b < O.length; ++b) if (void 0 !== O[b]) return O[b];\n              return null;\n            };\n            ab = m.PureVirtualError = Ya(\"PureVirtualError\");\n            for (var pc = Array(256), qc = 0; 256 > qc; ++qc) pc[qc] = String.fromCharCode(qc);\n            bb = pc;\n            m.getInheritedInstanceCount = function () {\n              return Object.keys(V).length;\n            };\n            m.getLiveInheritedInstances = function () {\n              var b = [],\n                a;\n              for (a in V) V.hasOwnProperty(a) && b.push(V[a]);\n              return b;\n            };\n            m.flushPendingDeletes = db;\n            m.setDelayFunction = function (b) {\n              eb = b;\n              cb.length && eb && eb(db);\n            };\n            vb = m.InternalError = Ya(\"InternalError\");\n            Gb.prototype.isAliasOf = function (b) {\n              if (!(this instanceof Gb && b instanceof Gb)) return !1;\n              var a = this.U.X.V,\n                c = this.U.W,\n                d = b.U.X.V;\n              for (b = b.U.W; a.$;) c = a.na(c), a = a.$;\n              for (; d.$;) b = d.na(b), d = d.$;\n              return a === d && c === b;\n            };\n            Gb.prototype.clone = function () {\n              this.U.W || Fb(this);\n              if (this.U.ma) return this.U.count.value += 1, this;\n              var b = yb,\n                a = Object,\n                c = a.create,\n                d = Object.getPrototypeOf(this),\n                e = this.U;\n              b = b(c.call(a, d, {\n                U: {\n                  value: {\n                    count: e.count,\n                    ka: e.ka,\n                    ma: e.ma,\n                    W: e.W,\n                    X: e.X,\n                    aa: e.aa,\n                    da: e.da\n                  }\n                }\n              }));\n              b.U.count.value += 1;\n              b.U.ka = !1;\n              return b;\n            };\n            Gb.prototype[\"delete\"] = function () {\n              this.U.W || Fb(this);\n              this.U.ka && !this.U.ma && Q(\"Object already scheduled for deletion\");\n              lb(this);\n              nb(this.U);\n              this.U.ma || (this.U.aa = void 0, this.U.W = void 0);\n            };\n            Gb.prototype.isDeleted = function () {\n              return !this.U.W;\n            };\n            Gb.prototype.deleteLater = function () {\n              this.U.W || Fb(this);\n              this.U.ka && !this.U.ma && Q(\"Object already scheduled for deletion\");\n              cb.push(this);\n              1 === cb.length && eb && eb(db);\n              this.U.ka = !0;\n              return this;\n            };\n            Pb.prototype.hb = function (b) {\n              this.Na && (b = this.Na(b));\n              return b;\n            };\n            Pb.prototype.Ga = function (b) {\n              this.ha && this.ha(b);\n            };\n            Pb.prototype.argPackAdvance = 8;\n            Pb.prototype.readValueFromPointer = Bb;\n            Pb.prototype.deleteObject = function (b) {\n              if (null !== b) b[\"delete\"]();\n            };\n            Pb.prototype.fromWireType = function (b) {\n              function a() {\n                return this.qa ? xb(this.V.ea, {\n                  X: this.sb,\n                  W: c,\n                  da: this,\n                  aa: b\n                }) : xb(this.V.ea, {\n                  X: this,\n                  W: b\n                });\n              }\n              var c = this.hb(b);\n              if (!c) return this.Ga(b), null;\n              var d = ub(this.V, c);\n              if (void 0 !== d) {\n                if (0 === d.U.count.value) return d.U.W = c, d.U.aa = b, d.clone();\n                d = d.clone();\n                this.Ga(b);\n                return d;\n              }\n              d = this.V.gb(c);\n              d = tb[d];\n              if (!d) return a.call(this);\n              d = this.pa ? d.Xa : d.pointerType;\n              var e = ob(c, this.V, d.V);\n              return null === e ? a.call(this) : this.qa ? xb(d.V.ea, {\n                X: d,\n                W: e,\n                da: this,\n                aa: b\n              }) : xb(d.V.ea, {\n                X: d,\n                W: e\n              });\n            };\n            Sb = m.UnboundTypeError = Ya(\"UnboundTypeError\");\n            var sc = {\n              G: function (b, a, c) {\n                b = T(b);\n                a = kb(a, \"wrapper\");\n                c = $a(c);\n                var d = [].slice,\n                  e = a.V,\n                  f = e.ea,\n                  h = e.$.ea,\n                  g = e.$.constructor;\n                b = Va(b, function () {\n                  e.$.Ma.forEach(function (k) {\n                    if (this[k] === h[k]) throw new ab(\"Pure virtual function \" + k + \" must be implemented in JavaScript\");\n                  }.bind(this));\n                  Object.defineProperty(this, \"__parent\", {\n                    value: f\n                  });\n                  this.__construct.apply(this, d.call(arguments));\n                });\n                f.__construct = function () {\n                  this === f && Q(\"Pass correct 'this' to __construct\");\n                  var k = g.implement.apply(void 0, [this].concat(d.call(arguments)));\n                  lb(k);\n                  var p = k.U;\n                  k.notifyOnDestruction();\n                  p.ma = !0;\n                  Object.defineProperties(this, {\n                    U: {\n                      value: p\n                    }\n                  });\n                  yb(this);\n                  k = p.W;\n                  k = fb(e, k);\n                  V.hasOwnProperty(k) ? Q(\"Tried to register registered instance: \" + k) : V[k] = this;\n                };\n                f.__destruct = function () {\n                  this === f && Q(\"Pass correct 'this' to __destruct\");\n                  lb(this);\n                  var k = this.U.W;\n                  k = fb(e, k);\n                  V.hasOwnProperty(k) ? delete V[k] : Q(\"Tried to unregister unregistered instance: \" + k);\n                };\n                b.prototype = Object.create(f);\n                for (var l in c) b.prototype[l] = c[l];\n                return S(b);\n              },\n              J: function (b) {\n                var a = zb[b];\n                delete zb[b];\n                var c = a.xa,\n                  d = a.ha,\n                  e = a.Ja,\n                  f = e.map(h => h.kb).concat(e.map(h => h.vb));\n                W([b], f, h => {\n                  var g = {};\n                  e.forEach((l, k) => {\n                    var p = h[k],\n                      r = l.ib,\n                      t = l.jb,\n                      v = h[k + e.length],\n                      q = l.ub,\n                      F = l.wb;\n                    g[l.eb] = {\n                      read: I => p.fromWireType(r(t, I)),\n                      write: (I, w) => {\n                        var z = [];\n                        q(F, I, v.toWireType(z, w));\n                        Ab(z);\n                      }\n                    };\n                  });\n                  return [{\n                    name: a.name,\n                    fromWireType: function (l) {\n                      var k = {},\n                        p;\n                      for (p in g) k[p] = g[p].read(l);\n                      d(l);\n                      return k;\n                    },\n                    toWireType: function (l, k) {\n                      for (var p in g) if (!(p in k)) throw new TypeError('Missing field:  \"' + p + '\"');\n                      var r = c();\n                      for (p in g) g[p].write(r, k[p]);\n                      null !== l && l.push(d, r);\n                      return r;\n                    },\n                    argPackAdvance: 8,\n                    readValueFromPointer: Bb,\n                    ca: d\n                  }];\n                });\n              },\n              z: function () {},\n              E: function (b, a, c, d, e) {\n                var f = Eb(c);\n                a = T(a);\n                Y(b, {\n                  name: a,\n                  fromWireType: function (h) {\n                    return !!h;\n                  },\n                  toWireType: function (h, g) {\n                    return g ? d : e;\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: function (h) {\n                    if (1 === c) var g = Aa;else if (2 === c) g = Ba;else if (4 === c) g = Da;else throw new TypeError(\"Unknown boolean type size: \" + a);\n                    return this.fromWireType(g[h >> f]);\n                  },\n                  ca: null\n                });\n              },\n              e: function (b, a, c, d, e, f, h, g, l, k, p, r, t) {\n                p = T(p);\n                f = Z(e, f);\n                g && (g = Z(h, g));\n                k && (k = Z(l, k));\n                t = Z(r, t);\n                var v = Ua(p);\n                Ib(v, function () {\n                  Tb(\"Cannot construct \" + p + \" due to unbound types\", [d]);\n                });\n                W([b, a, c], d ? [d] : [], function (q) {\n                  q = q[0];\n                  if (d) {\n                    var F = q.V;\n                    var I = F.ea;\n                  } else I = Gb.prototype;\n                  q = Va(v, function () {\n                    if (Object.getPrototypeOf(this) !== w) throw new Za(\"Use 'new' to construct \" + p);\n                    if (void 0 === z.ia) throw new Za(p + \" has no accessible constructor\");\n                    var P = z.ia[arguments.length];\n                    if (void 0 === P) throw new Za(\"Tried to invoke ctor of \" + p + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(z.ia).toString() + \") parameters instead!\");\n                    return P.apply(this, arguments);\n                  });\n                  var w = Object.create(I, {\n                    constructor: {\n                      value: q\n                    }\n                  });\n                  q.prototype = w;\n                  var z = new Jb(p, q, w, t, F, f, g, k);\n                  F = new Pb(p, z, !0, !1);\n                  I = new Pb(p + \"*\", z, !1, !1);\n                  var J = new Pb(p + \" const*\", z, !1, !0);\n                  tb[b] = {\n                    pointerType: I,\n                    Xa: J\n                  };\n                  Qb(v, q);\n                  return [F, I, J];\n                });\n              },\n              k: function (b, a, c, d, e, f, h) {\n                var g = Vb(c, d);\n                a = T(a);\n                f = Z(e, f);\n                W([], [b], function (l) {\n                  function k() {\n                    Tb(\"Cannot call \" + p + \" due to unbound types\", g);\n                  }\n                  l = l[0];\n                  var p = l.name + \".\" + a;\n                  a.startsWith(\"@@\") && (a = Symbol[a.substring(2)]);\n                  var r = l.V.constructor;\n                  void 0 === r[a] ? (k.ja = c - 1, r[a] = k) : (Hb(r, a, p), r[a].Y[c - 1] = k);\n                  W([], g, function (t) {\n                    t = Ub(p, [t[0], null].concat(t.slice(1)), null, f, h);\n                    void 0 === r[a].Y ? (t.ja = c - 1, r[a] = t) : r[a].Y[c - 1] = t;\n                    return [];\n                  });\n                  return [];\n                });\n              },\n              s: function (b, a, c, d, e, f, h, g) {\n                a = T(a);\n                f = Z(e, f);\n                W([], [b], function (l) {\n                  l = l[0];\n                  var k = l.name + \".\" + a,\n                    p = {\n                      get: function () {\n                        Tb(\"Cannot access \" + k + \" due to unbound types\", [c]);\n                      },\n                      enumerable: !0,\n                      configurable: !0\n                    };\n                  p.set = g ? () => {\n                    Tb(\"Cannot access \" + k + \" due to unbound types\", [c]);\n                  } : () => {\n                    Q(k + \" is a read-only property\");\n                  };\n                  Object.defineProperty(l.V.constructor, a, p);\n                  W([], [c], function (r) {\n                    r = r[0];\n                    var t = {\n                      get: function () {\n                        return r.fromWireType(f(d));\n                      },\n                      enumerable: !0\n                    };\n                    g && (g = Z(h, g), t.set = v => {\n                      var q = [];\n                      g(d, r.toWireType(q, v));\n                      Ab(q);\n                    });\n                    Object.defineProperty(l.V.constructor, a, t);\n                    return [];\n                  });\n                  return [];\n                });\n              },\n              o: function (b, a, c, d, e, f) {\n                0 < a || ua();\n                var h = Vb(a, c);\n                e = Z(d, e);\n                W([], [b], function (g) {\n                  g = g[0];\n                  var l = \"constructor \" + g.name;\n                  void 0 === g.V.ia && (g.V.ia = []);\n                  if (void 0 !== g.V.ia[a - 1]) throw new Za(\"Cannot register multiple constructors with identical number of parameters (\" + (a - 1) + \") for class '\" + g.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\n                  g.V.ia[a - 1] = () => {\n                    Tb(\"Cannot construct \" + g.name + \" due to unbound types\", h);\n                  };\n                  W([], h, function (k) {\n                    k.splice(1, 0, null);\n                    g.V.ia[a - 1] = Ub(l, k, null, e, f);\n                    return [];\n                  });\n                  return [];\n                });\n              },\n              a: function (b, a, c, d, e, f, h, g) {\n                var l = Vb(c, d);\n                a = T(a);\n                f = Z(e, f);\n                W([], [b], function (k) {\n                  function p() {\n                    Tb(\"Cannot call \" + r + \" due to unbound types\", l);\n                  }\n                  k = k[0];\n                  var r = k.name + \".\" + a;\n                  a.startsWith(\"@@\") && (a = Symbol[a.substring(2)]);\n                  g && k.V.Ma.push(a);\n                  var t = k.V.ea,\n                    v = t[a];\n                  void 0 === v || void 0 === v.Y && v.className !== k.name && v.ja === c - 2 ? (p.ja = c - 2, p.className = k.name, t[a] = p) : (Hb(t, a, r), t[a].Y[c - 2] = p);\n                  W([], l, function (q) {\n                    q = Ub(r, q, k, f, h);\n                    void 0 === t[a].Y ? (q.ja = c - 2, t[a] = q) : t[a].Y[c - 2] = q;\n                    return [];\n                  });\n                  return [];\n                });\n              },\n              d: function (b, a, c, d, e, f, h, g, l, k) {\n                a = T(a);\n                e = Z(d, e);\n                W([], [b], function (p) {\n                  p = p[0];\n                  var r = p.name + \".\" + a,\n                    t = {\n                      get: function () {\n                        Tb(\"Cannot access \" + r + \" due to unbound types\", [c, h]);\n                      },\n                      enumerable: !0,\n                      configurable: !0\n                    };\n                  t.set = l ? () => {\n                    Tb(\"Cannot access \" + r + \" due to unbound types\", [c, h]);\n                  } : () => {\n                    Q(r + \" is a read-only property\");\n                  };\n                  Object.defineProperty(p.V.ea, a, t);\n                  W([], l ? [c, h] : [c], function (v) {\n                    var q = v[0],\n                      F = {\n                        get: function () {\n                          var w = Wb(this, p, r + \" getter\");\n                          return q.fromWireType(e(f, w));\n                        },\n                        enumerable: !0\n                      };\n                    if (l) {\n                      l = Z(g, l);\n                      var I = v[1];\n                      F.set = function (w) {\n                        var z = Wb(this, p, r + \" setter\"),\n                          J = [];\n                        l(k, z, I.toWireType(J, w));\n                        Ab(J);\n                      };\n                    }\n                    Object.defineProperty(p.V.ea, a, F);\n                    return [];\n                  });\n                  return [];\n                });\n              },\n              D: function (b, a) {\n                a = T(a);\n                Y(b, {\n                  name: a,\n                  fromWireType: function (c) {\n                    var d = $a(c);\n                    Xb(c);\n                    return d;\n                  },\n                  toWireType: function (c, d) {\n                    return S(d);\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: Bb,\n                  ca: null\n                });\n              },\n              l: function (b, a, c, d) {\n                function e() {}\n                c = Eb(c);\n                a = T(a);\n                e.values = {};\n                Y(b, {\n                  name: a,\n                  constructor: e,\n                  fromWireType: function (f) {\n                    return this.constructor.values[f];\n                  },\n                  toWireType: function (f, h) {\n                    return h.value;\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: Zb(a, c, d),\n                  ca: null\n                });\n                Ib(a, e);\n              },\n              c: function (b, a, c) {\n                var d = kb(b, \"enum\");\n                a = T(a);\n                b = d.constructor;\n                d = Object.create(d.constructor.prototype, {\n                  value: {\n                    value: c\n                  },\n                  constructor: {\n                    value: Va(d.name + \"_\" + a, function () {})\n                  }\n                });\n                b.values[c] = d;\n                b[a] = d;\n              },\n              u: function (b, a, c) {\n                c = Eb(c);\n                a = T(a);\n                Y(b, {\n                  name: a,\n                  fromWireType: function (d) {\n                    return d;\n                  },\n                  toWireType: function (d, e) {\n                    return e;\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: $b(a, c),\n                  ca: null\n                });\n              },\n              q: function (b, a, c, d, e, f) {\n                var h = Vb(a, c);\n                b = T(b);\n                e = Z(d, e);\n                Ib(b, function () {\n                  Tb(\"Cannot call \" + b + \" due to unbound types\", h);\n                }, a - 1);\n                W([], h, function (g) {\n                  Qb(b, Ub(b, [g[0], null].concat(g.slice(1)), null, e, f), a - 1);\n                  return [];\n                });\n              },\n              j: function (b, a, c, d, e) {\n                a = T(a);\n                -1 === e && (e = 4294967295);\n                e = Eb(c);\n                var f = g => g;\n                if (0 === d) {\n                  var h = 32 - 8 * c;\n                  f = g => g << h >>> h;\n                }\n                c = a.includes(\"unsigned\") ? function (g, l) {\n                  return l >>> 0;\n                } : function (g, l) {\n                  return l;\n                };\n                Y(b, {\n                  name: a,\n                  fromWireType: f,\n                  toWireType: c,\n                  argPackAdvance: 8,\n                  readValueFromPointer: ac(a, e, 0 !== d),\n                  ca: null\n                });\n              },\n              g: function (b, a, c) {\n                function d(f) {\n                  f >>= 2;\n                  var h = M;\n                  return new e(za, h[f + 1], h[f]);\n                }\n                var e = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array][a];\n                c = T(c);\n                Y(b, {\n                  name: c,\n                  fromWireType: d,\n                  argPackAdvance: 8,\n                  readValueFromPointer: d\n                }, {\n                  lb: !0\n                });\n              },\n              v: function (b, a) {\n                a = T(a);\n                var c = \"std::string\" === a;\n                Y(b, {\n                  name: a,\n                  fromWireType: function (d) {\n                    var e = M[d >> 2],\n                      f = d + 4;\n                    if (c) for (var h = f, g = 0; g <= e; ++g) {\n                      var l = f + g;\n                      if (g == e || 0 == H[l]) {\n                        h = h ? ya(H, h, l - h) : \"\";\n                        if (void 0 === k) var k = h;else k += String.fromCharCode(0), k += h;\n                        h = l + 1;\n                      }\n                    } else {\n                      k = Array(e);\n                      for (g = 0; g < e; ++g) k[g] = String.fromCharCode(H[f + g]);\n                      k = k.join(\"\");\n                    }\n                    jb(d);\n                    return k;\n                  },\n                  toWireType: function (d, e) {\n                    e instanceof ArrayBuffer && (e = new Uint8Array(e));\n                    var f,\n                      h = \"string\" == typeof e;\n                    h || e instanceof Uint8Array || e instanceof Uint8ClampedArray || e instanceof Int8Array || Q(\"Cannot pass non-string to std::string\");\n                    if (c && h) {\n                      var g = 0;\n                      for (f = 0; f < e.length; ++f) {\n                        var l = e.charCodeAt(f);\n                        127 >= l ? g++ : 2047 >= l ? g += 2 : 55296 <= l && 57343 >= l ? (g += 4, ++f) : g += 3;\n                      }\n                      f = g;\n                    } else f = e.length;\n                    g = rc(4 + f + 1);\n                    l = g + 4;\n                    M[g >> 2] = f;\n                    if (c && h) {\n                      if (h = l, l = f + 1, f = H, 0 < l) {\n                        l = h + l - 1;\n                        for (var k = 0; k < e.length; ++k) {\n                          var p = e.charCodeAt(k);\n                          if (55296 <= p && 57343 >= p) {\n                            var r = e.charCodeAt(++k);\n                            p = 65536 + ((p & 1023) << 10) | r & 1023;\n                          }\n                          if (127 >= p) {\n                            if (h >= l) break;\n                            f[h++] = p;\n                          } else {\n                            if (2047 >= p) {\n                              if (h + 1 >= l) break;\n                              f[h++] = 192 | p >> 6;\n                            } else {\n                              if (65535 >= p) {\n                                if (h + 2 >= l) break;\n                                f[h++] = 224 | p >> 12;\n                              } else {\n                                if (h + 3 >= l) break;\n                                f[h++] = 240 | p >> 18;\n                                f[h++] = 128 | p >> 12 & 63;\n                              }\n                              f[h++] = 128 | p >> 6 & 63;\n                            }\n                            f[h++] = 128 | p & 63;\n                          }\n                        }\n                        f[h] = 0;\n                      }\n                    } else if (h) for (h = 0; h < f; ++h) k = e.charCodeAt(h), 255 < k && (jb(l), Q(\"String has UTF-16 code units that do not fit in 8 bits\")), H[l + h] = k;else for (h = 0; h < f; ++h) H[l + h] = e[h];\n                    null !== d && d.push(jb, g);\n                    return g;\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: Bb,\n                  ca: function (d) {\n                    jb(d);\n                  }\n                });\n              },\n              t: function (b, a, c) {\n                c = T(c);\n                if (2 === a) {\n                  var d = cc;\n                  var e = dc;\n                  var f = ec;\n                  var h = () => Ca;\n                  var g = 1;\n                } else 4 === a && (d = fc, e = gc, f = hc, h = () => M, g = 2);\n                Y(b, {\n                  name: c,\n                  fromWireType: function (l) {\n                    for (var k = M[l >> 2], p = h(), r, t = l + 4, v = 0; v <= k; ++v) {\n                      var q = l + 4 + v * a;\n                      if (v == k || 0 == p[q >> g]) t = d(t, q - t), void 0 === r ? r = t : (r += String.fromCharCode(0), r += t), t = q + a;\n                    }\n                    jb(l);\n                    return r;\n                  },\n                  toWireType: function (l, k) {\n                    \"string\" != typeof k && Q(\"Cannot pass non-string to C++ string type \" + c);\n                    var p = f(k),\n                      r = rc(4 + p + a);\n                    M[r >> 2] = p >> g;\n                    e(k, r + 4, p + a);\n                    null !== l && l.push(jb, r);\n                    return r;\n                  },\n                  argPackAdvance: 8,\n                  readValueFromPointer: Bb,\n                  ca: function (l) {\n                    jb(l);\n                  }\n                });\n              },\n              L: function (b, a, c, d, e, f) {\n                zb[b] = {\n                  name: T(a),\n                  xa: Z(c, d),\n                  ha: Z(e, f),\n                  Ja: []\n                };\n              },\n              K: function (b, a, c, d, e, f, h, g, l, k) {\n                zb[b].Ja.push({\n                  eb: T(a),\n                  kb: c,\n                  ib: Z(d, e),\n                  jb: f,\n                  vb: h,\n                  ub: Z(g, l),\n                  wb: k\n                });\n              },\n              F: function (b, a) {\n                a = T(a);\n                Y(b, {\n                  nb: !0,\n                  name: a,\n                  argPackAdvance: 0,\n                  fromWireType: function () {},\n                  toWireType: function () {}\n                });\n              },\n              r: function (b, a, c) {\n                b = $a(b);\n                a = kb(a, \"emval::as\");\n                var d = [],\n                  e = S(d);\n                M[c >> 2] = e;\n                return a.toWireType(d, b);\n              },\n              w: function (b, a, c, d, e) {\n                b = kc[b];\n                a = $a(a);\n                c = jc(c);\n                var f = [];\n                M[d >> 2] = S(f);\n                return b(a, c, f, e);\n              },\n              i: function (b, a, c, d) {\n                b = kc[b];\n                a = $a(a);\n                c = jc(c);\n                b(a, c, null, d);\n              },\n              f: Xb,\n              h: function (b, a) {\n                var c = mc(b, a),\n                  d = c[0];\n                a = d.name + \"_$\" + c.slice(1).map(function (h) {\n                  return h.name;\n                }).join(\"_\") + \"$\";\n                var e = nc[a];\n                if (void 0 !== e) return e;\n                var f = Array(b - 1);\n                e = lc((h, g, l, k) => {\n                  for (var p = 0, r = 0; r < b - 1; ++r) f[r] = c[r + 1].readValueFromPointer(k + p), p += c[r + 1].argPackAdvance;\n                  h = h[g].apply(h, f);\n                  for (r = 0; r < b - 1; ++r) c[r + 1].Za && c[r + 1].Za(f[r]);\n                  if (!d.nb) return d.toWireType(l, h);\n                });\n                return nc[a] = e;\n              },\n              p: function (b) {\n                b = jc(b);\n                return S(m[b]);\n              },\n              I: function (b, a) {\n                b = $a(b);\n                a = $a(a);\n                return S(b[a]);\n              },\n              m: function (b) {\n                4 < b && (O[b].ya += 1);\n              },\n              H: function (b) {\n                return S(jc(b));\n              },\n              n: function (b) {\n                var a = $a(b);\n                Ab(a);\n                Xb(b);\n              },\n              x: function (b, a) {\n                b = kb(b, \"_emval_take_value\");\n                b = b.readValueFromPointer(a);\n                return S(b);\n              },\n              b: function () {\n                ua(\"\");\n              },\n              A: function (b) {\n                var a = H.length;\n                b >>>= 0;\n                if (2147483648 < b) return !1;\n                for (var c = 1; 4 >= c; c *= 2) {\n                  var d = a * (1 + .2 / c);\n                  d = Math.min(d, b + 100663296);\n                  var e = Math;\n                  d = Math.max(b, d);\n                  e = e.min.call(e, 2147483648, d + (65536 - d % 65536) % 65536);\n                  a: {\n                    try {\n                      va.grow(e - za.byteLength + 65535 >>> 16);\n                      Ga();\n                      var f = 1;\n                      break a;\n                    } catch (h) {}\n                    f = void 0;\n                  }\n                  if (f) return !0;\n                }\n                return !1;\n              },\n              C: function () {\n                return 52;\n              },\n              y: function () {\n                return 70;\n              },\n              B: function (b, a, c, d) {\n                for (var e = 0, f = 0; f < c; f++) {\n                  var h = M[a >> 2],\n                    g = M[a + 4 >> 2];\n                  a += 8;\n                  for (var l = 0; l < g; l++) {\n                    var k = H[h + l],\n                      p = oc[b];\n                    0 === k || 10 === k ? ((1 === b ? pa : qa)(ya(p, 0)), p.length = 0) : p.push(k);\n                  }\n                  e += g;\n                }\n                M[d >> 2] = e;\n                return 0;\n              }\n            };\n            (function () {\n              function b(e) {\n                m.asm = e.exports;\n                va = m.asm.M;\n                Ga();\n                Ha = m.asm.S;\n                Ja.unshift(m.asm.N);\n                Ma--;\n                m.monitorRunDependencies && m.monitorRunDependencies(Ma);\n                0 == Ma && (null !== Na && (clearInterval(Na), Na = null), Oa && (e = Oa, Oa = null, e()));\n              }\n              function a(e) {\n                b(e.instance);\n              }\n              function c(e) {\n                return Sa().then(function (f) {\n                  return WebAssembly.instantiate(f, d);\n                }).then(function (f) {\n                  return f;\n                }).then(e, function (f) {\n                  qa(\"failed to asynchronously prepare wasm: \" + f);\n                  ua(f);\n                });\n              }\n              var d = {\n                a: sc\n              };\n              Ma++;\n              m.monitorRunDependencies && m.monitorRunDependencies(Ma);\n              if (m.instantiateWasm) try {\n                return m.instantiateWasm(d, b);\n              } catch (e) {\n                qa(\"Module.instantiateWasm callback failed with error: \" + e), ba(e);\n              }\n              (function () {\n                return ra || \"function\" != typeof WebAssembly.instantiateStreaming || Pa() || N.startsWith(\"file://\") || \"function\" != typeof fetch ? c(a) : fetch(N, {\n                  credentials: \"same-origin\"\n                }).then(function (e) {\n                  return WebAssembly.instantiateStreaming(e, d).then(a, function (f) {\n                    qa(\"wasm streaming compile failed: \" + f);\n                    qa(\"falling back to ArrayBuffer instantiation\");\n                    return c(a);\n                  });\n                });\n              })().catch(ba);\n              return {};\n            })();\n            m.___wasm_call_ctors = function () {\n              return (m.___wasm_call_ctors = m.asm.N).apply(null, arguments);\n            };\n            var jb = m._free = function () {\n                return (jb = m._free = m.asm.O).apply(null, arguments);\n              },\n              rc = m._malloc = function () {\n                return (rc = m._malloc = m.asm.P).apply(null, arguments);\n              },\n              ib = m.___getTypeName = function () {\n                return (ib = m.___getTypeName = m.asm.Q).apply(null, arguments);\n              };\n            m.__embind_initialize_bindings = function () {\n              return (m.__embind_initialize_bindings = m.asm.R).apply(null, arguments);\n            };\n            m.dynCall_jiji = function () {\n              return (m.dynCall_jiji = m.asm.T).apply(null, arguments);\n            };\n            var tc;\n            Oa = function uc() {\n              tc || vc();\n              tc || (Oa = uc);\n            };\n            function vc() {\n              function b() {\n                if (!tc && (tc = !0, m.calledRun = !0, !wa)) {\n                  Ta(Ja);\n                  aa(m);\n                  if (m.onRuntimeInitialized) m.onRuntimeInitialized();\n                  if (m.postRun) for (\"function\" == typeof m.postRun && (m.postRun = [m.postRun]); m.postRun.length;) {\n                    var a = m.postRun.shift();\n                    Ka.unshift(a);\n                  }\n                  Ta(Ka);\n                }\n              }\n              if (!(0 < Ma)) {\n                if (m.preRun) for (\"function\" == typeof m.preRun && (m.preRun = [m.preRun]); m.preRun.length;) La();\n                Ta(Ia);\n                0 < Ma || (m.setStatus ? (m.setStatus(\"Running...\"), setTimeout(function () {\n                  setTimeout(function () {\n                    m.setStatus(\"\");\n                  }, 1);\n                  b();\n                }, 1)) : b());\n              }\n            }\n            if (m.preInit) for (\"function\" == typeof m.preInit && (m.preInit = [m.preInit]); 0 < m.preInit.length;) m.preInit.pop()();\n            vc();\n            return Rive.ready;\n          };\n        })();\n        /* harmony default export */\n        const __WEBPACK_DEFAULT_EXPORT__ = Rive;\n\n        /***/\n      }, /* 2 */\n      /***/module => {\n        module.exports = JSON.parse('{\"name\":\"@rive-app/canvas\",\"version\":\"1.2.1\",\"description\":\"Rive\\'s canvas based web api.\",\"main\":\"rive.js\",\"homepage\":\"https://rive.app\",\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/rive-app/rive-wasm/tree/master/js\"},\"keywords\":[\"rive\",\"animation\"],\"author\":\"Rive\",\"contributors\":[\"Luigi Rosso <luigi@rive.app> (https://rive.app)\",\"Maxwell Talbot <max@rive.app> (https://rive.app)\",\"Arthur Vivian <arthur@rive.app> (https://rive.app)\",\"Umberto Sonnino <umberto@rive.app> (https://rive.app)\",\"Matthew Sullivan <matt.j.sullivan@gmail.com> (mailto:matt.j.sullivan@gmail.com)\"],\"license\":\"MIT\",\"files\":[\"rive.js\",\"rive.js.map\",\"rive.wasm\",\"rive.d.ts\",\"rive_advanced.mjs.d.ts\"],\"typings\":\"rive.d.ts\",\"dependencies\":{},\"browser\":{\"fs\":false,\"path\":false}}');\n\n        /***/\n      }, /* 3 */\n      /***/(__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n        __webpack_require__.r(__webpack_exports__);\n        /* harmony export */\n        __webpack_require__.d(__webpack_exports__, {\n          /* harmony export */\"registerTouchInteractions\": () => /* reexport safe */_registerTouchInteractions__WEBPACK_IMPORTED_MODULE_0__.registerTouchInteractions\n          /* harmony export */\n        });\n        /* harmony import */\n        var _registerTouchInteractions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(4);\n\n        /***/\n      }, /* 4 */\n      /***/(__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\n        __webpack_require__.r(__webpack_exports__);\n        /* harmony export */\n        __webpack_require__.d(__webpack_exports__, {\n          /* harmony export */\"registerTouchInteractions\": () => /* binding */registerTouchInteractions\n          /* harmony export */\n        });\n        var _this = undefined;\n        /**\n         * Returns the clientX and clientY properties from touch or mouse events. Also\n         * calls preventDefault() on the event if it is a touchstart or touchmove to prevent\n         * scrolling the page on mobile devices\n         * @param event - Either a TouchEvent or a MouseEvent\n         * @returns - Coordinates of the clientX and clientY properties from the touch/mouse event\n         */\n        var getClientCoordinates = function (event) {\n          var _a, _b;\n          if ([\"touchstart\", \"touchmove\"].indexOf(event.type) > -1 && ((_a = event.touches) === null || _a === void 0 ? void 0 : _a.length)) {\n            event.preventDefault();\n            return {\n              clientX: event.touches[0].clientX,\n              clientY: event.touches[0].clientY\n            };\n          } else if (event.type === \"touchend\" && ((_b = event.changedTouches) === null || _b === void 0 ? void 0 : _b.length)) {\n            return {\n              clientX: event.changedTouches[0].clientX,\n              clientY: event.changedTouches[0].clientY\n            };\n          } else {\n            return {\n              clientX: event.clientX,\n              clientY: event.clientY\n            };\n          }\n        };\n        /**\n         * Registers mouse move/up/down callback handlers on the canvas to send meaningful coordinates to\n         * the state machine pointer move/up/down functions based on cursor interaction\n         */\n        var registerTouchInteractions = function (_a) {\n          var canvas = _a.canvas,\n            artboard = _a.artboard,\n            _b = _a.stateMachines,\n            stateMachines = _b === void 0 ? [] : _b,\n            renderer = _a.renderer,\n            rive = _a.rive,\n            fit = _a.fit,\n            alignment = _a.alignment;\n          if (!canvas || !stateMachines.length || !renderer || !rive || !artboard || typeof window === \"undefined\") {\n            return null;\n          }\n          var processEventCallback = function (event) {\n            var boundingRect = event.currentTarget.getBoundingClientRect();\n            var _a = getClientCoordinates(event),\n              clientX = _a.clientX,\n              clientY = _a.clientY;\n            if (!clientX && !clientY) {\n              return;\n            }\n            var canvasX = clientX - boundingRect.left;\n            var canvasY = clientY - boundingRect.top;\n            var forwardMatrix = rive.computeAlignment(fit, alignment, {\n              minX: 0,\n              minY: 0,\n              maxX: boundingRect.width,\n              maxY: boundingRect.height\n            }, artboard.bounds);\n            var invertedMatrix = new rive.Mat2D();\n            forwardMatrix.invert(invertedMatrix);\n            var canvasCoordinatesVector = new rive.Vec2D(canvasX, canvasY);\n            var transformedVector = rive.mapXY(invertedMatrix, canvasCoordinatesVector);\n            var transformedX = transformedVector.x();\n            var transformedY = transformedVector.y();\n            transformedVector.delete();\n            invertedMatrix.delete();\n            canvasCoordinatesVector.delete();\n            forwardMatrix.delete();\n            switch (event.type) {\n              // Pointer moving/hovering on the canvas\n              case \"touchmove\":\n              case \"mouseover\":\n              case \"mouseout\":\n              case \"mousemove\":\n                {\n                  for (var _i = 0, stateMachines_1 = stateMachines; _i < stateMachines_1.length; _i++) {\n                    var stateMachine = stateMachines_1[_i];\n                    stateMachine.pointerMove(transformedX, transformedY);\n                  }\n                  break;\n                }\n              // Pointer click initiated but not released yet on the canvas\n              case \"touchstart\":\n              case \"mousedown\":\n                {\n                  for (var _b = 0, stateMachines_2 = stateMachines; _b < stateMachines_2.length; _b++) {\n                    var stateMachine = stateMachines_2[_b];\n                    stateMachine.pointerDown(transformedX, transformedY);\n                  }\n                  break;\n                }\n              // Pointer click released on the canvas\n              case \"touchend\":\n              case \"mouseup\":\n                {\n                  for (var _c = 0, stateMachines_3 = stateMachines; _c < stateMachines_3.length; _c++) {\n                    var stateMachine = stateMachines_3[_c];\n                    stateMachine.pointerUp(transformedX, transformedY);\n                  }\n                  break;\n                }\n              default:\n            }\n          };\n          var callback = processEventCallback.bind(_this);\n          canvas.addEventListener(\"mouseover\", callback);\n          canvas.addEventListener(\"mouseout\", callback);\n          canvas.addEventListener(\"mousemove\", callback);\n          canvas.addEventListener(\"mousedown\", callback);\n          canvas.addEventListener(\"mouseup\", callback);\n          canvas.addEventListener(\"touchmove\", callback);\n          canvas.addEventListener(\"touchstart\", callback);\n          canvas.addEventListener(\"touchend\", callback);\n          return function () {\n            canvas.removeEventListener(\"mouseover\", callback);\n            canvas.removeEventListener(\"mouseout\", callback);\n            canvas.removeEventListener(\"mousemove\", callback);\n            canvas.removeEventListener(\"mousedown\", callback);\n            canvas.removeEventListener(\"mouseup\", callback);\n            canvas.removeEventListener(\"touchmove\", callback);\n            canvas.removeEventListener(\"touchstart\", callback);\n            canvas.removeEventListener(\"touchend\", callback);\n          };\n        };\n\n        /***/\n      }\n      /******/];\n      /************************************************************************/\n      /******/ // The module cache\n      /******/\n      var __webpack_module_cache__ = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __webpack_require__(moduleId) {\n        /******/ // Check if module is in cache\n        /******/var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n        if (cachedModule !== undefined) {\n          /******/return cachedModule.exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/ // no module.id needed\n          /******/ // no module.loaded needed\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        __webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /************************************************************************/\n      /******/ /* webpack/runtime/define property getters */\n      /******/\n      (() => {\n        /******/ // define getter functions for harmony exports\n        /******/__webpack_require__.d = (exports, definition) => {\n          /******/for (var key in definition) {\n            /******/if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n              /******/Object.defineProperty(exports, key, {\n                enumerable: true,\n                get: definition[key]\n              });\n              /******/\n            }\n            /******/\n          }\n          /******/\n        };\n        /******/\n      })();\n      /******/\n      /******/ /* webpack/runtime/hasOwnProperty shorthand */\n      /******/\n      (() => {\n        /******/__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n        /******/\n      })();\n      /******/\n      /******/ /* webpack/runtime/make namespace object */\n      /******/\n      (() => {\n        /******/ // define __esModule on exports\n        /******/__webpack_require__.r = exports => {\n          /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n            /******/Object.defineProperty(exports, Symbol.toStringTag, {\n              value: 'Module'\n            });\n            /******/\n          }\n          /******/\n          Object.defineProperty(exports, '__esModule', {\n            value: true\n          });\n          /******/\n        };\n        /******/\n      })();\n      /******/\n      /************************************************************************/\n      var __webpack_exports__ = {};\n      // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n      (() => {\n        __webpack_require__.r(__webpack_exports__);\n        /* harmony export */\n        __webpack_require__.d(__webpack_exports__, {\n          /* harmony export */\"Fit\": () => /* binding */Fit,\n          /* harmony export */\"Alignment\": () => /* binding */Alignment,\n          /* harmony export */\"Layout\": () => /* binding */Layout,\n          /* harmony export */\"RuntimeLoader\": () => /* binding */RuntimeLoader,\n          /* harmony export */\"StateMachineInputType\": () => /* binding */StateMachineInputType,\n          /* harmony export */\"StateMachineInput\": () => /* binding */StateMachineInput,\n          /* harmony export */\"EventType\": () => /* binding */EventType,\n          /* harmony export */\"LoopType\": () => /* binding */LoopType,\n          /* harmony export */\"Rive\": () => /* binding */Rive,\n          /* harmony export */\"Testing\": () => /* binding */Testing\n          /* harmony export */\n        });\n        /* harmony import */\n        var _rive_advanced_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n        /* harmony import */\n        var package_json__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2);\n        /* harmony import */\n        var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);\n        var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n          function adopt(value) {\n            return value instanceof P ? value : new P(function (resolve) {\n              resolve(value);\n            });\n          }\n          return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) {\n              try {\n                step(generator.next(value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n            function rejected(value) {\n              try {\n                step(generator[\"throw\"](value));\n              } catch (e) {\n                reject(e);\n              }\n            }\n            function step(result) {\n              result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n            }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n          });\n        };\n        var __generator = undefined && undefined.__generator || function (thisArg, body) {\n          var _ = {\n              label: 0,\n              sent: function () {\n                if (t[0] & 1) throw t[1];\n                return t[1];\n              },\n              trys: [],\n              ops: []\n            },\n            f,\n            y,\n            t,\n            g;\n          return g = {\n            next: verb(0),\n            \"throw\": verb(1),\n            \"return\": verb(2)\n          }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n            return this;\n          }), g;\n          function verb(n) {\n            return function (v) {\n              return step([n, v]);\n            };\n          }\n          function step(op) {\n            if (f) throw new TypeError(\"Generator is already executing.\");\n            while (_) try {\n              if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n              if (y = 0, t) op = [op[0] & 2, t.value];\n              switch (op[0]) {\n                case 0:\n                case 1:\n                  t = op;\n                  break;\n                case 4:\n                  _.label++;\n                  return {\n                    value: op[1],\n                    done: false\n                  };\n                case 5:\n                  _.label++;\n                  y = op[1];\n                  op = [0];\n                  continue;\n                case 7:\n                  op = _.ops.pop();\n                  _.trys.pop();\n                  continue;\n                default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                    _ = 0;\n                    continue;\n                  }\n                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                    _.label = op[1];\n                    break;\n                  }\n                  if (op[0] === 6 && _.label < t[1]) {\n                    _.label = t[1];\n                    t = op;\n                    break;\n                  }\n                  if (t && _.label < t[2]) {\n                    _.label = t[2];\n                    _.ops.push(op);\n                    break;\n                  }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop();\n                  continue;\n              }\n              op = body.call(thisArg, _);\n            } catch (e) {\n              op = [6, e];\n              y = 0;\n            } finally {\n              f = t = 0;\n            }\n            if (op[0] & 5) throw op[1];\n            return {\n              value: op[0] ? op[1] : void 0,\n              done: true\n            };\n          }\n        };\n\n        // #region layout\n        // Fit options for the canvas\n        var Fit;\n        (function (Fit) {\n          Fit[\"Cover\"] = \"cover\";\n          Fit[\"Contain\"] = \"contain\";\n          Fit[\"Fill\"] = \"fill\";\n          Fit[\"FitWidth\"] = \"fitWidth\";\n          Fit[\"FitHeight\"] = \"fitHeight\";\n          Fit[\"None\"] = \"none\";\n          Fit[\"ScaleDown\"] = \"scaleDown\";\n        })(Fit || (Fit = {}));\n        // Alignment options for the canvas\n        var Alignment;\n        (function (Alignment) {\n          Alignment[\"Center\"] = \"center\";\n          Alignment[\"TopLeft\"] = \"topLeft\";\n          Alignment[\"TopCenter\"] = \"topCenter\";\n          Alignment[\"TopRight\"] = \"topRight\";\n          Alignment[\"CenterLeft\"] = \"centerLeft\";\n          Alignment[\"CenterRight\"] = \"centerRight\";\n          Alignment[\"BottomLeft\"] = \"bottomLeft\";\n          Alignment[\"BottomCenter\"] = \"bottomCenter\";\n          Alignment[\"BottomRight\"] = \"bottomRight\";\n        })(Alignment || (Alignment = {}));\n        // Alignment options for Rive animations in a HTML canvas\n        var Layout = /** @class */function () {\n          function Layout(params) {\n            var _a, _b, _c, _d, _e, _f;\n            this.fit = (_a = params === null || params === void 0 ? void 0 : params.fit) !== null && _a !== void 0 ? _a : Fit.Contain;\n            this.alignment = (_b = params === null || params === void 0 ? void 0 : params.alignment) !== null && _b !== void 0 ? _b : Alignment.Center;\n            this.minX = (_c = params === null || params === void 0 ? void 0 : params.minX) !== null && _c !== void 0 ? _c : 0;\n            this.minY = (_d = params === null || params === void 0 ? void 0 : params.minY) !== null && _d !== void 0 ? _d : 0;\n            this.maxX = (_e = params === null || params === void 0 ? void 0 : params.maxX) !== null && _e !== void 0 ? _e : 0;\n            this.maxY = (_f = params === null || params === void 0 ? void 0 : params.maxY) !== null && _f !== void 0 ? _f : 0;\n          }\n          // Alternative constructor to build a Layout from an interface/object\n          Layout.new = function (_a) {\n            var fit = _a.fit,\n              alignment = _a.alignment,\n              minX = _a.minX,\n              minY = _a.minY,\n              maxX = _a.maxX,\n              maxY = _a.maxY;\n            console.warn(\"This function is deprecated: please use `new Layout({})` instead\");\n            return new Layout({\n              fit: fit,\n              alignment: alignment,\n              minX: minX,\n              minY: minY,\n              maxX: maxX,\n              maxY: maxY\n            });\n          };\n          /**\n           * Makes a copy of the layout, replacing any specified parameters\n           */\n          Layout.prototype.copyWith = function (_a) {\n            var fit = _a.fit,\n              alignment = _a.alignment,\n              minX = _a.minX,\n              minY = _a.minY,\n              maxX = _a.maxX,\n              maxY = _a.maxY;\n            return new Layout({\n              fit: fit !== null && fit !== void 0 ? fit : this.fit,\n              alignment: alignment !== null && alignment !== void 0 ? alignment : this.alignment,\n              minX: minX !== null && minX !== void 0 ? minX : this.minX,\n              minY: minY !== null && minY !== void 0 ? minY : this.minY,\n              maxX: maxX !== null && maxX !== void 0 ? maxX : this.maxX,\n              maxY: maxY !== null && maxY !== void 0 ? maxY : this.maxY\n            });\n          };\n          // Returns fit for the Wasm runtime format\n          Layout.prototype.runtimeFit = function (rive) {\n            if (this.cachedRuntimeFit) return this.cachedRuntimeFit;\n            var fit;\n            if (this.fit === Fit.Cover) fit = rive.Fit.cover;else if (this.fit === Fit.Contain) fit = rive.Fit.contain;else if (this.fit === Fit.Fill) fit = rive.Fit.fill;else if (this.fit === Fit.FitWidth) fit = rive.Fit.fitWidth;else if (this.fit === Fit.FitHeight) fit = rive.Fit.fitHeight;else if (this.fit === Fit.ScaleDown) fit = rive.Fit.scaleDown;else fit = rive.Fit.none;\n            this.cachedRuntimeFit = fit;\n            return fit;\n          };\n          // Returns alignment for the Wasm runtime format\n          Layout.prototype.runtimeAlignment = function (rive) {\n            if (this.cachedRuntimeAlignment) return this.cachedRuntimeAlignment;\n            var alignment;\n            if (this.alignment === Alignment.TopLeft) alignment = rive.Alignment.topLeft;else if (this.alignment === Alignment.TopCenter) alignment = rive.Alignment.topCenter;else if (this.alignment === Alignment.TopRight) alignment = rive.Alignment.topRight;else if (this.alignment === Alignment.CenterLeft) alignment = rive.Alignment.centerLeft;else if (this.alignment === Alignment.CenterRight) alignment = rive.Alignment.centerRight;else if (this.alignment === Alignment.BottomLeft) alignment = rive.Alignment.bottomLeft;else if (this.alignment === Alignment.BottomCenter) alignment = rive.Alignment.bottomCenter;else if (this.alignment === Alignment.BottomRight) alignment = rive.Alignment.bottomRight;else alignment = rive.Alignment.center;\n            this.cachedRuntimeAlignment = alignment;\n            return alignment;\n          };\n          return Layout;\n        }();\n\n        // Runtime singleton; use getInstance to provide a callback that returns the\n        // Rive runtime\n        var RuntimeLoader = /** @class */function () {\n          // Class is never instantiated\n          function RuntimeLoader() {}\n          // Loads the runtime\n          RuntimeLoader.loadRuntime = function () {\n            _rive_advanced_mjs__WEBPACK_IMPORTED_MODULE_0__.default({\n              // Loads Wasm bundle\n              locateFile: function () {\n                return RuntimeLoader.wasmURL;\n              }\n            }).then(function (rive) {\n              var _a;\n              RuntimeLoader.runtime = rive;\n              // Fire all the callbacks\n              while (RuntimeLoader.callBackQueue.length > 0) {\n                (_a = RuntimeLoader.callBackQueue.shift()) === null || _a === void 0 ? void 0 : _a(RuntimeLoader.runtime);\n              }\n            });\n          };\n          // Provides a runtime instance via a callback\n          RuntimeLoader.getInstance = function (callback) {\n            // If it's not loading, start loading runtime\n            if (!RuntimeLoader.isLoading) {\n              RuntimeLoader.isLoading = true;\n              RuntimeLoader.loadRuntime();\n            }\n            if (!RuntimeLoader.runtime) {\n              RuntimeLoader.callBackQueue.push(callback);\n            } else {\n              callback(RuntimeLoader.runtime);\n            }\n          };\n          // Provides a runtime instance via a promise\n          RuntimeLoader.awaitInstance = function () {\n            return new Promise(function (resolve) {\n              return RuntimeLoader.getInstance(function (rive) {\n                return resolve(rive);\n              });\n            });\n          };\n          // Manually sets the wasm url\n          RuntimeLoader.setWasmUrl = function (url) {\n            RuntimeLoader.wasmURL = url;\n          };\n          // Flag to indicate that loading has started/completed\n          RuntimeLoader.isLoading = false;\n          // List of callbacks for the runtime that come in while loading\n          RuntimeLoader.callBackQueue = [];\n          // Path to the Wasm file; default path works for testing only;\n          // if embedded wasm is used then this is never used.\n          RuntimeLoader.wasmURL = \"https://unpkg.com/\" + package_json__WEBPACK_IMPORTED_MODULE_1__.name + \"@\" + package_json__WEBPACK_IMPORTED_MODULE_1__.version + \"/rive.wasm\";\n          return RuntimeLoader;\n        }();\n\n        // #endregion\n        // #region animations\n        // Wraps animations and instances from the runtime and keeps track of playback\n        // state\n        var Animation = /** @class */function () {\n          /**\n           * Constructs a new animation\n           * @constructor\n           * @param {any} animation: runtime animation object\n           * @param {any} instance: runtime animation instance object\n           */\n          function Animation(animation, artboard, runtime, playing) {\n            this.animation = animation;\n            this.artboard = artboard;\n            this.playing = playing;\n            this.loopCount = 0;\n            // Time to which the animation should move to on the next render\n            this.scrubTo = null;\n            this.instance = new runtime.LinearAnimationInstance(animation, artboard);\n          }\n          Object.defineProperty(Animation.prototype, \"name\", {\n            // Returns the animation's name\n            get: function () {\n              return this.animation.name;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animation.prototype, \"time\", {\n            // Returns the animation's current time\n            get: function () {\n              return this.instance.time;\n            },\n            // Sets the animation's current time\n            set: function (value) {\n              this.instance.time = value;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animation.prototype, \"loopValue\", {\n            // Returns the animation's loop type\n            get: function () {\n              return this.animation.loopValue;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Advances the animation by the give time. If the animation needs scrubbing,\n           * time is ignored and the stored scrub value is used.\n           * @param time the time to advance the animation by if no scrubbing required\n           */\n          Animation.prototype.advance = function (time) {\n            if (this.scrubTo === null) {\n              this.instance.advance(time);\n            } else {\n              this.instance.time = 0;\n              this.instance.advance(this.scrubTo);\n              this.scrubTo = null;\n            }\n          };\n          /**\n           * Apply interpolated keyframe values to the artboard. This should be called after calling\n           * .advance() on an animation instance so that new values are applied to properties.\n           *\n           * Note: This does not advance the artboard, which updates all objects on the artboard\n           * @param mix - Mix value for the animation from 0 to 1\n           */\n          Animation.prototype.apply = function (mix) {\n            this.instance.apply(mix);\n          };\n          Object.defineProperty(Animation.prototype, \"needsScrub\", {\n            get: function () {\n              return this.scrubTo !== null;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Deletes the backing Wasm animation instance; once this is called, this\n           * animation is no more.\n           */\n          Animation.prototype.cleanup = function () {\n            this.instance.delete();\n          };\n          return Animation;\n        }();\n        // #endregion\n        // #region state machines\n        var StateMachineInputType;\n        (function (StateMachineInputType) {\n          StateMachineInputType[StateMachineInputType[\"Number\"] = 56] = \"Number\";\n          StateMachineInputType[StateMachineInputType[\"Trigger\"] = 58] = \"Trigger\";\n          StateMachineInputType[StateMachineInputType[\"Boolean\"] = 59] = \"Boolean\";\n        })(StateMachineInputType || (StateMachineInputType = {}));\n        /**\n         * An input for a state machine\n         */\n        var StateMachineInput = /** @class */function () {\n          function StateMachineInput(type, runtimeInput) {\n            this.type = type;\n            this.runtimeInput = runtimeInput;\n          }\n          Object.defineProperty(StateMachineInput.prototype, \"name\", {\n            /**\n             * Returns the name of the input\n             */\n            get: function () {\n              return this.runtimeInput.name;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(StateMachineInput.prototype, \"value\", {\n            /**\n             * Returns the current value of the input\n             */\n            get: function () {\n              return this.runtimeInput.value;\n            },\n            /**\n             * Sets the value of the input\n             */\n            set: function (value) {\n              this.runtimeInput.value = value;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Fires a trigger; does nothing on Number or Boolean input types\n           */\n          StateMachineInput.prototype.fire = function () {\n            if (this.type === StateMachineInputType.Trigger) {\n              this.runtimeInput.fire();\n            }\n          };\n          return StateMachineInput;\n        }();\n        var StateMachine = /** @class */function () {\n          /**\n           * @constructor\n           * @param stateMachine runtime state machine object\n           * @param instance runtime state machine instance object\n           */\n          function StateMachine(stateMachine, runtime, playing, artboard) {\n            this.stateMachine = stateMachine;\n            this.playing = playing;\n            this.artboard = artboard;\n            /**\n             * Caches the inputs from the runtime\n             */\n            this.inputs = [];\n            this.instance = new runtime.StateMachineInstance(stateMachine, artboard);\n            this.initInputs(runtime);\n          }\n          Object.defineProperty(StateMachine.prototype, \"name\", {\n            get: function () {\n              return this.stateMachine.name;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(StateMachine.prototype, \"statesChanged\", {\n            /**\n             * Returns a list of state names that have changed on this frame\n             */\n            get: function () {\n              var names = [];\n              for (var i = 0; i < this.instance.stateChangedCount(); i++) {\n                names.push(this.instance.stateChangedNameByIndex(i));\n              }\n              return names;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Advances the state machine instance by a given time.\n           * @param time - the time to advance the animation by in seconds\n           */\n          StateMachine.prototype.advance = function (time) {\n            this.instance.advance(time);\n          };\n          /**\n           * Fetches references to the state machine's inputs and caches them\n           * @param runtime an instance of the runtime; needed for the SMIInput types\n           */\n          StateMachine.prototype.initInputs = function (runtime) {\n            // Fetch the inputs from the runtime if we don't have them\n            for (var i = 0; i < this.instance.inputCount(); i++) {\n              var input = this.instance.input(i);\n              this.inputs.push(this.mapRuntimeInput(input, runtime));\n            }\n          };\n          /**\n           * Maps a runtime input to it's appropriate type\n           * @param input\n           */\n          StateMachine.prototype.mapRuntimeInput = function (input, runtime) {\n            if (input.type === runtime.SMIInput.bool) {\n              return new StateMachineInput(StateMachineInputType.Boolean, input.asBool());\n            } else if (input.type === runtime.SMIInput.number) {\n              return new StateMachineInput(StateMachineInputType.Number, input.asNumber());\n            } else if (input.type === runtime.SMIInput.trigger) {\n              return new StateMachineInput(StateMachineInputType.Trigger, input.asTrigger());\n            }\n          };\n          /**\n           * Deletes the backing Wasm state machine instance; once this is called, this\n           * state machine is no more.\n           */\n          StateMachine.prototype.cleanup = function () {\n            this.instance.delete();\n          };\n          return StateMachine;\n        }();\n        // #endregion\n        // #region animator\n        /**\n         * Manages animation\n         */\n        var Animator = /** @class */function () {\n          /**\n           * Constructs a new animator\n           * @constructor\n           * @param runtime Rive runtime; needed to instance animations & state machines\n           * @param artboard the artboard that holds all animations and state machines\n           * @param animations optional list of animations\n           * @param stateMachines optional list of state machines\n           */\n          function Animator(runtime, artboard, eventManager, animations, stateMachines) {\n            if (animations === void 0) {\n              animations = [];\n            }\n            if (stateMachines === void 0) {\n              stateMachines = [];\n            }\n            this.runtime = runtime;\n            this.artboard = artboard;\n            this.eventManager = eventManager;\n            this.animations = animations;\n            this.stateMachines = stateMachines;\n          }\n          /**\n           * Adds animations and state machines by their names. If names are shared\n           * between animations & state machines, then the first one found will be\n           * created. Best not to use the same names for these in your Rive file.\n           * @param animatable the name(s) of animations and state machines to add\n           * @returns a list of names of the playing animations and state machines\n           */\n          Animator.prototype.add = function (animatables, playing, fireEvent) {\n            if (fireEvent === void 0) {\n              fireEvent = true;\n            }\n            animatables = mapToStringArray(animatables);\n            // If animatables is empty, play or pause everything\n            if (animatables.length === 0) {\n              this.animations.forEach(function (a) {\n                return a.playing = playing;\n              });\n              this.stateMachines.forEach(function (m) {\n                return m.playing = playing;\n              });\n            } else {\n              // Play/pause already instanced items, or create new instances\n              var instancedAnimationNames = this.animations.map(function (a) {\n                return a.name;\n              });\n              var instancedMachineNames = this.stateMachines.map(function (m) {\n                return m.name;\n              });\n              for (var i = 0; i < animatables.length; i++) {\n                var aIndex = instancedAnimationNames.indexOf(animatables[i]);\n                var mIndex = instancedMachineNames.indexOf(animatables[i]);\n                if (aIndex >= 0 || mIndex >= 0) {\n                  if (aIndex >= 0) {\n                    // Animation is instanced, play/pause it\n                    this.animations[aIndex].playing = playing;\n                  } else {\n                    // State machine is instanced, play/pause it\n                    this.stateMachines[mIndex].playing = playing;\n                  }\n                } else {\n                  // Try to create a new animation instance\n                  var anim = this.artboard.animationByName(animatables[i]);\n                  if (anim) {\n                    var newAnimation = new Animation(anim, this.artboard, this.runtime, playing);\n                    // Display the first frame of the specified animation\n                    newAnimation.advance(0);\n                    newAnimation.apply(1.0);\n                    this.animations.push(newAnimation);\n                  } else {\n                    // Try to create a new state machine instance\n                    var sm = this.artboard.stateMachineByName(animatables[i]);\n                    if (sm) {\n                      var newStateMachine = new StateMachine(sm, this.runtime, playing, this.artboard);\n                      this.stateMachines.push(newStateMachine);\n                    }\n                  }\n                }\n              }\n            }\n            // Fire play/paused events for animations\n            if (fireEvent) {\n              if (playing) {\n                this.eventManager.fire({\n                  type: EventType.Play,\n                  data: this.playing\n                });\n              } else {\n                this.eventManager.fire({\n                  type: EventType.Pause,\n                  data: this.paused\n                });\n              }\n            }\n            return playing ? this.playing : this.paused;\n          };\n          /**\n           * Play the named animations/state machines\n           * @param animatables the names of the animations/machines to play; plays all if empty\n           * @returns a list of the playing items\n           */\n          Animator.prototype.play = function (animatables) {\n            return this.add(animatables, true);\n          };\n          /**\n           * Pauses named animations and state machines, or everything if nothing is\n           * specified\n           * @param animatables names of the animations and state machines to pause\n           * @returns a list of names of the animations and state machines paused\n           */\n          Animator.prototype.pause = function (animatables) {\n            return this.add(animatables, false);\n          };\n          /**\n           * Set time of named animations\n           * @param animations names of the animations to scrub\n           * @param value time scrub value, a floating point number to which the playhead is jumped\n           * @returns a list of names of the animations that were scrubbed\n           */\n          Animator.prototype.scrub = function (animatables, value) {\n            var forScrubbing = this.animations.filter(function (a) {\n              return animatables.includes(a.name);\n            });\n            forScrubbing.forEach(function (a) {\n              return a.scrubTo = value;\n            });\n            return forScrubbing.map(function (a) {\n              return a.name;\n            });\n          };\n          Object.defineProperty(Animator.prototype, \"playing\", {\n            /**\n             * Returns a list of names of all animations and state machines currently\n             * playing\n             */\n            get: function () {\n              return this.animations.filter(function (a) {\n                return a.playing;\n              }).map(function (a) {\n                return a.name;\n              }).concat(this.stateMachines.filter(function (m) {\n                return m.playing;\n              }).map(function (m) {\n                return m.name;\n              }));\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animator.prototype, \"paused\", {\n            /**\n             * Returns a list of names of all animations and state machines currently\n             * paused\n             */\n            get: function () {\n              return this.animations.filter(function (a) {\n                return !a.playing;\n              }).map(function (a) {\n                return a.name;\n              }).concat(this.stateMachines.filter(function (m) {\n                return !m.playing;\n              }).map(function (m) {\n                return m.name;\n              }));\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Stops and removes all named animations and state machines\n           * @param animatables animations and state machines to remove\n           * @returns a list of names of removed items\n           */\n          Animator.prototype.stop = function (animatables) {\n            var _this = this;\n            animatables = mapToStringArray(animatables);\n            // If nothing's specified, wipe them out, all of them\n            var removedNames = [];\n            // Stop everything\n            if (animatables.length === 0) {\n              removedNames = this.animations.map(function (a) {\n                return a.name;\n              }).concat(this.stateMachines.map(function (m) {\n                return m.name;\n              }));\n              // Clean up before emptying the arrays\n              this.animations.forEach(function (a) {\n                return a.cleanup();\n              });\n              this.stateMachines.forEach(function (m) {\n                return m.cleanup();\n              });\n              // Empty out the arrays\n              this.animations.splice(0, this.animations.length);\n              this.stateMachines.splice(0, this.stateMachines.length);\n            } else {\n              // Remove only the named animations/state machines\n              var animationsToRemove = this.animations.filter(function (a) {\n                return animatables.includes(a.name);\n              });\n              animationsToRemove.forEach(function (a) {\n                a.cleanup();\n                _this.animations.splice(_this.animations.indexOf(a), 1);\n              });\n              var machinesToRemove = this.stateMachines.filter(function (m) {\n                return animatables.includes(m.name);\n              });\n              machinesToRemove.forEach(function (m) {\n                m.cleanup();\n                _this.stateMachines.splice(_this.stateMachines.indexOf(m), 1);\n              });\n              removedNames = animationsToRemove.map(function (a) {\n                return a.name;\n              }).concat(machinesToRemove.map(function (m) {\n                return m.name;\n              }));\n            }\n            this.eventManager.fire({\n              type: EventType.Stop,\n              data: removedNames\n            });\n            // Return the list of animations removed\n            return removedNames;\n          };\n          Object.defineProperty(Animator.prototype, \"isPlaying\", {\n            /**\n             * Returns true if at least one animation is active\n             */\n            get: function () {\n              return this.animations.reduce(function (acc, curr) {\n                return acc || curr.playing;\n              }, false) || this.stateMachines.reduce(function (acc, curr) {\n                return acc || curr.playing;\n              }, false);\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animator.prototype, \"isPaused\", {\n            /**\n             * Returns true if all animations are paused and there's at least one animation\n             */\n            get: function () {\n              return !this.isPlaying && (this.animations.length > 0 || this.stateMachines.length > 0);\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Animator.prototype, \"isStopped\", {\n            /**\n             * Returns true if there are no playing or paused animations/state machines\n             */\n            get: function () {\n              return this.animations.length === 0 && this.stateMachines.length === 0;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * If there are no animations or state machines, add the first one found\n           * @returns the name of the animation or state machine instanced\n           */\n          Animator.prototype.atLeastOne = function (playing, fireEvent) {\n            if (fireEvent === void 0) {\n              fireEvent = true;\n            }\n            var instancedName;\n            if (this.animations.length === 0 && this.stateMachines.length === 0) {\n              if (this.artboard.animationCount() > 0) {\n                // Add the first animation\n                this.add([instancedName = this.artboard.animationByIndex(0).name], playing, fireEvent);\n              } else if (this.artboard.stateMachineCount() > 0) {\n                // Add the first state machine\n                this.add([instancedName = this.artboard.stateMachineByIndex(0).name], playing, fireEvent);\n              }\n            }\n            return instancedName;\n          };\n          /**\n           * Checks if any animations have looped and if so, fire the appropriate event\n           */\n          Animator.prototype.handleLooping = function () {\n            for (var _i = 0, _a = this.animations.filter(function (a) {\n                return a.playing;\n              }); _i < _a.length; _i++) {\n              var animation = _a[_i];\n              // Emit if the animation looped\n              if (animation.loopValue === 0 && animation.loopCount) {\n                animation.loopCount = 0;\n                // This is a one-shot; if it has ended, delete the instance\n                this.stop(animation.name);\n              } else if (animation.loopValue === 1 && animation.loopCount) {\n                this.eventManager.fire({\n                  type: EventType.Loop,\n                  data: {\n                    animation: animation.name,\n                    type: LoopType.Loop\n                  }\n                });\n                animation.loopCount = 0;\n              }\n              // Wasm indicates a loop at each time the animation\n              // changes direction, so a full loop/lap occurs every\n              // two loop counts\n              else if (animation.loopValue === 2 && animation.loopCount > 1) {\n                this.eventManager.fire({\n                  type: EventType.Loop,\n                  data: {\n                    animation: animation.name,\n                    type: LoopType.PingPong\n                  }\n                });\n                animation.loopCount = 0;\n              }\n            }\n          };\n          /**\n           * Checks if states have changed in state machines and fires a statechange\n           * event\n           */\n          Animator.prototype.handleStateChanges = function () {\n            var statesChanged = [];\n            for (var _i = 0, _a = this.stateMachines.filter(function (sm) {\n                return sm.playing;\n              }); _i < _a.length; _i++) {\n              var stateMachine = _a[_i];\n              statesChanged.push.apply(statesChanged, stateMachine.statesChanged);\n            }\n            if (statesChanged.length > 0) {\n              this.eventManager.fire({\n                type: EventType.StateChange,\n                data: statesChanged\n              });\n            }\n          };\n          return Animator;\n        }();\n        // #endregion\n        // #region events\n        /**\n         * Supported event types triggered in Rive\n         */\n        var EventType;\n        (function (EventType) {\n          EventType[\"Load\"] = \"load\";\n          EventType[\"LoadError\"] = \"loaderror\";\n          EventType[\"Play\"] = \"play\";\n          EventType[\"Pause\"] = \"pause\";\n          EventType[\"Stop\"] = \"stop\";\n          EventType[\"Loop\"] = \"loop\";\n          EventType[\"Draw\"] = \"draw\";\n          EventType[\"StateChange\"] = \"statechange\";\n        })(EventType || (EventType = {}));\n        /**\n         * Looping types: one-shot, loop, and ping-pong\n         */\n        var LoopType;\n        (function (LoopType) {\n          LoopType[\"OneShot\"] = \"oneshot\";\n          LoopType[\"Loop\"] = \"loop\";\n          LoopType[\"PingPong\"] = \"pingpong\";\n        })(LoopType || (LoopType = {}));\n        // Manages Rive events and listeners\n        var EventManager = /** @class */function () {\n          function EventManager(listeners) {\n            if (listeners === void 0) {\n              listeners = [];\n            }\n            this.listeners = listeners;\n          }\n          // Gets listeners of specified type\n          EventManager.prototype.getListeners = function (type) {\n            return this.listeners.filter(function (e) {\n              return e.type === type;\n            });\n          };\n          // Adds a listener\n          EventManager.prototype.add = function (listener) {\n            if (!this.listeners.includes(listener)) {\n              this.listeners.push(listener);\n            }\n          };\n          /**\n           * Removes a listener\n           * @param listener the listener with the callback to be removed\n           */\n          EventManager.prototype.remove = function (listener) {\n            // We can't simply look for the listener as it'll be a different instance to\n            // one originally subscribed. Find all the listeners of the right type and\n            // then check their callbacks which should match.\n            for (var i = 0; i < this.listeners.length; i++) {\n              var currentListener = this.listeners[i];\n              if (currentListener.type === listener.type) {\n                if (currentListener.callback === listener.callback) {\n                  this.listeners.splice(i, 1);\n                  break;\n                }\n              }\n            }\n          };\n          /**\n           * Clears all listeners of specified type, or every listener if no type is\n           * specified\n           * @param type the type of listeners to clear, or all listeners if not\n           * specified\n           */\n          EventManager.prototype.removeAll = function (type) {\n            var _this = this;\n            if (!type) {\n              this.listeners.splice(0, this.listeners.length);\n            } else {\n              this.listeners.filter(function (l) {\n                return l.type === type;\n              }).forEach(function (l) {\n                return _this.remove(l);\n              });\n            }\n          };\n          // Fires an event\n          EventManager.prototype.fire = function (event) {\n            var eventListeners = this.getListeners(event.type);\n            eventListeners.forEach(function (listener) {\n              return listener.callback(event);\n            });\n          };\n          return EventManager;\n        }();\n        // Manages a queue of tasks\n        var TaskQueueManager = /** @class */function () {\n          function TaskQueueManager(eventManager) {\n            this.eventManager = eventManager;\n            this.queue = [];\n          }\n          // Adds a task top the queue\n          TaskQueueManager.prototype.add = function (task) {\n            this.queue.push(task);\n          };\n          // Processes all tasks in the queue\n          TaskQueueManager.prototype.process = function () {\n            while (this.queue.length > 0) {\n              var task = this.queue.shift();\n              if (task === null || task === void 0 ? void 0 : task.action) {\n                task.action();\n              }\n              if (task === null || task === void 0 ? void 0 : task.event) {\n                this.eventManager.fire(task.event);\n              }\n            }\n          };\n          return TaskQueueManager;\n        }();\n        var Rive = /** @class */function () {\n          function Rive(params) {\n            var _a;\n            // Tracks if a Rive file is loaded\n            this.loaded = false;\n            /**\n             * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n             * commands (e.g. contents) can be called as soon as the file is loaded.\n             * However, playback commands need to be queued and run in order once initial\n             * animations and autoplay has been sorted out. This applies to play, pause,\n             * and start.\n             */\n            this.readyForPlaying = false;\n            // Runtime artboard\n            this.artboard = null;\n            // place to clear up event listeners\n            this.eventCleanup = null;\n            this.shouldDisableRiveListeners = false;\n            // Durations to generate a frame for the last second. Used for performance profiling.\n            this.durations = [];\n            this.frameTimes = [];\n            this.frameCount = 0;\n            /**\n             * Used be draw to track when a second of active rendering time has passed.\n             * Used for debugging purposes\n             */\n            this.renderSecondTimer = 0;\n            this.canvas = params.canvas;\n            this.src = params.src;\n            this.buffer = params.buffer;\n            this.layout = (_a = params.layout) !== null && _a !== void 0 ? _a : new Layout();\n            this.shouldDisableRiveListeners = !!params.shouldDisableRiveListeners;\n            // New event management system\n            this.eventManager = new EventManager();\n            if (params.onLoad) this.on(EventType.Load, params.onLoad);\n            if (params.onLoadError) this.on(EventType.LoadError, params.onLoadError);\n            if (params.onPlay) this.on(EventType.Play, params.onPlay);\n            if (params.onPause) this.on(EventType.Pause, params.onPause);\n            if (params.onStop) this.on(EventType.Stop, params.onStop);\n            if (params.onLoop) this.on(EventType.Loop, params.onLoop);\n            if (params.onStateChange) this.on(EventType.StateChange, params.onStateChange);\n            /**\n             * @deprecated Use camelCase'd versions instead.\n             */\n            if (params.onload && !params.onLoad) this.on(EventType.Load, params.onload);\n            if (params.onloaderror && !params.onLoadError) this.on(EventType.LoadError, params.onloaderror);\n            if (params.onplay && !params.onPlay) this.on(EventType.Play, params.onplay);\n            if (params.onpause && !params.onPause) this.on(EventType.Pause, params.onpause);\n            if (params.onstop && !params.onStop) this.on(EventType.Stop, params.onstop);\n            if (params.onloop && !params.onLoop) this.on(EventType.Loop, params.onloop);\n            if (params.onstatechange && !params.onStateChange) this.on(EventType.StateChange, params.onstatechange);\n            // Hook up the task queue\n            this.taskQueue = new TaskQueueManager(this.eventManager);\n            this.init({\n              src: this.src,\n              buffer: this.buffer,\n              autoplay: params.autoplay,\n              animations: params.animations,\n              stateMachines: params.stateMachines,\n              artboard: params.artboard,\n              useOffscreenRenderer: params.useOffscreenRenderer\n            });\n          }\n          // Alternative constructor to build a Rive instance from an interface/object\n          Rive.new = function (params) {\n            console.warn(\"This function is deprecated: please use `new Rive({})` instead\");\n            return new Rive(params);\n          };\n          // Initializes the Rive object either from constructor or load()\n          Rive.prototype.init = function (_a) {\n            var _this = this;\n            var src = _a.src,\n              buffer = _a.buffer,\n              animations = _a.animations,\n              stateMachines = _a.stateMachines,\n              artboard = _a.artboard,\n              _b = _a.autoplay,\n              autoplay = _b === void 0 ? false : _b,\n              _c = _a.useOffscreenRenderer,\n              useOffscreenRenderer = _c === void 0 ? false : _c;\n            this.src = src;\n            this.buffer = buffer;\n            // If no source file url specified, it's a bust\n            if (!this.src && !this.buffer) {\n              throw new Error(Rive.missingErrorMessage);\n            }\n            // List of animations that should be initialized.\n            var startingAnimationNames = mapToStringArray(animations);\n            // List of state machines that should be initialized\n            var startingStateMachineNames = mapToStringArray(stateMachines);\n            // Ensure loaded is marked as false if loading new file\n            this.loaded = false;\n            this.readyForPlaying = false;\n            // Ensure the runtime is loaded\n            RuntimeLoader.awaitInstance().then(function (runtime) {\n              _this.runtime = runtime;\n              // Get the canvas where you want to render the animation and create a renderer\n              _this.renderer = _this.runtime.makeRenderer(_this.canvas, useOffscreenRenderer);\n              // Initial size adjustment based on devicePixelRatio if no width/height are\n              // specified explicitly\n              if (!(_this.canvas.width || _this.canvas.height)) {\n                _this.resizeDrawingSurfaceToCanvas();\n              }\n              // Load Rive data from a source uri or a data buffer\n              _this.initData(artboard, startingAnimationNames, startingStateMachineNames, autoplay).then(function () {\n                return _this.setupRiveListeners();\n              }).catch(function (e) {\n                console.error(e);\n              });\n            }).catch(function (e) {\n              console.error(e);\n            });\n          };\n          Rive.prototype.setupRiveListeners = function () {\n            var _this = this;\n            if (!this.shouldDisableRiveListeners) {\n              var activeStateMachines = (this.animator.stateMachines || []).filter(function (sm) {\n                return sm.playing && _this.runtime.hasListeners(sm.instance);\n              }).map(function (sm) {\n                return sm.instance;\n              });\n              this.eventCleanup = (0, _utils__WEBPACK_IMPORTED_MODULE_2__.registerTouchInteractions)({\n                canvas: this.canvas,\n                artboard: this.artboard,\n                stateMachines: activeStateMachines,\n                renderer: this.renderer,\n                rive: this.runtime,\n                fit: this._layout.runtimeFit(this.runtime),\n                alignment: this._layout.runtimeAlignment(this.runtime)\n              });\n            }\n          };\n          // Initializes runtime with Rive data and preps for playing\n          Rive.prototype.initData = function (artboardName, animationNames, stateMachineNames, autoplay) {\n            var _a;\n            return __awaiter(this, void 0, void 0, function () {\n              var _b, _c, msg;\n              return __generator(this, function (_d) {\n                switch (_d.label) {\n                  case 0:\n                    if (!this.src) return [3 /*break*/, 2];\n                    _b = this;\n                    return [4 /*yield*/, loadRiveFile(this.src)];\n                  case 1:\n                    _b.buffer = _d.sent();\n                    _d.label = 2;\n                  case 2:\n                    // Load the Rive file\n                    _c = this;\n                    return [4 /*yield*/, this.runtime.load(new Uint8Array(this.buffer))];\n                  case 3:\n                    // Load the Rive file\n                    _c.file = _d.sent();\n                    if (this.file) {\n                      // Initialize and draw frame\n                      this.initArtboard(artboardName, animationNames, stateMachineNames, autoplay);\n                      // Everything's set up, emit a load event\n                      this.loaded = true;\n                      this.eventManager.fire({\n                        type: EventType.Load,\n                        data: (_a = this.src) !== null && _a !== void 0 ? _a : \"buffer\"\n                      });\n                      // Flag ready for playback commands and clear the task queue; this order\n                      // is important or it may infinitely recurse\n                      this.readyForPlaying = true;\n                      this.taskQueue.process();\n                      this.drawFrame();\n                      return [2 /*return*/, Promise.resolve()];\n                    } else {\n                      msg = \"Problem loading file; may be corrupt!\";\n                      console.warn(msg);\n                      this.eventManager.fire({\n                        type: EventType.LoadError,\n                        data: msg\n                      });\n                      return [2 /*return*/, Promise.reject(msg)];\n                    }\n                    return [2 /*return*/];\n                }\n              });\n            });\n          };\n          // Initialize for playback\n          Rive.prototype.initArtboard = function (artboardName, animationNames, stateMachineNames, autoplay) {\n            // Fetch the artboard\n            var rootArtboard = artboardName ? this.file.artboardByName(artboardName) : this.file.defaultArtboard();\n            // Check we have a working artboard\n            if (!rootArtboard) {\n              var msg = \"Invalid artboard name or no default artboard\";\n              console.warn(msg);\n              this.eventManager.fire({\n                type: EventType.LoadError,\n                data: msg\n              });\n              return;\n            }\n            this.artboard = rootArtboard;\n            // Check that the artboard has at least 1 animation\n            if (this.artboard.animationCount() < 1) {\n              var msg = \"Artboard has no animations\";\n              this.eventManager.fire({\n                type: EventType.LoadError,\n                data: msg\n              });\n              throw msg;\n            }\n            // Initialize the animator\n            this.animator = new Animator(this.runtime, this.artboard, this.eventManager);\n            // Initialize the animations; as loaded hasn't happened yet, we need to\n            // suppress firing the play/pause events until the load event has fired. To\n            // do this we tell the animator to suppress firing events, and add event\n            // firing to the task queue.\n            var instanceNames;\n            if (animationNames.length > 0 || stateMachineNames.length > 0) {\n              instanceNames = animationNames.concat(stateMachineNames);\n              this.animator.add(instanceNames, autoplay, false);\n            } else {\n              instanceNames = [this.animator.atLeastOne(autoplay, false)];\n            }\n            // Queue up firing the playback events\n            this.taskQueue.add({\n              event: {\n                type: autoplay ? EventType.Play : EventType.Pause,\n                data: instanceNames\n              }\n            });\n          };\n          // Draws the current artboard frame\n          Rive.prototype.drawFrame = function () {\n            this.startRendering();\n          };\n          /**\n           * Draw rendering loop; renders animation frames at the correct time interval.\n           * @param time the time at which to render a frame\n           */\n          Rive.prototype.draw = function (time, onSecond) {\n            var before = performance.now();\n            // Clear the frameRequestId, as we're now rendering a fresh frame\n            this.frameRequestId = null;\n            // On the first pass, make sure lastTime has a valid value\n            if (!this.lastRenderTime) {\n              this.lastRenderTime = time;\n            }\n            // Handle the onSecond callback\n            this.renderSecondTimer += time - this.lastRenderTime;\n            if (this.renderSecondTimer > 5000) {\n              this.renderSecondTimer = 0;\n              onSecond === null || onSecond === void 0 ? void 0 : onSecond();\n            }\n            // Calculate the elapsed time between frames in seconds\n            var elapsedTime = (time - this.lastRenderTime) / 1000;\n            this.lastRenderTime = time;\n            // - Advance non-paused animations by the elapsed number of seconds\n            // - Advance any animations that require scrubbing\n            // - Advance to the first frame even when autoplay is false\n            var activeAnimations = this.animator.animations.filter(function (a) {\n              return a.playing || a.needsScrub;\n            })\n            // The scrubbed animations must be applied first to prevent weird artifacts\n            // if the playing animations conflict with the scrubbed animating attribuates.\n            .sort(function (first) {\n              return first.needsScrub ? -1 : 1;\n            });\n            for (var _i = 0, activeAnimations_1 = activeAnimations; _i < activeAnimations_1.length; _i++) {\n              var animation = activeAnimations_1[_i];\n              animation.advance(elapsedTime);\n              if (animation.instance.didLoop) {\n                animation.loopCount += 1;\n              }\n              animation.apply(1.0);\n            }\n            // - Advance non-paused state machines by the elapsed number of seconds\n            // - Advance to the first frame even when autoplay is false\n            var activeStateMachines = this.animator.stateMachines.filter(function (a) {\n              return a.playing;\n            });\n            for (var _a = 0, activeStateMachines_1 = activeStateMachines; _a < activeStateMachines_1.length; _a++) {\n              var stateMachine = activeStateMachines_1[_a];\n              stateMachine.advance(elapsedTime);\n              // stateMachine.instance.apply(this.artboard);\n            }\n            // Once the animations have been applied to the artboard, advance it\n            // by the elapsed time.\n            this.artboard.advance(elapsedTime);\n            var renderer = this.renderer;\n            // Canvas must be wiped to prevent artifacts\n            renderer.clear();\n            renderer.save();\n            // Update the renderer alignment if necessary\n            this.alignRenderer();\n            this.artboard.draw(renderer);\n            renderer.restore();\n            renderer.flush();\n            // Check for any animations that looped\n            this.animator.handleLooping();\n            // Check for any state machines that had a state change\n            this.animator.handleStateChanges();\n            // Add duration to create frame to durations array\n            this.frameCount++;\n            var after = performance.now();\n            this.frameTimes.push(after);\n            this.durations.push(after - before);\n            while (this.frameTimes[0] <= after - 1000) {\n              this.frameTimes.shift();\n              this.durations.shift();\n            }\n            // Calling requestAnimationFrame will rerun draw() at the correct rate:\n            // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n            if (this.animator.isPlaying) {\n              // Request a new rendering frame\n              this.startRendering();\n            } else if (this.animator.isPaused) {\n              // Reset the end time so on playback it starts at the correct frame\n              this.lastRenderTime = 0;\n            } else if (this.animator.isStopped) {\n              // Reset animation instances, artboard and time\n              // TODO: implement this properly when we have instancing\n              // this.initArtboard();\n              // this.drawFrame();\n              this.lastRenderTime = 0;\n            }\n          };\n          /**\n           * Align the renderer\n           */\n          Rive.prototype.alignRenderer = function () {\n            var _a = this,\n              renderer = _a.renderer,\n              runtime = _a.runtime,\n              _layout = _a._layout,\n              artboard = _a.artboard;\n            // Align things up safe in the knowledge we can restore if changed\n            renderer.align(_layout.runtimeFit(runtime), _layout.runtimeAlignment(runtime), {\n              minX: _layout.minX,\n              minY: _layout.minY,\n              maxX: _layout.maxX,\n              maxY: _layout.maxY\n            }, artboard.bounds);\n          };\n          Object.defineProperty(Rive.prototype, \"fps\", {\n            get: function () {\n              return this.durations.length;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"frameTime\", {\n            get: function () {\n              if (this.durations.length === 0) {\n                return 0;\n              }\n              return (this.durations.reduce(function (a, b) {\n                return a + b;\n              }, 0) / this.durations.length).toFixed(4);\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Cleans up all Wasm-generated objects that need to be manually destroyed:\n           * artboard instances, animation instances, state machine instances,\n           * renderer instance, file and runtime.\n           *\n           * Once this is called, you will need to initialise a new instance of the\n           * Rive class\n           */\n          Rive.prototype.cleanup = function () {\n            var _a, _b;\n            // Stop the renderer if it hasn't already been stopped.\n            this.stopRendering();\n            // Clean up any artboard, animation or state machine instances.\n            this.cleanupInstances();\n            // Delete the renderer\n            (_a = this.renderer) === null || _a === void 0 ? void 0 : _a.delete();\n            this.renderer = null;\n            // Delete the rive file\n            (_b = this.file) === null || _b === void 0 ? void 0 : _b.delete();\n            this.file = null;\n          };\n          /**\n           * Cleans up any Wasm-generated objects that need to be manually destroyed:\n           * artboard instances, animation instances, state machine instances.\n           *\n           * Once this is called, things will need to be reinitialized or bad things\n           * might happen.\n           */\n          Rive.prototype.cleanupInstances = function () {\n            if (this.eventCleanup !== null) {\n              this.eventCleanup();\n            }\n            // Delete all animation and state machine instances\n            this.stop();\n            if (this.artboard) {\n              this.artboard.delete();\n              this.artboard = null;\n            }\n          };\n          // Plays specified animations; if none specified, it unpauses everything.\n          Rive.prototype.play = function (animationNames, autoplay) {\n            var _this = this;\n            animationNames = mapToStringArray(animationNames);\n            // If the file's not loaded, queue up the play\n            if (!this.readyForPlaying) {\n              this.taskQueue.add({\n                action: function () {\n                  return _this.play(animationNames, autoplay);\n                }\n              });\n              return;\n            }\n            this.animator.play(animationNames);\n            if (this.eventCleanup) {\n              this.eventCleanup();\n            }\n            this.setupRiveListeners();\n            this.startRendering();\n          };\n          // Pauses specified animations; if none specified, pauses all.\n          Rive.prototype.pause = function (animationNames) {\n            var _this = this;\n            animationNames = mapToStringArray(animationNames);\n            // If the file's not loaded, early out, nothing to pause\n            if (!this.readyForPlaying) {\n              this.taskQueue.add({\n                action: function () {\n                  return _this.pause(animationNames);\n                }\n              });\n              return;\n            }\n            this.animator.pause(animationNames);\n          };\n          Rive.prototype.scrub = function (animationNames, value) {\n            var _this = this;\n            animationNames = mapToStringArray(animationNames);\n            // If the file's not loaded, early out, nothing to pause\n            if (!this.readyForPlaying) {\n              this.taskQueue.add({\n                action: function () {\n                  return _this.scrub(animationNames, value);\n                }\n              });\n              return;\n            }\n            // Scrub the animation time; we draw a single frame here so that if\n            // nothing's currently playing, the scrubbed animation is still rendered/\n            this.animator.scrub(animationNames, value || 0);\n            this.drawFrame();\n          };\n          // Stops specified animations; if none specifies, stops them all.\n          Rive.prototype.stop = function (animationNames) {\n            var _this = this;\n            animationNames = mapToStringArray(animationNames);\n            // If the file's not loaded, early out, nothing to pause\n            if (!this.readyForPlaying) {\n              this.taskQueue.add({\n                action: function () {\n                  return _this.stop(animationNames);\n                }\n              });\n              return;\n            }\n            this.animator.stop(animationNames);\n            if (this.eventCleanup) {\n              this.eventCleanup();\n            }\n          };\n          /**\n           * Resets the animation\n           * @param artboard the name of the artboard, or default if none given\n           * @param animations the names of animations for playback\n           * @param stateMachines the names of state machines for playback\n           * @param autoplay whether to autoplay when reset, defaults to false\n           *\n           */\n          Rive.prototype.reset = function (params) {\n            var _a;\n            // Get the current artboard, animations, state machines, and playback states\n            var artBoardName = params === null || params === void 0 ? void 0 : params.artboard;\n            var animationNames = mapToStringArray(params === null || params === void 0 ? void 0 : params.animations);\n            var stateMachineNames = mapToStringArray(params === null || params === void 0 ? void 0 : params.stateMachines);\n            var autoplay = (_a = params === null || params === void 0 ? void 0 : params.autoplay) !== null && _a !== void 0 ? _a : false;\n            // Stop everything and clean up\n            this.cleanupInstances();\n            // Reinitialize an artboard instance with the state\n            this.initArtboard(artBoardName, animationNames, stateMachineNames, autoplay);\n            this.taskQueue.process();\n          };\n          // Loads a new Rive file, keeping listeners in place\n          Rive.prototype.load = function (params) {\n            // Stop all animations\n            this.stop();\n            // Reinitialize\n            this.init(params);\n          };\n          Object.defineProperty(Rive.prototype, \"layout\", {\n            /**\n             * Returns the current layout. Note that layout should be treated as\n             * immutable. If you want to change the layout, create a new one use the\n             * layout setter\n             */\n            get: function () {\n              return this._layout;\n            },\n            // Sets a new layout\n            set: function (layout) {\n              this._layout = layout;\n              // If the maxX or maxY are 0, then set them to the canvas width and height\n              if (!layout.maxX || !layout.maxY) {\n                this.resizeToCanvas();\n              }\n              if (this.loaded && !this.animator.isPlaying) {\n                this.drawFrame();\n              }\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Sets the layout bounds to the current canvas size; this is typically called\n           * when the canvas is resized\n           */\n          Rive.prototype.resizeToCanvas = function () {\n            this._layout = this.layout.copyWith({\n              minX: 0,\n              minY: 0,\n              maxX: this.canvas.width,\n              maxY: this.canvas.height\n            });\n          };\n          /**\n           * Accounts for devicePixelRatio as a multiplier to render the size of the canvas drawing surface.\n           * Uses the size of the backing canvas to set new width/height attributes. Need to re-render\n           * and resize the layout to match the new drawing surface afterwards.\n           * Useful function for consumers to include in a window resize listener\n           */\n          Rive.prototype.resizeDrawingSurfaceToCanvas = function () {\n            if (this.canvas instanceof HTMLCanvasElement && !!window) {\n              var _a = this.canvas.getBoundingClientRect(),\n                width = _a.width,\n                height = _a.height;\n              var dpr = window.devicePixelRatio || 1;\n              this.canvas.width = dpr * width;\n              this.canvas.height = dpr * height;\n              this.startRendering();\n              this.resizeToCanvas();\n            }\n          };\n          Object.defineProperty(Rive.prototype, \"source\", {\n            // Returns the animation source, which may be undefined\n            get: function () {\n              return this.src;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"activeArtboard\", {\n            /**\n             * Returns the name of the active artboard\n             */\n            get: function () {\n              return this.artboard ? this.artboard.name : \"\";\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"animationNames\", {\n            // Returns a list of animation names on the chosen artboard\n            get: function () {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n              var animationNames = [];\n              for (var i = 0; i < this.artboard.animationCount(); i++) {\n                animationNames.push(this.artboard.animationByIndex(i).name);\n              }\n              return animationNames;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"stateMachineNames\", {\n            /**\n             * Returns a list of state machine names from the current artboard\n             */\n            get: function () {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n              var stateMachineNames = [];\n              for (var i = 0; i < this.artboard.stateMachineCount(); i++) {\n                stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n              }\n              return stateMachineNames;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Returns the inputs for the specified instanced state machine, or an empty\n           * list if the name is invalid or the state machine is not instanced\n           * @param name the state machine name\n           * @returns the inputs for the named state machine\n           */\n          Rive.prototype.stateMachineInputs = function (name) {\n            // If the file's not loaded, early out, nothing to pause\n            if (!this.loaded) {\n              return;\n            }\n            var stateMachine = this.animator.stateMachines.find(function (m) {\n              return m.name === name;\n            });\n            return stateMachine === null || stateMachine === void 0 ? void 0 : stateMachine.inputs;\n          };\n          Object.defineProperty(Rive.prototype, \"playingStateMachineNames\", {\n            // Returns a list of playing machine names\n            get: function () {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n              return this.animator.stateMachines.filter(function (m) {\n                return m.playing;\n              }).map(function (m) {\n                return m.name;\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"playingAnimationNames\", {\n            // Returns a list of playing animation names\n            get: function () {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n              return this.animator.animations.filter(function (a) {\n                return a.playing;\n              }).map(function (a) {\n                return a.name;\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"pausedAnimationNames\", {\n            // Returns a list of paused animation names\n            get: function () {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n              return this.animator.animations.filter(function (a) {\n                return !a.playing;\n              }).map(function (a) {\n                return a.name;\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"pausedStateMachineNames\", {\n            /**\n             *  Returns a list of paused machine names\n             * @returns a list of state machine names that are paused\n             */\n            get: function () {\n              // If the file's not loaded, we got nothing to return\n              if (!this.loaded) {\n                return [];\n              }\n              return this.animator.stateMachines.filter(function (m) {\n                return !m.playing;\n              }).map(function (m) {\n                return m.name;\n              });\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"isPlaying\", {\n            /**\n             * @returns true if any animation is playing\n             */\n            get: function () {\n              return this.animator.isPlaying;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"isPaused\", {\n            /**\n             * @returns true if all instanced animations are paused\n             */\n            get: function () {\n              return this.animator.isPaused;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"isStopped\", {\n            /**\n             * @returns true if no animations are playing or paused\n             */\n            get: function () {\n              return this.animator.isStopped;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          Object.defineProperty(Rive.prototype, \"bounds\", {\n            /**\n             * @returns the bounds of the current artboard, or undefined if the artboard\n             * isn't loaded yet.\n             */\n            get: function () {\n              return this.artboard ? this.artboard.bounds : undefined;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          /**\n           * Subscribe to Rive-generated events\n           * @param type the type of event to subscribe to\n           * @param callback callback to fire when the event occurs\n           */\n          Rive.prototype.on = function (type, callback) {\n            this.eventManager.add({\n              type: type,\n              callback: callback\n            });\n          };\n          /**\n           * Unsubscribes from a Rive-generated event\n           * @param callback the callback to unsubscribe from\n           */\n          Rive.prototype.unsubscribe = function (type, callback) {\n            this.eventManager.remove({\n              type: type,\n              callback: callback\n            });\n          };\n          /**\n           * Unsubscribes all listeners from an event type, or everything if no type is\n           * given\n           * @param type the type of event to unsubscribe from, or all types if\n           * undefined\n           */\n          Rive.prototype.unsubscribeAll = function (type) {\n            this.eventManager.removeAll(type);\n          };\n          /**\n           * Stops the rendering loop; this is different from pausing in that it doesn't\n           * change the state of any animation. It stops rendering from occurring. This\n           * is designed for situations such as when Rive isn't visible.\n           *\n           * The only way to start rendering again is to call `startRendering`.\n           * Animations that are marked as playing will start from the position that\n           * they would have been at if rendering had not been stopped.\n           */\n          Rive.prototype.stopRendering = function () {\n            if (this.loaded && this.frameRequestId) {\n              if (this.runtime.cancelAnimationFrame) {\n                this.runtime.cancelAnimationFrame(this.frameRequestId);\n              } else {\n                cancelAnimationFrame(this.frameRequestId);\n              }\n              this.frameRequestId = null;\n            }\n          };\n          /**\n           * Starts the rendering loop if it has been previously stopped. If the\n           * renderer is already active, then this will have zero effect.\n           */\n          Rive.prototype.startRendering = function () {\n            if (this.loaded && this.artboard && !this.frameRequestId) {\n              if (this.runtime.requestAnimationFrame) {\n                this.frameRequestId = this.runtime.requestAnimationFrame(this.draw.bind(this));\n              } else {\n                this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n              }\n            }\n          };\n          /**\n           * Enables frames-per-second (FPS) reporting for the runtime\n           * If no callback is provided, Rive will append a fixed-position div at the top-right corner of\n           * the page with the FPS reading\n           * @param fpsCallback - Callback from the runtime during the RAF loop that supplies the FPS value\n           */\n          Rive.prototype.enableFPSCounter = function (fpsCallback) {\n            this.runtime.enableFPSCounter(fpsCallback);\n          };\n          /**\n           * Disables frames-per-second (FPS) reporting for the runtime\n           */\n          Rive.prototype.disableFPSCounter = function () {\n            this.runtime.disableFPSCounter();\n          };\n          Object.defineProperty(Rive.prototype, \"contents\", {\n            /**\n             * Returns the contents of a Rive file: the artboards, animations, and state machines\n             */\n            get: function () {\n              if (!this.loaded) {\n                return undefined;\n              }\n              var riveContents = {\n                artboards: []\n              };\n              for (var i = 0; i < this.file.artboardCount(); i++) {\n                var artboard = this.file.artboardByIndex(i);\n                var artboardContents = {\n                  name: artboard.name,\n                  animations: [],\n                  stateMachines: []\n                };\n                for (var j = 0; j < artboard.animationCount(); j++) {\n                  var animation = artboard.animationByIndex(j);\n                  artboardContents.animations.push(animation.name);\n                }\n                for (var k = 0; k < artboard.stateMachineCount(); k++) {\n                  var stateMachine = artboard.stateMachineByIndex(k);\n                  var name_1 = stateMachine.name;\n                  var instance = new this.runtime.StateMachineInstance(stateMachine, artboard);\n                  var inputContents = [];\n                  for (var l = 0; l < instance.inputCount(); l++) {\n                    var input = instance.input(l);\n                    inputContents.push({\n                      name: input.name,\n                      type: input.type\n                    });\n                  }\n                  artboardContents.stateMachines.push({\n                    name: name_1,\n                    inputs: inputContents\n                  });\n                }\n                riveContents.artboards.push(artboardContents);\n              }\n              return riveContents;\n            },\n            enumerable: false,\n            configurable: true\n          });\n          // Error message for missing source or buffer\n          Rive.missingErrorMessage = \"Rive source file or data buffer required\";\n          return Rive;\n        }();\n\n        // Loads Rive data from a URI via fetch.\n        var loadRiveFile = function (src) {\n          return __awaiter(void 0, void 0, void 0, function () {\n            var req, res, buffer;\n            return __generator(this, function (_a) {\n              switch (_a.label) {\n                case 0:\n                  req = new Request(src);\n                  return [4 /*yield*/, fetch(req)];\n                case 1:\n                  res = _a.sent();\n                  return [4 /*yield*/, res.arrayBuffer()];\n                case 2:\n                  buffer = _a.sent();\n                  return [2 /*return*/, buffer];\n              }\n            });\n          });\n        };\n        // #endregion\n        // #region utility functions\n        /*\n         * Utility function to ensure an object is a string array\n         */\n        var mapToStringArray = function (obj) {\n          if (typeof obj === \"string\") {\n            return [obj];\n          } else if (obj instanceof Array) {\n            return obj;\n          }\n          // If obj is undefined, return empty array\n          return [];\n        };\n        // #endregion\n        // #region testing utilities\n        // Exports to only be used for tests\n        var Testing = {\n          EventManager: EventManager,\n          TaskQueueManager: TaskQueueManager\n        };\n        // #endregion\n      })();\n\n      /******/\n      return __webpack_exports__;\n      /******/\n    })()\n  );\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","Rive","_scriptDir","document","currentScript","src","undefined","m","aa","ba","ready","Promise","b","a","ca","h","g","d","c","Map","forEach","l","k","console","error","La","e","fb","f","requestAnimationFrame","bind","set","cancelAnimationFrame","delete","size","cb","body","remove","createElement","style","backgroundColor","position","right","top","color","padding","innerHTML","toFixed","appendChild","performance","now","$a","ea","assert","Infinity","push","has","clearTimeout","get","setTimeout","length","Math","max","keys","fa","t","v","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","preferLowPowerToHighPerformance","failIfMajorPerformanceCaveat","enableExtensionsByDefault","explicitSwapControl","renderViaOffscreenBackBuffer","q","getContext","log","min","getParameter","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_SIZE","F","I","w","z","createShader","shaderSource","compileShader","getShaderInfoLog","attachShader","createProgram","VERTEX_SHADER","FRAGMENT_SHADER","bindAttribLocation","linkProgram","getProgramInfoLog","trim","getUniformLocation","useProgram","bindBuffer","ARRAY_BUFFER","createBuffer","enableVertexAttribArray","ELEMENT_ARRAY_BUFFER","uniform1i","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","ob","Ya","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","generateMipmap","p","r","bb","canvas","width","height","viewport","disable","SCISSOR_TEST","clearColor","clear","COLOR_BUFFER_BIT","enable","sort","y","da","Oa","bufferData","DYNAMIC_DRAW","J","bufferSubData","Aa","P","Ra","X","indices","image","va","Va","rb","scissor","Ea","Fa","Ka","yb","uniform4f","la","ra","sa","uniform2f","pb","qb","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","onRuntimeInitialized","n","srcOver","screen","overlay","darken","lighten","colorDodge","colorBurn","hardLight","softLight","difference","exclusion","multiply","hue","saturation","luminosity","drawWidth","drawHeight","reset","u","RenderPaintStyle","RenderPath","RenderPaint","Renderer","StrokeCap","StrokeJoin","BlendMode","fill","stroke","FillRule","evenOdd","RenderImage","extend","__construct","__parent","call","decode","Xa","total","D","B","Image","URL","createObjectURL","Blob","type","onload","Ta","loaded","E","ga","Path2D","rewind","addPath","G","A","C","R","K","DOMMatrix","fillRule","Ca","moveTo","lineTo","cubicTo","bezierCurveTo","close","closePath","Da","thickness","Wa","join","miter","ua","round","bevel","cap","butt","ta","square","Ua","blendMode","Sa","linearGradient","oa","Pa","Qa","Ha","Ia","za","radialGradient","mb","addStop","stop","completeGradient","draw","globalCompositeOperation","createRadialGradient","sqrt","createLinearGradient","U","L","addColorStop","strokeStyle","lineWidth","lineCap","lineJoin","fillStyle","Set","CanvasRenderer","Z","Ba","save","slice","restore","splice","transform","rotate","sin","cos","_drawPath","drawImage","_len","arguments","Array","_key","_drawRiveImage","globalAlpha","_getMatrix","_drawImageMesh","ia","ceil","ja","DynamicRectanizer","addRect","add","sb","Float32Array","Uint16Array","na","Yb","resetTransform","_clipPath","clip","clearRect","flush","translate","makeRenderer","renderFactory","makeRenderPaint","makeRenderPath","makeRenderImage","load","enableFPSCounter","disableFPSCounter","cleanup","ha","Object","assign","ka","window","importScripts","x","ma","self","location","href","indexOf","substr","replace","lastIndexOf","XMLHttpRequest","open","responseType","send","Uint8Array","response","status","onerror","pa","print","qa","printErr","warn","wasmBinary","noExitRuntime","WebAssembly","wa","xa","TextDecoder","ya","buffer","subarray","String","fromCharCode","H","M","Ga","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","HEAPU32","Uint32Array","HEAPF32","HEAPF64","Float64Array","Ja","preRun","shift","unshift","Ma","Na","onAbort","RuntimeError","N","startsWith","locateFile","fetch","credentials","then","ok","arrayBuffer","catch","resolve","charCodeAt","apply","O","value","Error","name","message","stack","toString","prototype","create","constructor","Za","Q","S","pop","ab","T","db","eb","V","$","gb","hb","ib","jb","kb","lb","nb","count","W","tb","ub","vb","wb","xb","FinalizationRegistry","register","unregister","zb","Ab","Bb","fromWireType","Cb","Db","Y","hasOwnProperty","Eb","TypeError","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","clone","Ob","Pb","toWireType","Qb","Rb","includes","concat","Sb","Tb","map","Ub","Vb","Wb","Xb","Zb","$b","ac","bc","cc","dc","ec","fc","gc","hc","ic","jc","kc","lc","mc","nc","oc","BindingError","count_emval_handles","get_first_emval","PureVirtualError","pc","qc","getInheritedInstanceCount","getLiveInheritedInstances","flushPendingDeletes","setDelayFunction","InternalError","isAliasOf","getPrototypeOf","isDeleted","deleteLater","argPackAdvance","readValueFromPointer","deleteObject","pointerType","UnboundTypeError","sc","defineProperty","implement","notifyOnDestruction","defineProperties","__destruct","read","write","Symbol","substring","s","enumerable","configurable","o","className","values","j","ArrayBuffer","Uint8ClampedArray","rc","i","grow","byteLength","asm","monitorRunDependencies","clearInterval","instance","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_free","_malloc","___getTypeName","__embind_initialize_bindings","dynCall_jiji","tc","uc","vc","calledRun","postRun","setStatus","preInit","__WEBPACK_DEFAULT_EXPORT__","_this","getClientCoordinates","event","_a","touches","preventDefault","clientX","clientY","_b","changedTouches","registerTouchInteractions","artboard","stateMachines","renderer","rive","fit","alignment","processEventCallback","boundingRect","currentTarget","getBoundingClientRect","canvasX","left","canvasY","forwardMatrix","computeAlignment","minX","minY","maxX","maxY","bounds","invertedMatrix","Mat2D","invert","canvasCoordinatesVector","Vec2D","transformedVector","mapXY","transformedX","transformedY","_i","stateMachines_1","stateMachine","pointerMove","stateMachines_2","pointerDown","_c","stateMachines_3","pointerUp","callback","addEventListener","removeEventListener","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","key","obj","prop","toStringTag","Fit","Alignment","Layout","params","Contain","Center","_d","_e","_f","new","copyWith","runtimeFit","cachedRuntimeFit","Cover","cover","contain","Fill","FitWidth","fitWidth","FitHeight","fitHeight","ScaleDown","scaleDown","none","runtimeAlignment","cachedRuntimeAlignment","TopLeft","topLeft","TopCenter","topCenter","TopRight","topRight","CenterLeft","centerLeft","CenterRight","centerRight","BottomLeft","bottomLeft","BottomCenter","bottomCenter","BottomRight","bottomRight","center","RuntimeLoader","loadRuntime","_rive_advanced_mjs__WEBPACK_IMPORTED_MODULE_0__","default","wasmURL","runtime","callBackQueue","getInstance","isLoading","awaitInstance","setWasmUrl","url","package_json__WEBPACK_IMPORTED_MODULE_1__","version","Animation","animation","playing","loopCount","scrubTo","LinearAnimationInstance","time","loopValue","advance","mix","StateMachineInputType","StateMachineInput","runtimeInput","fire","Trigger","StateMachine","inputs","StateMachineInstance","initInputs","names","stateChangedCount","stateChangedNameByIndex","inputCount","input","mapRuntimeInput","SMIInput","bool","Boolean","asBool","number","Number","asNumber","trigger","asTrigger","Animator","eventManager","animations","animatables","fireEvent","mapToStringArray","instancedAnimationNames","instancedMachineNames","aIndex","mIndex","anim","animationByName","newAnimation","sm","stateMachineByName","newStateMachine","EventType","Play","data","Pause","paused","play","pause","scrub","forScrubbing","filter","removedNames","animationsToRemove","machinesToRemove","Stop","reduce","acc","curr","isPlaying","atLeastOne","instancedName","animationCount","animationByIndex","stateMachineCount","stateMachineByIndex","handleLooping","Loop","LoopType","PingPong","handleStateChanges","statesChanged","StateChange","EventManager","listeners","getListeners","listener","currentListener","removeAll","eventListeners","TaskQueueManager","queue","task","process","action","readyForPlaying","eventCleanup","shouldDisableRiveListeners","durations","frameTimes","frameCount","renderSecondTimer","layout","onLoad","on","Load","onLoadError","LoadError","onPlay","onPause","onStop","onLoop","onStateChange","onloaderror","onplay","onpause","onstop","onloop","onstatechange","taskQueue","init","autoplay","useOffscreenRenderer","missingErrorMessage","startingAnimationNames","startingStateMachineNames","resizeDrawingSurfaceToCanvas","initData","setupRiveListeners","activeStateMachines","animator","hasListeners","_utils__WEBPACK_IMPORTED_MODULE_2__","_layout","artboardName","animationNames","stateMachineNames","loadRiveFile","sent","file","initArtboard","drawFrame","msg","reject","rootArtboard","artboardByName","defaultArtboard","instanceNames","startRendering","onSecond","before","frameRequestId","lastRenderTime","elapsedTime","activeAnimations","needsScrub","first","activeAnimations_1","didLoop","activeStateMachines_1","alignRenderer","after","isPaused","isStopped","align","stopRendering","cleanupInstances","artBoardName","resizeToCanvas","HTMLCanvasElement","dpr","devicePixelRatio","stateMachineInputs","find","unsubscribe","unsubscribeAll","fpsCallback","riveContents","artboards","artboardCount","artboardByIndex","artboardContents","name_1","inputContents","__awaiter","req","Request","res","Testing"],"sources":["webpack://rive/webpack/universalModuleDefinition","webpack://rive/npm/canvas_advanced/canvas_advanced.mjs","webpack://rive/src/utils/index.ts","webpack://rive/src/utils/registerTouchInteractions.ts","webpack://rive/webpack/bootstrap","webpack://rive/webpack/runtime/define property getters","webpack://rive/webpack/runtime/hasOwnProperty shorthand","webpack://rive/webpack/runtime/make namespace object","webpack://rive/src/rive.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"rive\"] = factory();\n\telse\n\t\troot[\"rive\"] = factory();\n})(this, function() {\nreturn ","\nvar Rive = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(Rive) {\n  Rive = Rive || {};\n\n\nvar m;m||(m=typeof Rive !== 'undefined' ? Rive : {});var aa,ba;m.ready=new Promise(function(b,a){aa=b;ba=a});\nfunction ca(){function b(h){const g=d;c=a=0;d=new Map;g.forEach(l=>{try{l(h)}catch(k){console.error(k)}});this.La();e&&e.fb()}let a=0,c=0,d=new Map,e=null,f=null;this.requestAnimationFrame=function(h){a||(a=requestAnimationFrame(b.bind(this)));const g=++c;d.set(g,h);return g};this.cancelAnimationFrame=function(h){d.delete(h);a&&0==d.size&&(cancelAnimationFrame(a),a=0)};this.cb=function(h){f&&(document.body.remove(f),f=null);h||(f=document.createElement(\"div\"),f.style.backgroundColor=\"black\",f.style.position=\n\"fixed\",f.style.right=0,f.style.top=0,f.style.color=\"white\",f.style.padding=\"4px\",f.innerHTML=\"RIVE FPS\",h=function(g){f.innerHTML=\"RIVE FPS \"+g.toFixed(1)},document.body.appendChild(f));e=new function(){let g=0,l=0;this.fb=function(){var k=performance.now();l?(++g,k-=l,1E3<k&&(h(1E3*g/k),g=l=0)):(l=k,g=0)}}};this.$a=function(){f&&(document.body.remove(f),f=null);e=null};this.La=function(){}}\nfunction ea(b){console.assert(!0);const a=new Map;let c=-Infinity;this.push=function(d){d=d+((1<<b)-1)>>b;a.has(d)&&clearTimeout(a.get(d));a.set(d,setTimeout(function(){a.delete(d);0==a.length?c=-Infinity:d==c&&(c=Math.max(...a.keys()),console.assert(c<d))},1E3));c=Math.max(d,c);return c<<b}}\nconst fa=new function(){function b(){if(!a){var t=document.createElement(\"canvas\"),v={alpha:1,depth:0,stencil:0,antialias:0,premultipliedAlpha:1,preserveDrawingBuffer:0,preferLowPowerToHighPerformance:0,failIfMajorPerformanceCaveat:0,enableExtensionsByDefault:1,explicitSwapControl:1,renderViaOffscreenBackBuffer:1};let q=t.getContext(\"webgl2\",v);if(q)c=2;else if(q=t.getContext(\"webgl\",v))c=1;else return console.log(\"No WebGL support. Image mesh will not be drawn.\"),!1;d=Math.min(q.getParameter(q.MAX_RENDERBUFFER_SIZE),\nq.getParameter(q.MAX_TEXTURE_SIZE));function F(I,w,z){w=q.createShader(w);q.shaderSource(w,z);q.compileShader(w);z=q.getShaderInfoLog(w);if(0<z.length)throw z;q.attachShader(I,w)}t=q.createProgram();F(t,q.VERTEX_SHADER,\"attribute vec2 vertex;\\n                attribute vec2 uv;\\n                uniform vec4 mat;\\n                uniform vec2 translate;\\n                varying vec2 st;\\n                void main() {\\n                    st = uv;\\n                    gl_Position = vec4(mat2(mat) * vertex + translate, 0, 1);\\n                }\");\nF(t,q.FRAGMENT_SHADER,\"precision highp float;\\n                uniform sampler2D image;\\n                varying vec2 st;\\n                void main() {\\n                    gl_FragColor = texture2D(image, st);\\n                }\");q.bindAttribLocation(t,0,\"vertex\");q.bindAttribLocation(t,1,\"uv\");q.linkProgram(t);v=q.getProgramInfoLog(t);if(0<v.trim().length)throw v;e=q.getUniformLocation(t,\"mat\");f=q.getUniformLocation(t,\"translate\");q.useProgram(t);q.bindBuffer(q.ARRAY_BUFFER,q.createBuffer());\nq.enableVertexAttribArray(0);q.enableVertexAttribArray(1);q.bindBuffer(q.ELEMENT_ARRAY_BUFFER,q.createBuffer());q.uniform1i(q.getUniformLocation(t,\"image\"),0);q.pixelStorei(q.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0);a=q}return!0}let a=null,c=0,d=0,e=null,f=null,h=0,g=0;this.ob=function(){b();return d};this.Ya=function(t){if(!b())return null;const v=a.createTexture();a.bindTexture(a.TEXTURE_2D,v);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,a.RGBA,a.UNSIGNED_BYTE,t);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);\na.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);2==c?(a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR_MIPMAP_LINEAR),a.generateMipmap(a.TEXTURE_2D)):a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR);return v};const l=new ea(8),k=new ea(8),p=new ea(10),r=new ea(10);this.bb=function(t,v,q,F,I){if(b()){var w=l.push(t),z=k.push(v);if(a.canvas.width!=w||a.canvas.height!=z)a.canvas.width=w,a.canvas.height=z;\na.viewport(0,z-v,t,v);a.disable(a.SCISSOR_TEST);a.clearColor(0,0,0,0);a.clear(a.COLOR_BUFFER_BIT);a.enable(a.SCISSOR_TEST);q.sort((y,da)=>da.Oa-y.Oa);w=p.push(F);h!=w&&(a.bufferData(a.ARRAY_BUFFER,8*w,a.DYNAMIC_DRAW),h=w);w=0;for(var J of q)a.bufferSubData(a.ARRAY_BUFFER,w,J.Aa),w+=4*J.Aa.length;console.assert(w==4*F);for(var P of q)a.bufferSubData(a.ARRAY_BUFFER,w,P.Ra),w+=4*P.Ra.length;console.assert(w==8*F);w=r.push(I);g!=w&&(a.bufferData(a.ELEMENT_ARRAY_BUFFER,2*w,a.DYNAMIC_DRAW),g=w);J=0;for(var X of q)a.bufferSubData(a.ELEMENT_ARRAY_BUFFER,\nJ,X.indices),J+=2*X.indices.length;console.assert(J==2*I);X=0;P=!0;w=J=0;for(const y of q){y.image.va!=X&&(a.bindTexture(a.TEXTURE_2D,y.image.Va||null),X=y.image.va);y.rb?(a.scissor(y.Ea,z-y.Fa-y.Ka,y.yb,y.Ka),P=!0):P&&(a.scissor(0,z-v,t,v),P=!1);q=2/t;const da=-2/v;a.uniform4f(e,y.la[0]*q*y.ra,y.la[1]*da*y.sa,y.la[2]*q*y.ra,y.la[3]*da*y.sa);a.uniform2f(f,y.la[4]*q*y.ra+q*(y.Ea-y.pb*y.ra)-1,y.la[5]*da*y.sa+da*(y.Fa-y.qb*y.sa)+1);a.vertexAttribPointer(0,2,a.FLOAT,!1,0,w);a.vertexAttribPointer(1,2,\na.FLOAT,!1,0,w+4*F);a.drawElements(a.TRIANGLES,y.indices.length,a.UNSIGNED_SHORT,J);w+=4*y.Aa.length;J+=2*y.indices.length}console.assert(w==4*F);console.assert(J==2*I)}};this.canvas=function(){return b()&&a.canvas}};\nRive.onRuntimeInitialized=function(){function b(n){switch(n){case k.srcOver:return\"source-over\";case k.screen:return\"screen\";case k.overlay:return\"overlay\";case k.darken:return\"darken\";case k.lighten:return\"lighten\";case k.colorDodge:return\"color-dodge\";case k.colorBurn:return\"color-burn\";case k.hardLight:return\"hard-light\";case k.softLight:return\"soft-light\";case k.difference:return\"difference\";case k.exclusion:return\"exclusion\";case k.multiply:return\"multiply\";case k.hue:return\"hue\";case k.saturation:return\"saturation\";\ncase k.color:return\"color\";case k.luminosity:return\"luminosity\"}}function a(n){return\"rgba(\"+((16711680&n)>>>16)+\",\"+((65280&n)>>>8)+\",\"+((255&n)>>>0)+\",\"+((4278190080&n)>>>24)/255+\")\"}function c(){0<J.length&&(fa.bb(z.drawWidth(),z.drawHeight(),J,P,X),J=[],X=P=0,z.reset(512,512));for(const n of w){for(const u of n.ba)u();n.ba=[]}w.clear()}var d=Rive.RenderPaintStyle;const e=Rive.RenderPath,f=Rive.RenderPaint,h=Rive.Renderer,g=Rive.StrokeCap,l=Rive.StrokeJoin,k=Rive.BlendMode,p=d.fill,r=d.stroke,\nt=Rive.FillRule.evenOdd;let v=1;var q=Rive.RenderImage.extend(\"CanvasRenderImage\",{__construct:function(){this.__parent.__construct.call(this);this.va=v;v=v+1&2147483647||1},decode:function(n){let u=Xa;u.total++;var D=this,B=new Image;B.src=URL.createObjectURL(new Blob([n],{type:\"image/png\"}));B.onload=function(){D.Ta=B;D.Va=fa.Ya(B);D.size(B.width,B.height);u.loaded++;if(u.loaded===u.total){const E=u.ready;E&&(E(),u.ready=null)}}}}),F=e.extend(\"CanvasRenderPath\",{__construct:function(){this.__parent.__construct.call(this);\nthis.ga=new Path2D},rewind:function(){this.ga=new Path2D},addPath:function(n,u,D,B,E,G,A){var C=this.ga,R=C.addPath;n=n.ga;const K=new DOMMatrix;K.a=u;K.b=D;K.c=B;K.d=E;K.e=G;K.f=A;R.call(C,n,K)},fillRule:function(n){this.Ca=n},moveTo:function(n,u){this.ga.moveTo(n,u)},lineTo:function(n,u){this.ga.lineTo(n,u)},cubicTo:function(n,u,D,B,E,G){this.ga.bezierCurveTo(n,u,D,B,E,G)},close:function(){this.ga.closePath()}}),I=f.extend(\"CanvasRenderPaint\",{color:function(n){this.Da=a(n)},thickness:function(n){this.Wa=\nn},join:function(n){switch(n){case l.miter:this.ua=\"miter\";break;case l.round:this.ua=\"round\";break;case l.bevel:this.ua=\"bevel\"}},cap:function(n){switch(n){case g.butt:this.ta=\"butt\";break;case g.round:this.ta=\"round\";break;case g.square:this.ta=\"square\"}},style:function(n){this.Ua=n},blendMode:function(n){this.Sa=b(n)},linearGradient:function(n,u,D,B){this.oa={Pa:n,Qa:u,Ha:D,Ia:B,za:[]}},radialGradient:function(n,u,D,B){this.oa={Pa:n,Qa:u,Ha:D,Ia:B,za:[],mb:!0}},addStop:function(n,u){this.oa.za.push({color:n,\nstop:u})},completeGradient:function(){},draw:function(n,u,D){let B=this.Ua;var E=this.Da,G=this.oa;n.globalCompositeOperation=this.Sa;if(null!=G){E=G.Pa;var A=G.Qa;const R=G.Ha;var C=G.Ia;const K=G.za;G.mb?(G=R-E,C-=A,E=n.createRadialGradient(E,A,0,E,A,Math.sqrt(G*G+C*C))):E=n.createLinearGradient(E,A,R,C);for(let U=0,L=K.length;U<L;U++)A=K[U],E.addColorStop(A.stop,a(A.color));this.Da=E;this.oa=null}switch(B){case r:n.strokeStyle=E;n.lineWidth=this.Wa;n.lineCap=this.ta;n.lineJoin=this.ua;n.stroke(u);\nbreak;case p:n.fillStyle=E,n.fill(u,D)}}});const w=new Set;let z=null,J=[],P=0,X=0;var y=Rive.CanvasRenderer=h.extend(\"Renderer\",{__construct:function(n){this.__parent.__construct.call(this);this.fa=[1,0,0,1,0,0];this.Z=n.getContext(\"2d\");this.Ba=n;this.ba=[]},save:function(){this.fa.push(...this.fa.slice(this.fa.length-6));this.ba.push(this.Z.save.bind(this.Z))},restore:function(){const n=this.fa.length-6;if(6>n)throw\"restore() called without matching save().\";this.fa.splice(n);this.ba.push(this.Z.restore.bind(this.Z))},\ntransform:function(n,u,D,B,E,G){const A=this.fa,C=A.length-6;A.splice(C,6,A[C]*n+A[C+2]*u,A[C+1]*n+A[C+3]*u,A[C]*D+A[C+2]*B,A[C+1]*D+A[C+3]*B,A[C]*E+A[C+2]*G+A[C+4],A[C+1]*E+A[C+3]*G+A[C+5]);this.ba.push(this.Z.transform.bind(this.Z,n,u,D,B,E,G))},rotate:function(n){const u=Math.sin(n);n=Math.cos(n);this.transform(n,u,-u,n,0,0)},_drawPath:function(n,u){this.ba.push(u.draw.bind(u,this.Z,n.ga,n.Ca===t?\"evenodd\":\"nonzero\"))},drawImage:function(n,...u){var D=this.Z;this.ba.push(function(){D.drawImage(n,\n...u)})},_drawRiveImage:function(n,u,D){var B=n.Ta;if(B){var E=this.Z,G=b(u);this.ba.push(function(){E.globalCompositeOperation=G;E.globalAlpha=D;E.drawImage(B,0,0);E.globalAlpha=1})}},_getMatrix:function(n){const u=this.fa,D=u.length-6;for(let B=0;6>B;++B)n[B]=u[D+B]},_drawImageMesh:function(n,u,D,B,E,G,A,C,R,K){var U=this.Z.canvas.width,L=this.Z.canvas.height;const pb=R-A,qb=K-C;A=Math.max(A,0);C=Math.max(C,0);R=Math.min(R,U);K=Math.min(K,L);const sa=R-A,ta=K-C;console.assert(sa<=Math.min(pb,U));\nconsole.assert(ta<=Math.min(qb,L));if(!(0>=sa||0>=ta)){R=sa<pb||ta<qb;U=K=1;var ia=Math.ceil(sa*K),ja=Math.ceil(ta*U);L=fa.ob();ia>L&&(K*=L/ia,ia=L);ja>L&&(U*=L/ja,ja=L);z||(z=new m.DynamicRectanizer(L),z.reset(512,512));L=z.addRect(ia,ja);0>L&&(c(),w.add(this),L=z.addRect(ia,ja),console.assert(0<=L));var rb=L&65535,sb=L>>16;J.push({la:this.fa.slice(this.fa.length-6),image:n,Ea:rb,Fa:sb,pb:A,qb:C,yb:ia,Ka:ja,ra:K,sa:U,Aa:new Float32Array(B),Ra:new Float32Array(E),indices:new Uint16Array(G),rb:R,Oa:n.va<<\n1|(R?1:0)});P+=B.length;X+=G.length;var na=this.Z,Yb=b(u);this.ba.push(function(){na.save();na.resetTransform();na.globalCompositeOperation=Yb;na.globalAlpha=D;na.drawImage(fa.canvas(),rb,sb,ia,ja,A,C,sa,ta);na.restore()})}},_clipPath:function(n){this.ba.push(this.Z.clip.bind(this.Z,n.ga,n.Ca===t?\"evenodd\":\"nonzero\"))},clear:function(){w.add(this);this.ba.push(this.Z.clearRect.bind(this.Z,0,0,this.Ba.width,this.Ba.height))},flush:function(){},translate:function(n,u){this.transform(1,0,0,1,n,u)}});\nRive.makeRenderer=function(n){return new y(n)};Rive.renderFactory={makeRenderPaint:function(){return new I},makeRenderPath:function(){return new F},makeRenderImage:function(){return new q}};let da=Rive.load,Xa=null;Rive.load=function(n){return new Promise(function(u){let D=null;Xa={total:0,loaded:0,ready:function(){u(D)}};D=da(n);0==Xa.total&&u(D)})};d=new ca;Rive.requestAnimationFrame=d.requestAnimationFrame.bind(d);Rive.cancelAnimationFrame=d.cancelAnimationFrame.bind(d);Rive.enableFPSCounter=d.cb.bind(d);\nRive.disableFPSCounter=d.$a;d.La=c;Rive.cleanup=function(){z&&z.delete()}};var ha=Object.assign({},m),ka=\"object\"==typeof window,la=\"function\"==typeof importScripts,x=\"\",ma,oa;\nif(ka||la)la?x=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(x=document.currentScript.src),_scriptDir&&(x=_scriptDir),0!==x.indexOf(\"blob:\")?x=x.substr(0,x.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):x=\"\",la&&(oa=b=>{var a=new XMLHttpRequest;a.open(\"GET\",b,!1);a.responseType=\"arraybuffer\";a.send(null);return new Uint8Array(a.response)}),ma=(b,a,c)=>{var d=new XMLHttpRequest;d.open(\"GET\",b,!0);d.responseType=\"arraybuffer\";d.onload=()=>{200==d.status||0==d.status&&d.response?\na(d.response):c()};d.onerror=c;d.send(null)};var pa=m.print||console.log.bind(console),qa=m.printErr||console.warn.bind(console);Object.assign(m,ha);ha=null;var ra;m.wasmBinary&&(ra=m.wasmBinary);var noExitRuntime=m.noExitRuntime||!0;\"object\"!=typeof WebAssembly&&ua(\"no native wasm support detected\");var va,wa=!1,xa=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction ya(b,a,c){var d=a+c;for(c=a;b[c]&&!(c>=d);)++c;if(16<c-a&&b.buffer&&xa)return xa.decode(b.subarray(a,c));for(d=\"\";a<c;){var e=b[a++];if(e&128){var f=b[a++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|f);else{var h=b[a++]&63;e=224==(e&240)?(e&15)<<12|f<<6|h:(e&7)<<18|f<<12|h<<6|b[a++]&63;65536>e?d+=String.fromCharCode(e):(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}return d}var za,Aa,H,Ba,Ca,Da,M,Ea,Fa;\nfunction Ga(){var b=va.buffer;za=b;m.HEAP8=Aa=new Int8Array(b);m.HEAP16=Ba=new Int16Array(b);m.HEAP32=Da=new Int32Array(b);m.HEAPU8=H=new Uint8Array(b);m.HEAPU16=Ca=new Uint16Array(b);m.HEAPU32=M=new Uint32Array(b);m.HEAPF32=Ea=new Float32Array(b);m.HEAPF64=Fa=new Float64Array(b)}var Ha,Ia=[],Ja=[],Ka=[];function La(){var b=m.preRun.shift();Ia.unshift(b)}var Ma=0,Na=null,Oa=null;\nfunction ua(b){if(m.onAbort)m.onAbort(b);b=\"Aborted(\"+b+\")\";qa(b);wa=!0;b=new WebAssembly.RuntimeError(b+\". Build with -sASSERTIONS for more info.\");ba(b);throw b;}function Pa(){return N.startsWith(\"data:application/octet-stream;base64,\")}var N;N=\"canvas_advanced.wasm\";if(!Pa()){var Qa=N;N=m.locateFile?m.locateFile(Qa,x):x+Qa}function Ra(){var b=N;try{if(b==N&&ra)return new Uint8Array(ra);if(oa)return oa(b);throw\"both async and sync fetching of the wasm failed\";}catch(a){ua(a)}}\nfunction Sa(){if(!ra&&(ka||la)){if(\"function\"==typeof fetch&&!N.startsWith(\"file://\"))return fetch(N,{credentials:\"same-origin\"}).then(function(b){if(!b.ok)throw\"failed to load wasm binary file at '\"+N+\"'\";return b.arrayBuffer()}).catch(function(){return Ra()});if(ma)return new Promise(function(b,a){ma(N,function(c){b(new Uint8Array(c))},a)})}return Promise.resolve().then(function(){return Ra()})}function Ta(b){for(;0<b.length;)b.shift()(m)}\nfunction Ua(b){if(void 0===b)return\"_unknown\";b=b.replace(/[^a-zA-Z0-9_]/g,\"$\");var a=b.charCodeAt(0);return 48<=a&&57>=a?\"_\"+b:b}function Va(b,a){b=Ua(b);return function(){return a.apply(this,arguments)}}var O=[{},{value:void 0},{value:null},{value:!0},{value:!1}],Wa=[];\nfunction Ya(b){var a=Error,c=Va(b,function(d){this.name=b;this.message=d;d=Error(d).stack;void 0!==d&&(this.stack=this.toString()+\"\\n\"+d.replace(/^Error(:[^\\n]*)?\\n/,\"\"))});c.prototype=Object.create(a.prototype);c.prototype.constructor=c;c.prototype.toString=function(){return void 0===this.message?this.name:this.name+\": \"+this.message};return c}var Za=void 0;function Q(b){throw new Za(b);}\nvar $a=b=>{b||Q(\"Cannot use deleted val. handle = \"+b);return O[b].value},S=b=>{switch(b){case void 0:return 1;case null:return 2;case !0:return 3;case !1:return 4;default:var a=Wa.length?Wa.pop():O.length;O[a]={ya:1,value:b};return a}},ab=void 0,bb=void 0;function T(b){for(var a=\"\";H[b];)a+=bb[H[b++]];return a}var cb=[];function db(){for(;cb.length;){var b=cb.pop();b.U.ka=!1;b[\"delete\"]()}}var eb=void 0,V={};\nfunction fb(b,a){for(void 0===a&&Q(\"ptr should not be undefined\");b.$;)a=b.na(a),b=b.$;return a}var gb={};function hb(b){b=ib(b);var a=T(b);jb(b);return a}function kb(b,a){var c=gb[b];void 0===c&&Q(a+\" has unknown type \"+hb(b));return c}function lb(){}var mb=!1;function nb(b){--b.count.value;0===b.count.value&&(b.aa?b.da.ha(b.aa):b.X.V.ha(b.W))}function ob(b,a,c){if(a===c)return b;if(void 0===c.$)return null;b=ob(b,a,c.$);return null===b?null:c.ab(b)}var tb={};\nfunction ub(b,a){a=fb(b,a);return V[a]}var vb=void 0;function wb(b){throw new vb(b);}function xb(b,a){a.X&&a.W||wb(\"makeClassHandle requires ptr and ptrType\");!!a.da!==!!a.aa&&wb(\"Both smartPtrType and smartPtr must be specified\");a.count={value:1};return yb(Object.create(b,{U:{value:a}}))}\nfunction yb(b){if(\"undefined\"===typeof FinalizationRegistry)return yb=a=>a,b;mb=new FinalizationRegistry(a=>{nb(a.U)});yb=a=>{var c=a.U;c.aa&&mb.register(a,{U:c},a);return a};lb=a=>{mb.unregister(a)};return yb(b)}var zb={};function Ab(b){for(;b.length;){var a=b.pop();b.pop()(a)}}function Bb(b){return this.fromWireType(Da[b>>2])}var Cb={},Db={};\nfunction W(b,a,c){function d(g){g=c(g);g.length!==b.length&&wb(\"Mismatched type converter count\");for(var l=0;l<b.length;++l)Y(b[l],g[l])}b.forEach(function(g){Db[g]=a});var e=Array(a.length),f=[],h=0;a.forEach((g,l)=>{gb.hasOwnProperty(g)?e[l]=gb[g]:(f.push(g),Cb.hasOwnProperty(g)||(Cb[g]=[]),Cb[g].push(()=>{e[l]=gb[g];++h;h===f.length&&d(e)}))});0===f.length&&d(e)}\nfunction Eb(b){switch(b){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+b);}}\nfunction Y(b,a,c={}){if(!(\"argPackAdvance\"in a))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");var d=a.name;b||Q('type \"'+d+'\" must have a positive integer typeid pointer');if(gb.hasOwnProperty(b)){if(c.lb)return;Q(\"Cannot register type '\"+d+\"' twice\")}gb[b]=a;delete Db[b];Cb.hasOwnProperty(b)&&(a=Cb[b],delete Cb[b],a.forEach(e=>e()))}function Fb(b){Q(b.U.X.V.name+\" instance already deleted\")}function Gb(){}\nfunction Hb(b,a,c){if(void 0===b[a].Y){var d=b[a];b[a]=function(){b[a].Y.hasOwnProperty(arguments.length)||Q(\"Function '\"+c+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+b[a].Y+\")!\");return b[a].Y[arguments.length].apply(this,arguments)};b[a].Y=[];b[a].Y[d.ja]=d}}\nfunction Ib(b,a,c){m.hasOwnProperty(b)?((void 0===c||void 0!==m[b].Y&&void 0!==m[b].Y[c])&&Q(\"Cannot register public name '\"+b+\"' twice\"),Hb(m,b,b),m.hasOwnProperty(c)&&Q(\"Cannot register multiple overloads of a function with the same number of arguments (\"+c+\")!\"),m[b].Y[c]=a):(m[b]=a,void 0!==c&&(m[b].zb=c))}function Jb(b,a,c,d,e,f,h,g){this.name=b;this.constructor=a;this.ea=c;this.ha=d;this.$=e;this.gb=f;this.na=h;this.ab=g;this.Ma=[]}\nfunction Kb(b,a,c){for(;a!==c;)a.na||Q(\"Expected null or instance of \"+c.name+\", got an instance of \"+a.name),b=a.na(b),a=a.$;return b}function Lb(b,a){if(null===a)return this.wa&&Q(\"null is not a valid \"+this.name),0;a.U||Q('Cannot pass \"'+Mb(a)+'\" as a '+this.name);a.U.W||Q(\"Cannot pass deleted object as a pointer of type \"+this.name);return Kb(a.U.W,a.U.X.V,this.V)}\nfunction Nb(b,a){if(null===a){this.wa&&Q(\"null is not a valid \"+this.name);if(this.qa){var c=this.xa();null!==b&&b.push(this.ha,c);return c}return 0}a.U||Q('Cannot pass \"'+Mb(a)+'\" as a '+this.name);a.U.W||Q(\"Cannot pass deleted object as a pointer of type \"+this.name);!this.pa&&a.U.X.pa&&Q(\"Cannot convert argument of type \"+(a.U.da?a.U.da.name:a.U.X.name)+\" to parameter type \"+this.name);c=Kb(a.U.W,a.U.X.V,this.V);if(this.qa)switch(void 0===a.U.aa&&Q(\"Passing raw pointer to smart pointer is illegal\"),\nthis.xb){case 0:a.U.da===this?c=a.U.aa:Q(\"Cannot convert argument of type \"+(a.U.da?a.U.da.name:a.U.X.name)+\" to parameter type \"+this.name);break;case 1:c=a.U.aa;break;case 2:if(a.U.da===this)c=a.U.aa;else{var d=a.clone();c=this.tb(c,S(function(){d[\"delete\"]()}));null!==b&&b.push(this.ha,c)}break;default:Q(\"Unsupporting sharing policy\")}return c}\nfunction Ob(b,a){if(null===a)return this.wa&&Q(\"null is not a valid \"+this.name),0;a.U||Q('Cannot pass \"'+Mb(a)+'\" as a '+this.name);a.U.W||Q(\"Cannot pass deleted object as a pointer of type \"+this.name);a.U.X.pa&&Q(\"Cannot convert argument of type \"+a.U.X.name+\" to parameter type \"+this.name);return Kb(a.U.W,a.U.X.V,this.V)}\nfunction Pb(b,a,c,d){this.name=b;this.V=a;this.wa=c;this.pa=d;this.qa=!1;this.ha=this.tb=this.xa=this.Na=this.xb=this.sb=void 0;void 0!==a.$?this.toWireType=Nb:(this.toWireType=d?Lb:Ob,this.ca=null)}function Qb(b,a,c){m.hasOwnProperty(b)||wb(\"Replacing nonexistant public symbol\");void 0!==m[b].Y&&void 0!==c?m[b].Y[c]=a:(m[b]=a,m[b].ja=c)}\nfunction Rb(b,a){var c=[];return function(){c.length=0;Object.assign(c,arguments);if(b.includes(\"j\")){var d=m[\"dynCall_\"+b];d=c&&c.length?d.apply(null,[a].concat(c)):d.call(null,a)}else d=Ha.get(a).apply(null,c);return d}}function Z(b,a){b=T(b);var c=b.includes(\"j\")?Rb(b,a):Ha.get(a);\"function\"!=typeof c&&Q(\"unknown function pointer with signature \"+b+\": \"+a);return c}var Sb=void 0;\nfunction Tb(b,a){function c(f){e[f]||gb[f]||(Db[f]?Db[f].forEach(c):(d.push(f),e[f]=!0))}var d=[],e={};a.forEach(c);throw new Sb(b+\": \"+d.map(hb).join([\", \"]));}\nfunction Ub(b,a,c,d,e){var f=a.length;2>f&&Q(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");var h=null!==a[1]&&null!==c,g=!1;for(c=1;c<a.length;++c)if(null!==a[c]&&void 0===a[c].ca){g=!0;break}var l=\"void\"!==a[0].name,k=f-2,p=Array(k),r=[],t=[];return function(){arguments.length!==k&&Q(\"function \"+b+\" called with \"+arguments.length+\" arguments, expected \"+k+\" args!\");t.length=0;r.length=h?2:1;r[0]=e;if(h){var v=a[1].toWireType(t,this);r[1]=v}for(var q=0;q<k;++q)p[q]=\na[q+2].toWireType(t,arguments[q]),r.push(p[q]);q=d.apply(null,r);if(g)Ab(t);else for(var F=h?1:2;F<a.length;F++){var I=1===F?v:p[F-2];null!==a[F].ca&&a[F].ca(I)}v=l?a[0].fromWireType(q):void 0;return v}}function Vb(b,a){for(var c=[],d=0;d<b;d++)c.push(M[a+4*d>>2]);return c}\nfunction Wb(b,a,c){b instanceof Object||Q(c+' with invalid \"this\": '+b);b instanceof a.V.constructor||Q(c+' incompatible with \"this\" of type '+b.constructor.name);b.U.W||Q(\"cannot call emscripten binding method \"+c+\" on deleted object\");return Kb(b.U.W,b.U.X.V,a.V)}function Xb(b){4<b&&0===--O[b].ya&&(O[b]=void 0,Wa.push(b))}\nfunction Zb(b,a,c){switch(a){case 0:return function(d){return this.fromWireType((c?Aa:H)[d])};case 1:return function(d){return this.fromWireType((c?Ba:Ca)[d>>1])};case 2:return function(d){return this.fromWireType((c?Da:M)[d>>2])};default:throw new TypeError(\"Unknown integer type: \"+b);}}function Mb(b){if(null===b)return\"null\";var a=typeof b;return\"object\"===a||\"array\"===a||\"function\"===a?b.toString():\"\"+b}\nfunction $b(b,a){switch(a){case 2:return function(c){return this.fromWireType(Ea[c>>2])};case 3:return function(c){return this.fromWireType(Fa[c>>3])};default:throw new TypeError(\"Unknown float type: \"+b);}}\nfunction ac(b,a,c){switch(a){case 0:return c?function(d){return Aa[d]}:function(d){return H[d]};case 1:return c?function(d){return Ba[d>>1]}:function(d){return Ca[d>>1]};case 2:return c?function(d){return Da[d>>2]}:function(d){return M[d>>2]};default:throw new TypeError(\"Unknown integer type: \"+b);}}var bc=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0;\nfunction cc(b,a){var c=b>>1;for(var d=c+a/2;!(c>=d)&&Ca[c];)++c;c<<=1;if(32<c-b&&bc)return bc.decode(H.subarray(b,c));c=\"\";for(d=0;!(d>=a/2);++d){var e=Ba[b+2*d>>1];if(0==e)break;c+=String.fromCharCode(e)}return c}function dc(b,a,c){void 0===c&&(c=2147483647);if(2>c)return 0;c-=2;var d=a;c=c<2*b.length?c/2:b.length;for(var e=0;e<c;++e)Ba[a>>1]=b.charCodeAt(e),a+=2;Ba[a>>1]=0;return a-d}function ec(b){return 2*b.length}\nfunction fc(b,a){for(var c=0,d=\"\";!(c>=a/4);){var e=Da[b+4*c>>2];if(0==e)break;++c;65536<=e?(e-=65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023)):d+=String.fromCharCode(e)}return d}function gc(b,a,c){void 0===c&&(c=2147483647);if(4>c)return 0;var d=a;c=d+c-4;for(var e=0;e<b.length;++e){var f=b.charCodeAt(e);if(55296<=f&&57343>=f){var h=b.charCodeAt(++e);f=65536+((f&1023)<<10)|h&1023}Da[a>>2]=f;a+=4;if(a+4>c)break}Da[a>>2]=0;return a-d}\nfunction hc(b){for(var a=0,c=0;c<b.length;++c){var d=b.charCodeAt(c);55296<=d&&57343>=d&&++c;a+=4}return a}var ic={};function jc(b){var a=ic[b];return void 0===a?T(b):a}var kc=[];function lc(b){var a=kc.length;kc.push(b);return a}function mc(b,a){for(var c=Array(b),d=0;d<b;++d)c[d]=kb(M[a+4*d>>2],\"parameter \"+d);return c}var nc=[],oc=[null,[],[]];Za=m.BindingError=Ya(\"BindingError\");m.count_emval_handles=function(){for(var b=0,a=5;a<O.length;++a)void 0!==O[a]&&++b;return b};\nm.get_first_emval=function(){for(var b=5;b<O.length;++b)if(void 0!==O[b])return O[b];return null};ab=m.PureVirtualError=Ya(\"PureVirtualError\");for(var pc=Array(256),qc=0;256>qc;++qc)pc[qc]=String.fromCharCode(qc);bb=pc;m.getInheritedInstanceCount=function(){return Object.keys(V).length};m.getLiveInheritedInstances=function(){var b=[],a;for(a in V)V.hasOwnProperty(a)&&b.push(V[a]);return b};m.flushPendingDeletes=db;m.setDelayFunction=function(b){eb=b;cb.length&&eb&&eb(db)};vb=m.InternalError=Ya(\"InternalError\");\nGb.prototype.isAliasOf=function(b){if(!(this instanceof Gb&&b instanceof Gb))return!1;var a=this.U.X.V,c=this.U.W,d=b.U.X.V;for(b=b.U.W;a.$;)c=a.na(c),a=a.$;for(;d.$;)b=d.na(b),d=d.$;return a===d&&c===b};Gb.prototype.clone=function(){this.U.W||Fb(this);if(this.U.ma)return this.U.count.value+=1,this;var b=yb,a=Object,c=a.create,d=Object.getPrototypeOf(this),e=this.U;b=b(c.call(a,d,{U:{value:{count:e.count,ka:e.ka,ma:e.ma,W:e.W,X:e.X,aa:e.aa,da:e.da}}}));b.U.count.value+=1;b.U.ka=!1;return b};\nGb.prototype[\"delete\"]=function(){this.U.W||Fb(this);this.U.ka&&!this.U.ma&&Q(\"Object already scheduled for deletion\");lb(this);nb(this.U);this.U.ma||(this.U.aa=void 0,this.U.W=void 0)};Gb.prototype.isDeleted=function(){return!this.U.W};Gb.prototype.deleteLater=function(){this.U.W||Fb(this);this.U.ka&&!this.U.ma&&Q(\"Object already scheduled for deletion\");cb.push(this);1===cb.length&&eb&&eb(db);this.U.ka=!0;return this};Pb.prototype.hb=function(b){this.Na&&(b=this.Na(b));return b};\nPb.prototype.Ga=function(b){this.ha&&this.ha(b)};Pb.prototype.argPackAdvance=8;Pb.prototype.readValueFromPointer=Bb;Pb.prototype.deleteObject=function(b){if(null!==b)b[\"delete\"]()};\nPb.prototype.fromWireType=function(b){function a(){return this.qa?xb(this.V.ea,{X:this.sb,W:c,da:this,aa:b}):xb(this.V.ea,{X:this,W:b})}var c=this.hb(b);if(!c)return this.Ga(b),null;var d=ub(this.V,c);if(void 0!==d){if(0===d.U.count.value)return d.U.W=c,d.U.aa=b,d.clone();d=d.clone();this.Ga(b);return d}d=this.V.gb(c);d=tb[d];if(!d)return a.call(this);d=this.pa?d.Xa:d.pointerType;var e=ob(c,this.V,d.V);return null===e?a.call(this):this.qa?xb(d.V.ea,{X:d,W:e,da:this,aa:b}):xb(d.V.ea,{X:d,W:e})};\nSb=m.UnboundTypeError=Ya(\"UnboundTypeError\");\nvar sc={G:function(b,a,c){b=T(b);a=kb(a,\"wrapper\");c=$a(c);var d=[].slice,e=a.V,f=e.ea,h=e.$.ea,g=e.$.constructor;b=Va(b,function(){e.$.Ma.forEach(function(k){if(this[k]===h[k])throw new ab(\"Pure virtual function \"+k+\" must be implemented in JavaScript\");}.bind(this));Object.defineProperty(this,\"__parent\",{value:f});this.__construct.apply(this,d.call(arguments))});f.__construct=function(){this===f&&Q(\"Pass correct 'this' to __construct\");var k=g.implement.apply(void 0,[this].concat(d.call(arguments)));\nlb(k);var p=k.U;k.notifyOnDestruction();p.ma=!0;Object.defineProperties(this,{U:{value:p}});yb(this);k=p.W;k=fb(e,k);V.hasOwnProperty(k)?Q(\"Tried to register registered instance: \"+k):V[k]=this};f.__destruct=function(){this===f&&Q(\"Pass correct 'this' to __destruct\");lb(this);var k=this.U.W;k=fb(e,k);V.hasOwnProperty(k)?delete V[k]:Q(\"Tried to unregister unregistered instance: \"+k)};b.prototype=Object.create(f);for(var l in c)b.prototype[l]=c[l];return S(b)},J:function(b){var a=zb[b];delete zb[b];\nvar c=a.xa,d=a.ha,e=a.Ja,f=e.map(h=>h.kb).concat(e.map(h=>h.vb));W([b],f,h=>{var g={};e.forEach((l,k)=>{var p=h[k],r=l.ib,t=l.jb,v=h[k+e.length],q=l.ub,F=l.wb;g[l.eb]={read:I=>p.fromWireType(r(t,I)),write:(I,w)=>{var z=[];q(F,I,v.toWireType(z,w));Ab(z)}}});return[{name:a.name,fromWireType:function(l){var k={},p;for(p in g)k[p]=g[p].read(l);d(l);return k},toWireType:function(l,k){for(var p in g)if(!(p in k))throw new TypeError('Missing field:  \"'+p+'\"');var r=c();for(p in g)g[p].write(r,k[p]);null!==\nl&&l.push(d,r);return r},argPackAdvance:8,readValueFromPointer:Bb,ca:d}]})},z:function(){},E:function(b,a,c,d,e){var f=Eb(c);a=T(a);Y(b,{name:a,fromWireType:function(h){return!!h},toWireType:function(h,g){return g?d:e},argPackAdvance:8,readValueFromPointer:function(h){if(1===c)var g=Aa;else if(2===c)g=Ba;else if(4===c)g=Da;else throw new TypeError(\"Unknown boolean type size: \"+a);return this.fromWireType(g[h>>f])},ca:null})},e:function(b,a,c,d,e,f,h,g,l,k,p,r,t){p=T(p);f=Z(e,f);g&&(g=Z(h,g));k&&(k=\nZ(l,k));t=Z(r,t);var v=Ua(p);Ib(v,function(){Tb(\"Cannot construct \"+p+\" due to unbound types\",[d])});W([b,a,c],d?[d]:[],function(q){q=q[0];if(d){var F=q.V;var I=F.ea}else I=Gb.prototype;q=Va(v,function(){if(Object.getPrototypeOf(this)!==w)throw new Za(\"Use 'new' to construct \"+p);if(void 0===z.ia)throw new Za(p+\" has no accessible constructor\");var P=z.ia[arguments.length];if(void 0===P)throw new Za(\"Tried to invoke ctor of \"+p+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+\nObject.keys(z.ia).toString()+\") parameters instead!\");return P.apply(this,arguments)});var w=Object.create(I,{constructor:{value:q}});q.prototype=w;var z=new Jb(p,q,w,t,F,f,g,k);F=new Pb(p,z,!0,!1);I=new Pb(p+\"*\",z,!1,!1);var J=new Pb(p+\" const*\",z,!1,!0);tb[b]={pointerType:I,Xa:J};Qb(v,q);return[F,I,J]})},k:function(b,a,c,d,e,f,h){var g=Vb(c,d);a=T(a);f=Z(e,f);W([],[b],function(l){function k(){Tb(\"Cannot call \"+p+\" due to unbound types\",g)}l=l[0];var p=l.name+\".\"+a;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);\nvar r=l.V.constructor;void 0===r[a]?(k.ja=c-1,r[a]=k):(Hb(r,a,p),r[a].Y[c-1]=k);W([],g,function(t){t=Ub(p,[t[0],null].concat(t.slice(1)),null,f,h);void 0===r[a].Y?(t.ja=c-1,r[a]=t):r[a].Y[c-1]=t;return[]});return[]})},s:function(b,a,c,d,e,f,h,g){a=T(a);f=Z(e,f);W([],[b],function(l){l=l[0];var k=l.name+\".\"+a,p={get:function(){Tb(\"Cannot access \"+k+\" due to unbound types\",[c])},enumerable:!0,configurable:!0};p.set=g?()=>{Tb(\"Cannot access \"+k+\" due to unbound types\",[c])}:()=>{Q(k+\" is a read-only property\")};\nObject.defineProperty(l.V.constructor,a,p);W([],[c],function(r){r=r[0];var t={get:function(){return r.fromWireType(f(d))},enumerable:!0};g&&(g=Z(h,g),t.set=v=>{var q=[];g(d,r.toWireType(q,v));Ab(q)});Object.defineProperty(l.V.constructor,a,t);return[]});return[]})},o:function(b,a,c,d,e,f){0<a||ua();var h=Vb(a,c);e=Z(d,e);W([],[b],function(g){g=g[0];var l=\"constructor \"+g.name;void 0===g.V.ia&&(g.V.ia=[]);if(void 0!==g.V.ia[a-1])throw new Za(\"Cannot register multiple constructors with identical number of parameters (\"+\n(a-1)+\") for class '\"+g.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");g.V.ia[a-1]=()=>{Tb(\"Cannot construct \"+g.name+\" due to unbound types\",h)};W([],h,function(k){k.splice(1,0,null);g.V.ia[a-1]=Ub(l,k,null,e,f);return[]});return[]})},a:function(b,a,c,d,e,f,h,g){var l=Vb(c,d);a=T(a);f=Z(e,f);W([],[b],function(k){function p(){Tb(\"Cannot call \"+r+\" due to unbound types\",l)}k=k[0];var r=k.name+\".\"+a;a.startsWith(\"@@\")&&(a=Symbol[a.substring(2)]);\ng&&k.V.Ma.push(a);var t=k.V.ea,v=t[a];void 0===v||void 0===v.Y&&v.className!==k.name&&v.ja===c-2?(p.ja=c-2,p.className=k.name,t[a]=p):(Hb(t,a,r),t[a].Y[c-2]=p);W([],l,function(q){q=Ub(r,q,k,f,h);void 0===t[a].Y?(q.ja=c-2,t[a]=q):t[a].Y[c-2]=q;return[]});return[]})},d:function(b,a,c,d,e,f,h,g,l,k){a=T(a);e=Z(d,e);W([],[b],function(p){p=p[0];var r=p.name+\".\"+a,t={get:function(){Tb(\"Cannot access \"+r+\" due to unbound types\",[c,h])},enumerable:!0,configurable:!0};t.set=l?()=>{Tb(\"Cannot access \"+r+\" due to unbound types\",\n[c,h])}:()=>{Q(r+\" is a read-only property\")};Object.defineProperty(p.V.ea,a,t);W([],l?[c,h]:[c],function(v){var q=v[0],F={get:function(){var w=Wb(this,p,r+\" getter\");return q.fromWireType(e(f,w))},enumerable:!0};if(l){l=Z(g,l);var I=v[1];F.set=function(w){var z=Wb(this,p,r+\" setter\"),J=[];l(k,z,I.toWireType(J,w));Ab(J)}}Object.defineProperty(p.V.ea,a,F);return[]});return[]})},D:function(b,a){a=T(a);Y(b,{name:a,fromWireType:function(c){var d=$a(c);Xb(c);return d},toWireType:function(c,d){return S(d)},\nargPackAdvance:8,readValueFromPointer:Bb,ca:null})},l:function(b,a,c,d){function e(){}c=Eb(c);a=T(a);e.values={};Y(b,{name:a,constructor:e,fromWireType:function(f){return this.constructor.values[f]},toWireType:function(f,h){return h.value},argPackAdvance:8,readValueFromPointer:Zb(a,c,d),ca:null});Ib(a,e)},c:function(b,a,c){var d=kb(b,\"enum\");a=T(a);b=d.constructor;d=Object.create(d.constructor.prototype,{value:{value:c},constructor:{value:Va(d.name+\"_\"+a,function(){})}});b.values[c]=d;b[a]=d},u:function(b,\na,c){c=Eb(c);a=T(a);Y(b,{name:a,fromWireType:function(d){return d},toWireType:function(d,e){return e},argPackAdvance:8,readValueFromPointer:$b(a,c),ca:null})},q:function(b,a,c,d,e,f){var h=Vb(a,c);b=T(b);e=Z(d,e);Ib(b,function(){Tb(\"Cannot call \"+b+\" due to unbound types\",h)},a-1);W([],h,function(g){Qb(b,Ub(b,[g[0],null].concat(g.slice(1)),null,e,f),a-1);return[]})},j:function(b,a,c,d,e){a=T(a);-1===e&&(e=4294967295);e=Eb(c);var f=g=>g;if(0===d){var h=32-8*c;f=g=>g<<h>>>h}c=a.includes(\"unsigned\")?\nfunction(g,l){return l>>>0}:function(g,l){return l};Y(b,{name:a,fromWireType:f,toWireType:c,argPackAdvance:8,readValueFromPointer:ac(a,e,0!==d),ca:null})},g:function(b,a,c){function d(f){f>>=2;var h=M;return new e(za,h[f+1],h[f])}var e=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][a];c=T(c);Y(b,{name:c,fromWireType:d,argPackAdvance:8,readValueFromPointer:d},{lb:!0})},v:function(b,a){a=T(a);var c=\"std::string\"===a;Y(b,{name:a,fromWireType:function(d){var e=\nM[d>>2],f=d+4;if(c)for(var h=f,g=0;g<=e;++g){var l=f+g;if(g==e||0==H[l]){h=h?ya(H,h,l-h):\"\";if(void 0===k)var k=h;else k+=String.fromCharCode(0),k+=h;h=l+1}}else{k=Array(e);for(g=0;g<e;++g)k[g]=String.fromCharCode(H[f+g]);k=k.join(\"\")}jb(d);return k},toWireType:function(d,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var f,h=\"string\"==typeof e;h||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||Q(\"Cannot pass non-string to std::string\");if(c&&h){var g=0;for(f=\n0;f<e.length;++f){var l=e.charCodeAt(f);127>=l?g++:2047>=l?g+=2:55296<=l&&57343>=l?(g+=4,++f):g+=3}f=g}else f=e.length;g=rc(4+f+1);l=g+4;M[g>>2]=f;if(c&&h){if(h=l,l=f+1,f=H,0<l){l=h+l-1;for(var k=0;k<e.length;++k){var p=e.charCodeAt(k);if(55296<=p&&57343>=p){var r=e.charCodeAt(++k);p=65536+((p&1023)<<10)|r&1023}if(127>=p){if(h>=l)break;f[h++]=p}else{if(2047>=p){if(h+1>=l)break;f[h++]=192|p>>6}else{if(65535>=p){if(h+2>=l)break;f[h++]=224|p>>12}else{if(h+3>=l)break;f[h++]=240|p>>18;f[h++]=128|p>>12&\n63}f[h++]=128|p>>6&63}f[h++]=128|p&63}}f[h]=0}}else if(h)for(h=0;h<f;++h)k=e.charCodeAt(h),255<k&&(jb(l),Q(\"String has UTF-16 code units that do not fit in 8 bits\")),H[l+h]=k;else for(h=0;h<f;++h)H[l+h]=e[h];null!==d&&d.push(jb,g);return g},argPackAdvance:8,readValueFromPointer:Bb,ca:function(d){jb(d)}})},t:function(b,a,c){c=T(c);if(2===a){var d=cc;var e=dc;var f=ec;var h=()=>Ca;var g=1}else 4===a&&(d=fc,e=gc,f=hc,h=()=>M,g=2);Y(b,{name:c,fromWireType:function(l){for(var k=M[l>>2],p=h(),r,t=l+4,v=\n0;v<=k;++v){var q=l+4+v*a;if(v==k||0==p[q>>g])t=d(t,q-t),void 0===r?r=t:(r+=String.fromCharCode(0),r+=t),t=q+a}jb(l);return r},toWireType:function(l,k){\"string\"!=typeof k&&Q(\"Cannot pass non-string to C++ string type \"+c);var p=f(k),r=rc(4+p+a);M[r>>2]=p>>g;e(k,r+4,p+a);null!==l&&l.push(jb,r);return r},argPackAdvance:8,readValueFromPointer:Bb,ca:function(l){jb(l)}})},L:function(b,a,c,d,e,f){zb[b]={name:T(a),xa:Z(c,d),ha:Z(e,f),Ja:[]}},K:function(b,a,c,d,e,f,h,g,l,k){zb[b].Ja.push({eb:T(a),kb:c,ib:Z(d,\ne),jb:f,vb:h,ub:Z(g,l),wb:k})},F:function(b,a){a=T(a);Y(b,{nb:!0,name:a,argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},r:function(b,a,c){b=$a(b);a=kb(a,\"emval::as\");var d=[],e=S(d);M[c>>2]=e;return a.toWireType(d,b)},w:function(b,a,c,d,e){b=kc[b];a=$a(a);c=jc(c);var f=[];M[d>>2]=S(f);return b(a,c,f,e)},i:function(b,a,c,d){b=kc[b];a=$a(a);c=jc(c);b(a,c,null,d)},f:Xb,h:function(b,a){var c=mc(b,a),d=c[0];a=d.name+\"_$\"+c.slice(1).map(function(h){return h.name}).join(\"_\")+\"$\";var e=\nnc[a];if(void 0!==e)return e;var f=Array(b-1);e=lc((h,g,l,k)=>{for(var p=0,r=0;r<b-1;++r)f[r]=c[r+1].readValueFromPointer(k+p),p+=c[r+1].argPackAdvance;h=h[g].apply(h,f);for(r=0;r<b-1;++r)c[r+1].Za&&c[r+1].Za(f[r]);if(!d.nb)return d.toWireType(l,h)});return nc[a]=e},p:function(b){b=jc(b);return S(m[b])},I:function(b,a){b=$a(b);a=$a(a);return S(b[a])},m:function(b){4<b&&(O[b].ya+=1)},H:function(b){return S(jc(b))},n:function(b){var a=$a(b);Ab(a);Xb(b)},x:function(b,a){b=kb(b,\"_emval_take_value\");b=\nb.readValueFromPointer(a);return S(b)},b:function(){ua(\"\")},A:function(b){var a=H.length;b>>>=0;if(2147483648<b)return!1;for(var c=1;4>=c;c*=2){var d=a*(1+.2/c);d=Math.min(d,b+100663296);var e=Math;d=Math.max(b,d);e=e.min.call(e,2147483648,d+(65536-d%65536)%65536);a:{try{va.grow(e-za.byteLength+65535>>>16);Ga();var f=1;break a}catch(h){}f=void 0}if(f)return!0}return!1},C:function(){return 52},y:function(){return 70},B:function(b,a,c,d){for(var e=0,f=0;f<c;f++){var h=M[a>>2],g=M[a+4>>2];a+=8;for(var l=\n0;l<g;l++){var k=H[h+l],p=oc[b];0===k||10===k?((1===b?pa:qa)(ya(p,0)),p.length=0):p.push(k)}e+=g}M[d>>2]=e;return 0}};\n(function(){function b(e){m.asm=e.exports;va=m.asm.M;Ga();Ha=m.asm.S;Ja.unshift(m.asm.N);Ma--;m.monitorRunDependencies&&m.monitorRunDependencies(Ma);0==Ma&&(null!==Na&&(clearInterval(Na),Na=null),Oa&&(e=Oa,Oa=null,e()))}function a(e){b(e.instance)}function c(e){return Sa().then(function(f){return WebAssembly.instantiate(f,d)}).then(function(f){return f}).then(e,function(f){qa(\"failed to asynchronously prepare wasm: \"+f);ua(f)})}var d={a:sc};Ma++;m.monitorRunDependencies&&m.monitorRunDependencies(Ma);\nif(m.instantiateWasm)try{return m.instantiateWasm(d,b)}catch(e){qa(\"Module.instantiateWasm callback failed with error: \"+e),ba(e)}(function(){return ra||\"function\"!=typeof WebAssembly.instantiateStreaming||Pa()||N.startsWith(\"file://\")||\"function\"!=typeof fetch?c(a):fetch(N,{credentials:\"same-origin\"}).then(function(e){return WebAssembly.instantiateStreaming(e,d).then(a,function(f){qa(\"wasm streaming compile failed: \"+f);qa(\"falling back to ArrayBuffer instantiation\");return c(a)})})})().catch(ba);\nreturn{}})();m.___wasm_call_ctors=function(){return(m.___wasm_call_ctors=m.asm.N).apply(null,arguments)};var jb=m._free=function(){return(jb=m._free=m.asm.O).apply(null,arguments)},rc=m._malloc=function(){return(rc=m._malloc=m.asm.P).apply(null,arguments)},ib=m.___getTypeName=function(){return(ib=m.___getTypeName=m.asm.Q).apply(null,arguments)};m.__embind_initialize_bindings=function(){return(m.__embind_initialize_bindings=m.asm.R).apply(null,arguments)};\nm.dynCall_jiji=function(){return(m.dynCall_jiji=m.asm.T).apply(null,arguments)};var tc;Oa=function uc(){tc||vc();tc||(Oa=uc)};\nfunction vc(){function b(){if(!tc&&(tc=!0,m.calledRun=!0,!wa)){Ta(Ja);aa(m);if(m.onRuntimeInitialized)m.onRuntimeInitialized();if(m.postRun)for(\"function\"==typeof m.postRun&&(m.postRun=[m.postRun]);m.postRun.length;){var a=m.postRun.shift();Ka.unshift(a)}Ta(Ka)}}if(!(0<Ma)){if(m.preRun)for(\"function\"==typeof m.preRun&&(m.preRun=[m.preRun]);m.preRun.length;)La();Ta(Ia);0<Ma||(m.setStatus?(m.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){m.setStatus(\"\")},1);b()},1)):b())}}\nif(m.preInit)for(\"function\"==typeof m.preInit&&(m.preInit=[m.preInit]);0<m.preInit.length;)m.preInit.pop()();vc();\n\n\n  return Rive.ready\n}\n);\n})();\nexport default Rive;","export { registerTouchInteractions } from \"./registerTouchInteractions\";\n","import * as rc from \"../rive_advanced.mjs\";\n\nexport interface TouchInteractionsParams {\n  canvas: HTMLCanvasElement | OffscreenCanvas;\n  artboard: rc.Artboard;\n  stateMachines: rc.StateMachineInstance[];\n  renderer: rc.Renderer;\n  rive: rc.RiveCanvas;\n  fit: rc.Fit;\n  alignment: rc.Alignment;\n}\n\ninterface ClientCoordinates {\n  clientX: number;\n  clientY: number;\n}\n\n/**\n * Returns the clientX and clientY properties from touch or mouse events. Also\n * calls preventDefault() on the event if it is a touchstart or touchmove to prevent\n * scrolling the page on mobile devices\n * @param event - Either a TouchEvent or a MouseEvent\n * @returns - Coordinates of the clientX and clientY properties from the touch/mouse event\n */\nconst getClientCoordinates = (\n  event: MouseEvent | TouchEvent\n): ClientCoordinates => {\n  if (\n    [\"touchstart\", \"touchmove\"].indexOf(event.type) > -1 &&\n    (event as TouchEvent).touches?.length\n  ) {\n    event.preventDefault();\n    return {\n      clientX: (event as TouchEvent).touches[0].clientX,\n      clientY: (event as TouchEvent).touches[0].clientY,\n    };\n  } else if (\n    event.type === \"touchend\" &&\n    (event as TouchEvent).changedTouches?.length\n  ) {\n    return {\n      clientX: (event as TouchEvent).changedTouches[0].clientX,\n      clientY: (event as TouchEvent).changedTouches[0].clientY,\n    };\n  } else {\n    return {\n      clientX: (event as MouseEvent).clientX,\n      clientY: (event as MouseEvent).clientY,\n    };\n  }\n};\n\n/**\n * Registers mouse move/up/down callback handlers on the canvas to send meaningful coordinates to\n * the state machine pointer move/up/down functions based on cursor interaction\n */\nexport const registerTouchInteractions = ({\n  canvas,\n  artboard,\n  stateMachines = [],\n  renderer,\n  rive,\n  fit,\n  alignment,\n}: TouchInteractionsParams) => {\n  if (\n    !canvas ||\n    !stateMachines.length ||\n    !renderer ||\n    !rive ||\n    !artboard ||\n    typeof window === \"undefined\"\n  ) {\n    return null;\n  }\n\n  const processEventCallback = (event: MouseEvent | TouchEvent) => {\n    const boundingRect = (\n      event.currentTarget as HTMLCanvasElement\n    ).getBoundingClientRect();\n\n    const { clientX, clientY } = getClientCoordinates(event);\n    if (!clientX && !clientY) {\n      return;\n    }\n    const canvasX = clientX - boundingRect.left;\n    const canvasY = clientY - boundingRect.top;\n    const forwardMatrix = rive.computeAlignment(\n      fit,\n      alignment,\n      {\n        minX: 0,\n        minY: 0,\n        maxX: boundingRect.width,\n        maxY: boundingRect.height,\n      },\n      artboard.bounds\n    );\n    const invertedMatrix = new rive.Mat2D();\n    forwardMatrix.invert(invertedMatrix);\n    const canvasCoordinatesVector = new rive.Vec2D(canvasX, canvasY);\n    const transformedVector = rive.mapXY(\n      invertedMatrix,\n      canvasCoordinatesVector\n    );\n    const transformedX = transformedVector.x();\n    const transformedY = transformedVector.y();\n\n    transformedVector.delete();\n    invertedMatrix.delete();\n    canvasCoordinatesVector.delete();\n    forwardMatrix.delete();\n\n    switch (event.type) {\n      // Pointer moving/hovering on the canvas\n      case \"touchmove\":\n      case \"mouseover\":\n      case \"mouseout\":\n      case \"mousemove\": {\n        for (const stateMachine of stateMachines) {\n          stateMachine.pointerMove(transformedX, transformedY);\n        }\n        break;\n      }\n      // Pointer click initiated but not released yet on the canvas\n      case \"touchstart\":\n      case \"mousedown\": {\n        for (const stateMachine of stateMachines) {\n          stateMachine.pointerDown(transformedX, transformedY);\n        }\n        break;\n      }\n      // Pointer click released on the canvas\n      case \"touchend\":\n      case \"mouseup\": {\n        for (const stateMachine of stateMachines) {\n          stateMachine.pointerUp(transformedX, transformedY);\n        }\n        break;\n      }\n      default:\n    }\n  };\n  const callback = processEventCallback.bind(this);\n  canvas.addEventListener(\"mouseover\", callback);\n  canvas.addEventListener(\"mouseout\", callback);\n  canvas.addEventListener(\"mousemove\", callback);\n  canvas.addEventListener(\"mousedown\", callback);\n  canvas.addEventListener(\"mouseup\", callback);\n  canvas.addEventListener(\"touchmove\", callback);\n  canvas.addEventListener(\"touchstart\", callback);\n  canvas.addEventListener(\"touchend\", callback);\n  return () => {\n    canvas.removeEventListener(\"mouseover\", callback);\n    canvas.removeEventListener(\"mouseout\", callback);\n    canvas.removeEventListener(\"mousemove\", callback);\n    canvas.removeEventListener(\"mousedown\", callback);\n    canvas.removeEventListener(\"mouseup\", callback);\n    canvas.removeEventListener(\"touchmove\", callback);\n    canvas.removeEventListener(\"touchstart\", callback);\n    canvas.removeEventListener(\"touchend\", callback);\n  };\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import * as rc from \"./rive_advanced.mjs\";\nimport * as packageData from \"package.json\";\nimport { registerTouchInteractions } from \"./utils\";\n\n/**\n * Generic type for a parameterless void callback\n */\nexport type VoidCallback = () => void;\n\n/**\n * Type for artboard bounds\n */\nexport type Bounds = rc.AABB;\n\n// #region layout\n\n// Fit options for the canvas\nexport enum Fit {\n  Cover = \"cover\",\n  Contain = \"contain\",\n  Fill = \"fill\",\n  FitWidth = \"fitWidth\",\n  FitHeight = \"fitHeight\",\n  None = \"none\",\n  ScaleDown = \"scaleDown\",\n}\n\n// Alignment options for the canvas\nexport enum Alignment {\n  Center = \"center\",\n  TopLeft = \"topLeft\",\n  TopCenter = \"topCenter\",\n  TopRight = \"topRight\",\n  CenterLeft = \"centerLeft\",\n  CenterRight = \"centerRight\",\n  BottomLeft = \"bottomLeft\",\n  BottomCenter = \"bottomCenter\",\n  BottomRight = \"bottomRight\",\n}\n\n// Interface for the Layout static method contructor\nexport interface LayoutParameters {\n  fit?: Fit;\n  alignment?: Alignment;\n  minX?: number;\n  minY?: number;\n  maxX?: number;\n  maxY?: number;\n}\n\n// Alignment options for Rive animations in a HTML canvas\nexport class Layout {\n  // Runtime fit and alignment are accessed every frame, so we cache their\n  // values to save cycles\n  private cachedRuntimeFit: rc.Fit;\n  private cachedRuntimeAlignment: rc.Alignment;\n\n  public readonly fit: Fit;\n  public readonly alignment: Alignment;\n  public readonly minX: number;\n  public readonly minY: number;\n  public readonly maxX: number;\n  public readonly maxY: number;\n\n  constructor(params?: LayoutParameters) {\n    this.fit = params?.fit ?? Fit.Contain;\n    this.alignment = params?.alignment ?? Alignment.Center;\n    this.minX = params?.minX ?? 0;\n    this.minY = params?.minY ?? 0;\n    this.maxX = params?.maxX ?? 0;\n    this.maxY = params?.maxY ?? 0;\n  }\n\n  // Alternative constructor to build a Layout from an interface/object\n  static new({\n    fit,\n    alignment,\n    minX,\n    minY,\n    maxX,\n    maxY,\n  }: LayoutParameters): Layout {\n    console.warn(\n      \"This function is deprecated: please use `new Layout({})` instead\"\n    );\n    return new Layout({ fit, alignment, minX, minY, maxX, maxY });\n  }\n\n  /**\n   * Makes a copy of the layout, replacing any specified parameters\n   */\n  public copyWith({\n    fit,\n    alignment,\n    minX,\n    minY,\n    maxX,\n    maxY,\n  }: LayoutParameters): Layout {\n    return new Layout({\n      fit: fit ?? this.fit,\n      alignment: alignment ?? this.alignment,\n      minX: minX ?? this.minX,\n      minY: minY ?? this.minY,\n      maxX: maxX ?? this.maxX,\n      maxY: maxY ?? this.maxY,\n    });\n  }\n\n  // Returns fit for the Wasm runtime format\n  public runtimeFit(rive: rc.RiveCanvas): rc.Fit {\n    if (this.cachedRuntimeFit) return this.cachedRuntimeFit;\n\n    let fit;\n    if (this.fit === Fit.Cover) fit = rive.Fit.cover;\n    else if (this.fit === Fit.Contain) fit = rive.Fit.contain;\n    else if (this.fit === Fit.Fill) fit = rive.Fit.fill;\n    else if (this.fit === Fit.FitWidth) fit = rive.Fit.fitWidth;\n    else if (this.fit === Fit.FitHeight) fit = rive.Fit.fitHeight;\n    else if (this.fit === Fit.ScaleDown) fit = rive.Fit.scaleDown;\n    else fit = rive.Fit.none;\n\n    this.cachedRuntimeFit = fit;\n    return fit;\n  }\n\n  // Returns alignment for the Wasm runtime format\n  public runtimeAlignment(rive: rc.RiveCanvas): rc.Alignment {\n    if (this.cachedRuntimeAlignment) return this.cachedRuntimeAlignment;\n\n    let alignment;\n    if (this.alignment === Alignment.TopLeft)\n      alignment = rive.Alignment.topLeft;\n    else if (this.alignment === Alignment.TopCenter)\n      alignment = rive.Alignment.topCenter;\n    else if (this.alignment === Alignment.TopRight)\n      alignment = rive.Alignment.topRight;\n    else if (this.alignment === Alignment.CenterLeft)\n      alignment = rive.Alignment.centerLeft;\n    else if (this.alignment === Alignment.CenterRight)\n      alignment = rive.Alignment.centerRight;\n    else if (this.alignment === Alignment.BottomLeft)\n      alignment = rive.Alignment.bottomLeft;\n    else if (this.alignment === Alignment.BottomCenter)\n      alignment = rive.Alignment.bottomCenter;\n    else if (this.alignment === Alignment.BottomRight)\n      alignment = rive.Alignment.bottomRight;\n    else alignment = rive.Alignment.center;\n\n    this.cachedRuntimeAlignment = alignment;\n    return alignment;\n  }\n}\n\n// #endregion\n\n// #region runtime\n\n// Callback type when looking for a runtime instance\nexport type RuntimeCallback = (rive: rc.RiveCanvas) => void;\n\n// Runtime singleton; use getInstance to provide a callback that returns the\n// Rive runtime\nexport class RuntimeLoader {\n  // Singleton helpers\n  private static runtime: rc.RiveCanvas;\n  // Flag to indicate that loading has started/completed\n  private static isLoading = false;\n  // List of callbacks for the runtime that come in while loading\n  private static callBackQueue: RuntimeCallback[] = [];\n  // Instance of the Rive runtime\n  private static rive: rc.RiveCanvas;\n  // Path to the Wasm file; default path works for testing only;\n  // if embedded wasm is used then this is never used.\n  private static wasmURL = `https://unpkg.com/${packageData.name}@${packageData.version}/rive.wasm`;\n\n  // Class is never instantiated\n  private constructor() {}\n\n  // Loads the runtime\n  private static loadRuntime(): void {\n    rc.default({\n      // Loads Wasm bundle\n      locateFile: () => RuntimeLoader.wasmURL,\n    }).then((rive: rc.RiveCanvas) => {\n      RuntimeLoader.runtime = rive;\n      // Fire all the callbacks\n      while (RuntimeLoader.callBackQueue.length > 0) {\n        RuntimeLoader.callBackQueue.shift()?.(RuntimeLoader.runtime);\n      }\n    });\n  }\n\n  // Provides a runtime instance via a callback\n  public static getInstance(callback: RuntimeCallback): void {\n    // If it's not loading, start loading runtime\n    if (!RuntimeLoader.isLoading) {\n      RuntimeLoader.isLoading = true;\n      RuntimeLoader.loadRuntime();\n    }\n    if (!RuntimeLoader.runtime) {\n      RuntimeLoader.callBackQueue.push(callback);\n    } else {\n      callback(RuntimeLoader.runtime);\n    }\n  }\n\n  // Provides a runtime instance via a promise\n  public static awaitInstance(): Promise<rc.RiveCanvas> {\n    return new Promise<rc.RiveCanvas>((resolve) =>\n      RuntimeLoader.getInstance((rive: rc.RiveCanvas): void => resolve(rive))\n    );\n  }\n\n  // Manually sets the wasm url\n  public static setWasmUrl(url: string): void {\n    RuntimeLoader.wasmURL = url;\n  }\n}\n\n// #endregion\n\n// #region animations\n\n// Wraps animations and instances from the runtime and keeps track of playback\n// state\nclass Animation {\n  public loopCount = 0;\n  public readonly instance: rc.LinearAnimationInstance;\n\n  // Time to which the animation should move to on the next render\n  public scrubTo: number | null = null;\n\n  /**\n   * Constructs a new animation\n   * @constructor\n   * @param {any} animation: runtime animation object\n   * @param {any} instance: runtime animation instance object\n   */\n  constructor(\n    private animation: rc.LinearAnimation,\n    private artboard: rc.Artboard,\n    runtime: rc.RiveCanvas,\n    public playing: boolean\n  ) {\n    this.instance = new runtime.LinearAnimationInstance(animation, artboard);\n  }\n\n  // Returns the animation's name\n  public get name(): string {\n    return this.animation.name;\n  }\n\n  // Returns the animation's current time\n  public get time(): number {\n    return this.instance.time;\n  }\n\n  // Sets the animation's current time\n  public set time(value: number) {\n    this.instance.time = value;\n  }\n\n  // Returns the animation's loop type\n  public get loopValue(): number {\n    return this.animation.loopValue;\n  }\n\n  /**\n   * Advances the animation by the give time. If the animation needs scrubbing,\n   * time is ignored and the stored scrub value is used.\n   * @param time the time to advance the animation by if no scrubbing required\n   */\n  public advance(time: number) {\n    if (this.scrubTo === null) {\n      this.instance.advance(time);\n    } else {\n      this.instance.time = 0;\n      this.instance.advance(this.scrubTo);\n      this.scrubTo = null;\n    }\n  }\n\n  /**\n   * Apply interpolated keyframe values to the artboard. This should be called after calling\n   * .advance() on an animation instance so that new values are applied to properties.\n   *\n   * Note: This does not advance the artboard, which updates all objects on the artboard\n   * @param mix - Mix value for the animation from 0 to 1\n   */\n  public apply(mix: number) {\n    this.instance.apply(mix);\n  }\n\n  public get needsScrub(): boolean {\n    return this.scrubTo !== null;\n  }\n\n  /**\n   * Deletes the backing Wasm animation instance; once this is called, this\n   * animation is no more.\n   */\n  public cleanup() {\n    this.instance.delete();\n  }\n}\n\n// #endregion\n\n// #region state machines\n\nexport enum StateMachineInputType {\n  Number = 56,\n  Trigger = 58,\n  Boolean = 59,\n}\n\n/**\n * An input for a state machine\n */\nexport class StateMachineInput {\n  constructor(\n    public readonly type: StateMachineInputType,\n    private runtimeInput: rc.SMIInput\n  ) {}\n\n  /**\n   * Returns the name of the input\n   */\n  public get name(): string {\n    return this.runtimeInput.name;\n  }\n\n  /**\n   * Returns the current value of the input\n   */\n  public get value(): number | boolean {\n    return this.runtimeInput.value;\n  }\n\n  /**\n   * Sets the value of the input\n   */\n  public set value(value: number | boolean) {\n    this.runtimeInput.value = value;\n  }\n\n  /**\n   * Fires a trigger; does nothing on Number or Boolean input types\n   */\n  public fire(): void {\n    if (this.type === StateMachineInputType.Trigger) {\n      this.runtimeInput.fire();\n    }\n  }\n}\n\nclass StateMachine {\n  /**\n   * Caches the inputs from the runtime\n   */\n  public readonly inputs: StateMachineInput[] = [];\n\n  /**\n   * Runtime state machine instance\n   */\n  public readonly instance: rc.StateMachineInstance;\n\n  /**\n   * @constructor\n   * @param stateMachine runtime state machine object\n   * @param instance runtime state machine instance object\n   */\n  constructor(\n    private stateMachine: rc.StateMachine,\n    runtime: rc.RiveCanvas,\n    public playing: boolean,\n    private artboard: rc.Artboard\n  ) {\n    this.instance = new runtime.StateMachineInstance(stateMachine, artboard);\n    this.initInputs(runtime);\n  }\n\n  public get name(): string {\n    return this.stateMachine.name;\n  }\n\n  /**\n   * Returns a list of state names that have changed on this frame\n   */\n  public get statesChanged(): string[] {\n    const names: string[] = [];\n    for (let i = 0; i < this.instance.stateChangedCount(); i++) {\n      names.push(this.instance.stateChangedNameByIndex(i));\n    }\n    return names;\n  }\n\n  /**\n   * Advances the state machine instance by a given time.\n   * @param time - the time to advance the animation by in seconds\n   */\n  public advance(time: number) {\n    this.instance.advance(time);\n  }\n\n  /**\n   * Fetches references to the state machine's inputs and caches them\n   * @param runtime an instance of the runtime; needed for the SMIInput types\n   */\n  private initInputs(runtime: rc.RiveCanvas): void {\n    // Fetch the inputs from the runtime if we don't have them\n    for (let i = 0; i < this.instance.inputCount(); i++) {\n      const input = this.instance.input(i);\n      this.inputs.push(this.mapRuntimeInput(input, runtime));\n    }\n  }\n\n  /**\n   * Maps a runtime input to it's appropriate type\n   * @param input\n   */\n  private mapRuntimeInput(\n    input: rc.SMIInput,\n    runtime: rc.RiveCanvas\n  ): StateMachineInput {\n    if (input.type === runtime.SMIInput.bool) {\n      return new StateMachineInput(\n        StateMachineInputType.Boolean,\n        input.asBool()\n      );\n    } else if (input.type === runtime.SMIInput.number) {\n      return new StateMachineInput(\n        StateMachineInputType.Number,\n        input.asNumber()\n      );\n    } else if (input.type === runtime.SMIInput.trigger) {\n      return new StateMachineInput(\n        StateMachineInputType.Trigger,\n        input.asTrigger()\n      );\n    }\n  }\n\n  /**\n   * Deletes the backing Wasm state machine instance; once this is called, this\n   * state machine is no more.\n   */\n  public cleanup() {\n    this.instance.delete();\n  }\n}\n\n// #endregion\n\n// #region animator\n\n/**\n * Manages animation\n */\nclass Animator {\n  /**\n   * Constructs a new animator\n   * @constructor\n   * @param runtime Rive runtime; needed to instance animations & state machines\n   * @param artboard the artboard that holds all animations and state machines\n   * @param animations optional list of animations\n   * @param stateMachines optional list of state machines\n   */\n  constructor(\n    private runtime: rc.RiveCanvas,\n    private artboard: rc.Artboard,\n    private eventManager: EventManager,\n    public readonly animations: Animation[] = [],\n    public readonly stateMachines: StateMachine[] = []\n  ) {}\n\n  /**\n   * Adds animations and state machines by their names. If names are shared\n   * between animations & state machines, then the first one found will be\n   * created. Best not to use the same names for these in your Rive file.\n   * @param animatable the name(s) of animations and state machines to add\n   * @returns a list of names of the playing animations and state machines\n   */\n  public add(\n    animatables: string | string[],\n    playing: boolean,\n    fireEvent = true\n  ): string[] {\n    animatables = mapToStringArray(animatables);\n    // If animatables is empty, play or pause everything\n    if (animatables.length === 0) {\n      this.animations.forEach((a) => (a.playing = playing));\n      this.stateMachines.forEach((m) => (m.playing = playing));\n    } else {\n      // Play/pause already instanced items, or create new instances\n      const instancedAnimationNames = this.animations.map((a) => a.name);\n      const instancedMachineNames = this.stateMachines.map((m) => m.name);\n      for (let i = 0; i < animatables.length; i++) {\n        const aIndex = instancedAnimationNames.indexOf(animatables[i]);\n        const mIndex = instancedMachineNames.indexOf(animatables[i]);\n        if (aIndex >= 0 || mIndex >= 0) {\n          if (aIndex >= 0) {\n            // Animation is instanced, play/pause it\n            this.animations[aIndex].playing = playing;\n          } else {\n            // State machine is instanced, play/pause it\n            this.stateMachines[mIndex].playing = playing;\n          }\n        } else {\n          // Try to create a new animation instance\n          const anim = this.artboard.animationByName(animatables[i]);\n          if (anim) {\n            const newAnimation = new Animation(\n              anim,\n              this.artboard,\n              this.runtime,\n              playing\n            );\n            // Display the first frame of the specified animation\n            newAnimation.advance(0);\n            newAnimation.apply(1.0);\n            this.animations.push(newAnimation);\n          } else {\n            // Try to create a new state machine instance\n            const sm = this.artboard.stateMachineByName(animatables[i]);\n            if (sm) {\n              const newStateMachine = new StateMachine(\n                sm,\n                this.runtime,\n                playing,\n                this.artboard\n              );\n              this.stateMachines.push(newStateMachine);\n            }\n          }\n        }\n      }\n    }\n    // Fire play/paused events for animations\n    if (fireEvent) {\n      if (playing) {\n        this.eventManager.fire({\n          type: EventType.Play,\n          data: this.playing,\n        });\n      } else {\n        this.eventManager.fire({\n          type: EventType.Pause,\n          data: this.paused,\n        });\n      }\n    }\n\n    return playing ? this.playing : this.paused;\n  }\n\n  /**\n   * Play the named animations/state machines\n   * @param animatables the names of the animations/machines to play; plays all if empty\n   * @returns a list of the playing items\n   */\n  public play(animatables: string | string[]): string[] {\n    return this.add(animatables, true);\n  }\n\n  /**\n   * Pauses named animations and state machines, or everything if nothing is\n   * specified\n   * @param animatables names of the animations and state machines to pause\n   * @returns a list of names of the animations and state machines paused\n   */\n  public pause(animatables: string[]): string[] {\n    return this.add(animatables, false);\n  }\n\n  /**\n   * Set time of named animations\n   * @param animations names of the animations to scrub\n   * @param value time scrub value, a floating point number to which the playhead is jumped\n   * @returns a list of names of the animations that were scrubbed\n   */\n  public scrub(animatables: string[], value: number): string[] {\n    const forScrubbing = this.animations.filter((a) =>\n      animatables.includes(a.name)\n    );\n    forScrubbing.forEach((a) => (a.scrubTo = value));\n    return forScrubbing.map((a) => a.name);\n  }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * playing\n   */\n  public get playing(): string[] {\n    return this.animations\n      .filter((a) => a.playing)\n      .map((a) => a.name)\n      .concat(this.stateMachines.filter((m) => m.playing).map((m) => m.name));\n  }\n\n  /**\n   * Returns a list of names of all animations and state machines currently\n   * paused\n   */\n  public get paused(): string[] {\n    return this.animations\n      .filter((a) => !a.playing)\n      .map((a) => a.name)\n      .concat(this.stateMachines.filter((m) => !m.playing).map((m) => m.name));\n  }\n\n  /**\n   * Stops and removes all named animations and state machines\n   * @param animatables animations and state machines to remove\n   * @returns a list of names of removed items\n   */\n  public stop(animatables?: string[] | string): string[] {\n    animatables = mapToStringArray(animatables);\n\n    // If nothing's specified, wipe them out, all of them\n    let removedNames: string[] = [];\n    // Stop everything\n    if (animatables.length === 0) {\n      removedNames = this.animations\n        .map((a) => a.name)\n        .concat(this.stateMachines.map((m) => m.name));\n      // Clean up before emptying the arrays\n      this.animations.forEach((a) => a.cleanup());\n      this.stateMachines.forEach((m) => m.cleanup());\n      // Empty out the arrays\n      this.animations.splice(0, this.animations.length);\n      this.stateMachines.splice(0, this.stateMachines.length);\n    } else {\n      // Remove only the named animations/state machines\n      const animationsToRemove = this.animations.filter((a) =>\n        animatables.includes(a.name)\n      );\n\n      animationsToRemove.forEach((a) => {\n        a.cleanup();\n        this.animations.splice(this.animations.indexOf(a), 1);\n      });\n      const machinesToRemove = this.stateMachines.filter((m) =>\n        animatables.includes(m.name)\n      );\n      machinesToRemove.forEach((m) => {\n        m.cleanup();\n        this.stateMachines.splice(this.stateMachines.indexOf(m), 1);\n      });\n      removedNames = animationsToRemove\n        .map((a) => a.name)\n        .concat(machinesToRemove.map((m) => m.name));\n    }\n\n    this.eventManager.fire({\n      type: EventType.Stop,\n      data: removedNames,\n    });\n\n    // Return the list of animations removed\n    return removedNames;\n  }\n\n  /**\n   * Returns true if at least one animation is active\n   */\n  public get isPlaying(): boolean {\n    return (\n      this.animations.reduce((acc, curr) => acc || curr.playing, false) ||\n      this.stateMachines.reduce((acc, curr) => acc || curr.playing, false)\n    );\n  }\n\n  /**\n   * Returns true if all animations are paused and there's at least one animation\n   */\n  public get isPaused(): boolean {\n    return (\n      !this.isPlaying &&\n      (this.animations.length > 0 || this.stateMachines.length > 0)\n    );\n  }\n\n  /**\n   * Returns true if there are no playing or paused animations/state machines\n   */\n  public get isStopped(): boolean {\n    return this.animations.length === 0 && this.stateMachines.length === 0;\n  }\n\n  /**\n   * If there are no animations or state machines, add the first one found\n   * @returns the name of the animation or state machine instanced\n   */\n  public atLeastOne(playing: boolean, fireEvent = true): string {\n    let instancedName: string;\n    if (this.animations.length === 0 && this.stateMachines.length === 0) {\n      if (this.artboard.animationCount() > 0) {\n        // Add the first animation\n        this.add(\n          [(instancedName = this.artboard.animationByIndex(0).name)],\n          playing,\n          fireEvent\n        );\n      } else if (this.artboard.stateMachineCount() > 0) {\n        // Add the first state machine\n        this.add(\n          [(instancedName = this.artboard.stateMachineByIndex(0).name)],\n          playing,\n          fireEvent\n        );\n      }\n    }\n    return instancedName;\n  }\n\n  /**\n   * Checks if any animations have looped and if so, fire the appropriate event\n   */\n  public handleLooping() {\n    for (const animation of this.animations.filter((a) => a.playing)) {\n      // Emit if the animation looped\n      if (animation.loopValue === 0 && animation.loopCount) {\n        animation.loopCount = 0;\n        // This is a one-shot; if it has ended, delete the instance\n        this.stop(animation.name);\n      } else if (animation.loopValue === 1 && animation.loopCount) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.Loop },\n        });\n        animation.loopCount = 0;\n      }\n      // Wasm indicates a loop at each time the animation\n      // changes direction, so a full loop/lap occurs every\n      // two loop counts\n      else if (animation.loopValue === 2 && animation.loopCount > 1) {\n        this.eventManager.fire({\n          type: EventType.Loop,\n          data: { animation: animation.name, type: LoopType.PingPong },\n        });\n        animation.loopCount = 0;\n      }\n    }\n  }\n\n  /**\n   * Checks if states have changed in state machines and fires a statechange\n   * event\n   */\n  public handleStateChanges() {\n    const statesChanged: string[] = [];\n    for (const stateMachine of this.stateMachines.filter((sm) => sm.playing)) {\n      statesChanged.push(...stateMachine.statesChanged);\n    }\n    if (statesChanged.length > 0) {\n      this.eventManager.fire({\n        type: EventType.StateChange,\n        data: statesChanged,\n      });\n    }\n  }\n}\n\n// #endregion\n\n// #region events\n\n/**\n * Supported event types triggered in Rive\n */\nexport enum EventType {\n  Load = \"load\",\n  LoadError = \"loaderror\",\n  Play = \"play\",\n  Pause = \"pause\",\n  Stop = \"stop\",\n  Loop = \"loop\",\n  Draw = \"draw\",\n  StateChange = \"statechange\",\n}\n\n// Event fired by Rive\nexport interface Event {\n  type: EventType;\n  data?: string | string[] | LoopEvent;\n}\n\n/**\n * Looping types: one-shot, loop, and ping-pong\n */\nexport enum LoopType {\n  OneShot = \"oneshot\", // has value 0 in runtime\n  Loop = \"loop\", // has value 1 in runtime\n  PingPong = \"pingpong\", // has value 2 in runtime\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport interface LoopEvent {\n  animation: string;\n  type: LoopType;\n}\n\n/**\n * Loop events are returned through onloop callbacks\n */\nexport type EventCallback = (event: Event) => void;\n\n/**\n * Event listeners registered with the event manager\n */\nexport interface EventListener {\n  type: EventType;\n  callback: EventCallback;\n}\n\n/**\n * FPS Reporting through callbacks sent to the WASM runtime\n */\nexport type FPSCallback = (fps: number) => void;\n\n// Manages Rive events and listeners\nclass EventManager {\n  constructor(private listeners: EventListener[] = []) {}\n\n  // Gets listeners of specified type\n  private getListeners(type: EventType): EventListener[] {\n    return this.listeners.filter((e) => e.type === type);\n  }\n\n  // Adds a listener\n  public add(listener: EventListener): void {\n    if (!this.listeners.includes(listener)) {\n      this.listeners.push(listener);\n    }\n  }\n\n  /**\n   * Removes a listener\n   * @param listener the listener with the callback to be removed\n   */\n  public remove(listener: EventListener): void {\n    // We can't simply look for the listener as it'll be a different instance to\n    // one originally subscribed. Find all the listeners of the right type and\n    // then check their callbacks which should match.\n    for (let i = 0; i < this.listeners.length; i++) {\n      const currentListener = this.listeners[i];\n      if (currentListener.type === listener.type) {\n        if (currentListener.callback === listener.callback) {\n          this.listeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Clears all listeners of specified type, or every listener if no type is\n   * specified\n   * @param type the type of listeners to clear, or all listeners if not\n   * specified\n   */\n  public removeAll(type?: EventType) {\n    if (!type) {\n      this.listeners.splice(0, this.listeners.length);\n    } else {\n      this.listeners\n        .filter((l) => l.type === type)\n        .forEach((l) => this.remove(l));\n    }\n  }\n\n  // Fires an event\n  public fire(event: Event): void {\n    const eventListeners = this.getListeners(event.type);\n    eventListeners.forEach((listener) => listener.callback(event));\n  }\n}\n\n// #endregion\n\n// #region Manages a queue of tasks\n\n// A task in the queue; will fire the action when the queue is processed; will\n// also optionally fire an event.\nexport interface Task {\n  action?: VoidCallback;\n  event?: Event;\n}\n\n// Manages a queue of tasks\nclass TaskQueueManager {\n  private queue: Task[] = [];\n\n  constructor(private eventManager: EventManager) {}\n\n  // Adds a task top the queue\n  public add(task: Task): void {\n    this.queue.push(task);\n  }\n\n  // Processes all tasks in the queue\n  public process(): void {\n    while (this.queue.length > 0) {\n      const task = this.queue.shift();\n      if (task?.action) {\n        task.action();\n      }\n      if (task?.event) {\n        this.eventManager.fire(task.event);\n      }\n    }\n  }\n}\n\n// #endregion\n\n// #region Rive\n\n// Interface for the Rive static method contructor\nexport interface RiveParameters {\n  canvas: HTMLCanvasElement | OffscreenCanvas; // canvas is required\n  src?: string; // one of src or buffer is required\n  buffer?: ArrayBuffer; // one of src or buffer is required\n  artboard?: string;\n  animations?: string | string[];\n  stateMachines?: string | string[];\n  layout?: Layout;\n  autoplay?: boolean;\n  useOffscreenRenderer?: boolean;\n  /**\n   * Turn off Rive Listeners. This means state machines that have Listeners\n   * will not be invoked, and also, no event listeners pertaining to Listeners\n   * will be attached to the <canvas> element\n   */\n  shouldDisableRiveListeners?: boolean;\n  onLoad?: EventCallback;\n  onLoadError?: EventCallback;\n  onPlay?: EventCallback;\n  onPause?: EventCallback;\n  onStop?: EventCallback;\n  onLoop?: EventCallback;\n  onStateChange?: EventCallback;\n  /**\n   * @deprecated Use `onLoad()` instead\n   */\n  onload?: EventCallback;\n  /**\n   * @deprecated Use `onLoadError()` instead\n   */\n  onloaderror?: EventCallback;\n  /**\n   * @deprecated Use `onPoad()` instead\n   */\n  onplay?: EventCallback;\n  /**\n   * @deprecated Use `onPause()` instead\n   */\n  onpause?: EventCallback;\n  /**\n   * @deprecated Use `onStop()` instead\n   */\n  onstop?: EventCallback;\n  /**\n   * @deprecated Use `onLoop()` instead\n   */\n  onloop?: EventCallback;\n  /**\n   * @deprecated Use `onStateChange()` instead\n   */\n  onstatechange?: EventCallback;\n}\n\n// Interface to Rive.load function\nexport interface RiveLoadParameters {\n  src?: string;\n  buffer?: ArrayBuffer;\n  autoplay?: boolean;\n  artboard?: string;\n  animations?: string | string[];\n  stateMachines?: string | string[];\n  useOffscreenRenderer?: boolean;\n  shouldDisableRiveListeners?: boolean;\n}\n\n// Interface ot Rive.reset function\nexport interface RiveResetParameters {\n  artboard?: string;\n  animations?: string | string[];\n  stateMachines?: string | string[];\n  autoplay?: boolean;\n}\n\nexport class Rive {\n  // Canvas in which to render the artboard\n  private readonly canvas: HTMLCanvasElement | OffscreenCanvas;\n\n  // A url to a Rive file; may be undefined if a buffer is specified\n  private src: string;\n\n  // Raw Rive file data; may be undefined if a src is specified\n  private buffer: ArrayBuffer;\n\n  // The layout for rendering in the canvas\n  private _layout: Layout;\n\n  // The runtime renderer\n  private renderer: rc.Renderer | rc.CanvasRenderer;\n\n  // Tracks if a Rive file is loaded\n  private loaded = false;\n\n  /**\n   * Tracks if a Rive file is loaded; we need this in addition to loaded as some\n   * commands (e.g. contents) can be called as soon as the file is loaded.\n   * However, playback commands need to be queued and run in order once initial\n   * animations and autoplay has been sorted out. This applies to play, pause,\n   * and start.\n   */\n  private readyForPlaying = false;\n\n  // Wasm runtime\n  private runtime: rc.RiveCanvas;\n\n  // Runtime artboard\n  private artboard: rc.Artboard | null = null;\n\n  // place to clear up event listeners\n  private eventCleanup: VoidCallback | null = null;\n\n  // Runtime file\n  private file: rc.File;\n\n  // Holds event listeners\n  private eventManager: EventManager;\n\n  // Manages the loading task queue\n  private taskQueue: TaskQueueManager;\n\n  // Animator: manages animations and state machines\n  private animator: Animator;\n\n  // Error message for missing source or buffer\n  private static readonly missingErrorMessage: string =\n    \"Rive source file or data buffer required\";\n\n  private shouldDisableRiveListeners = false;\n\n  // Durations to generate a frame for the last second. Used for performance profiling.\n  public durations: number[] = [];\n  public frameTimes: number[] = [];\n  public frameCount = 0;\n\n  constructor(params: RiveParameters) {\n    this.canvas = params.canvas;\n    this.src = params.src;\n    this.buffer = params.buffer;\n    this.layout = params.layout ?? new Layout();\n    this.shouldDisableRiveListeners = !!params.shouldDisableRiveListeners;\n\n    // New event management system\n    this.eventManager = new EventManager();\n    if (params.onLoad) this.on(EventType.Load, params.onLoad);\n    if (params.onLoadError) this.on(EventType.LoadError, params.onLoadError);\n    if (params.onPlay) this.on(EventType.Play, params.onPlay);\n    if (params.onPause) this.on(EventType.Pause, params.onPause);\n    if (params.onStop) this.on(EventType.Stop, params.onStop);\n    if (params.onLoop) this.on(EventType.Loop, params.onLoop);\n    if (params.onStateChange)\n      this.on(EventType.StateChange, params.onStateChange);\n\n    /**\n     * @deprecated Use camelCase'd versions instead.\n     */\n    if (params.onload && !params.onLoad) this.on(EventType.Load, params.onload);\n    if (params.onloaderror && !params.onLoadError)\n      this.on(EventType.LoadError, params.onloaderror);\n    if (params.onplay && !params.onPlay) this.on(EventType.Play, params.onplay);\n    if (params.onpause && !params.onPause)\n      this.on(EventType.Pause, params.onpause);\n    if (params.onstop && !params.onStop) this.on(EventType.Stop, params.onstop);\n    if (params.onloop && !params.onLoop) this.on(EventType.Loop, params.onloop);\n    if (params.onstatechange && !params.onStateChange)\n      this.on(EventType.StateChange, params.onstatechange);\n\n    // Hook up the task queue\n    this.taskQueue = new TaskQueueManager(this.eventManager);\n\n    this.init({\n      src: this.src,\n      buffer: this.buffer,\n      autoplay: params.autoplay,\n      animations: params.animations,\n      stateMachines: params.stateMachines,\n      artboard: params.artboard,\n      useOffscreenRenderer: params.useOffscreenRenderer,\n    });\n  }\n\n  // Alternative constructor to build a Rive instance from an interface/object\n  public static new(params: RiveParameters): Rive {\n    console.warn(\n      \"This function is deprecated: please use `new Rive({})` instead\"\n    );\n    return new Rive(params);\n  }\n\n  // Initializes the Rive object either from constructor or load()\n  private init({\n    src,\n    buffer,\n    animations,\n    stateMachines,\n    artboard,\n    autoplay = false,\n    useOffscreenRenderer = false,\n  }: RiveLoadParameters): void {\n    this.src = src;\n    this.buffer = buffer;\n\n    // If no source file url specified, it's a bust\n    if (!this.src && !this.buffer) {\n      throw new Error(Rive.missingErrorMessage);\n    }\n\n    // List of animations that should be initialized.\n    const startingAnimationNames = mapToStringArray(animations);\n\n    // List of state machines that should be initialized\n    const startingStateMachineNames = mapToStringArray(stateMachines);\n\n    // Ensure loaded is marked as false if loading new file\n    this.loaded = false;\n    this.readyForPlaying = false;\n\n    // Ensure the runtime is loaded\n    RuntimeLoader.awaitInstance()\n      .then((runtime) => {\n        this.runtime = runtime;\n\n        // Get the canvas where you want to render the animation and create a renderer\n        this.renderer = this.runtime.makeRenderer(\n          this.canvas,\n          useOffscreenRenderer\n        );\n\n        // Initial size adjustment based on devicePixelRatio if no width/height are\n        // specified explicitly\n        if (!(this.canvas.width || this.canvas.height)) {\n          this.resizeDrawingSurfaceToCanvas();\n        }\n\n        // Load Rive data from a source uri or a data buffer\n        this.initData(\n          artboard,\n          startingAnimationNames,\n          startingStateMachineNames,\n          autoplay\n        )\n          .then(() => this.setupRiveListeners())\n          .catch((e) => {\n            console.error(e);\n          });\n      })\n      .catch((e) => {\n        console.error(e);\n      });\n  }\n\n  private setupRiveListeners(): void {\n    if (!this.shouldDisableRiveListeners) {\n      const activeStateMachines = (this.animator.stateMachines || [])\n        .filter((sm) => sm.playing && this.runtime.hasListeners(sm.instance))\n        .map((sm) => sm.instance);\n      this.eventCleanup = registerTouchInteractions({\n        canvas: this.canvas,\n        artboard: this.artboard,\n        stateMachines: activeStateMachines,\n        renderer: this.renderer,\n        rive: this.runtime,\n        fit: this._layout.runtimeFit(this.runtime),\n        alignment: this._layout.runtimeAlignment(this.runtime),\n      });\n    }\n  }\n\n  // Initializes runtime with Rive data and preps for playing\n  private async initData(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): Promise<void> {\n    // Load the buffer from the src if provided\n    if (this.src) {\n      this.buffer = await loadRiveFile(this.src);\n    }\n    // Load the Rive file\n    this.file = await this.runtime.load(new Uint8Array(this.buffer));\n\n    if (this.file) {\n      // Initialize and draw frame\n      this.initArtboard(\n        artboardName,\n        animationNames,\n        stateMachineNames,\n        autoplay\n      );\n\n      // Everything's set up, emit a load event\n      this.loaded = true;\n      this.eventManager.fire({\n        type: EventType.Load,\n        data: this.src ?? \"buffer\",\n      });\n\n      // Flag ready for playback commands and clear the task queue; this order\n      // is important or it may infinitely recurse\n      this.readyForPlaying = true;\n      this.taskQueue.process();\n\n      this.drawFrame();\n\n      return Promise.resolve();\n    } else {\n      const msg = \"Problem loading file; may be corrupt!\";\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return Promise.reject(msg);\n    }\n  }\n\n  // Initialize for playback\n  private initArtboard(\n    artboardName: string,\n    animationNames: string[],\n    stateMachineNames: string[],\n    autoplay: boolean\n  ): void {\n    // Fetch the artboard\n    const rootArtboard = artboardName\n      ? this.file.artboardByName(artboardName)\n      : this.file.defaultArtboard();\n\n    // Check we have a working artboard\n    if (!rootArtboard) {\n      const msg = \"Invalid artboard name or no default artboard\";\n      console.warn(msg);\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      return;\n    }\n\n    this.artboard = rootArtboard;\n\n    // Check that the artboard has at least 1 animation\n    if (this.artboard.animationCount() < 1) {\n      const msg = \"Artboard has no animations\";\n      this.eventManager.fire({ type: EventType.LoadError, data: msg });\n      throw msg;\n    }\n\n    // Initialize the animator\n    this.animator = new Animator(\n      this.runtime,\n      this.artboard,\n      this.eventManager\n    );\n\n    // Initialize the animations; as loaded hasn't happened yet, we need to\n    // suppress firing the play/pause events until the load event has fired. To\n    // do this we tell the animator to suppress firing events, and add event\n    // firing to the task queue.\n    let instanceNames: string[];\n    if (animationNames.length > 0 || stateMachineNames.length > 0) {\n      instanceNames = animationNames.concat(stateMachineNames);\n      this.animator.add(instanceNames, autoplay, false);\n    } else {\n      instanceNames = [this.animator.atLeastOne(autoplay, false)];\n    }\n    // Queue up firing the playback events\n    this.taskQueue.add({\n      event: {\n        type: autoplay ? EventType.Play : EventType.Pause,\n        data: instanceNames,\n      },\n    });\n  }\n\n  // Draws the current artboard frame\n  public drawFrame() {\n    this.startRendering();\n  }\n\n  // Tracks the last timestamp at which the animation was rendered. Used only in\n  // draw().\n  private lastRenderTime: number;\n\n  // Tracks the current animation frame request\n  private frameRequestId: number | null;\n\n  /**\n   * Used be draw to track when a second of active rendering time has passed.\n   * Used for debugging purposes\n   */\n  private renderSecondTimer = 0;\n\n  /**\n   * Draw rendering loop; renders animation frames at the correct time interval.\n   * @param time the time at which to render a frame\n   */\n  private draw(time: number, onSecond?: VoidCallback): void {\n    const before = performance.now();\n\n    // Clear the frameRequestId, as we're now rendering a fresh frame\n    this.frameRequestId = null;\n\n    // On the first pass, make sure lastTime has a valid value\n    if (!this.lastRenderTime) {\n      this.lastRenderTime = time;\n    }\n\n    // Handle the onSecond callback\n    this.renderSecondTimer += time - this.lastRenderTime;\n    if (this.renderSecondTimer > 5000) {\n      this.renderSecondTimer = 0;\n      onSecond?.();\n    }\n\n    // Calculate the elapsed time between frames in seconds\n    const elapsedTime = (time - this.lastRenderTime) / 1000;\n    this.lastRenderTime = time;\n\n    // - Advance non-paused animations by the elapsed number of seconds\n    // - Advance any animations that require scrubbing\n    // - Advance to the first frame even when autoplay is false\n    const activeAnimations = this.animator.animations\n      .filter((a) => a.playing || a.needsScrub)\n      // The scrubbed animations must be applied first to prevent weird artifacts\n      // if the playing animations conflict with the scrubbed animating attribuates.\n      .sort((first) => (first.needsScrub ? -1 : 1));\n    for (const animation of activeAnimations) {\n      animation.advance(elapsedTime);\n      if (animation.instance.didLoop) {\n        animation.loopCount += 1;\n      }\n      animation.apply(1.0);\n    }\n\n    // - Advance non-paused state machines by the elapsed number of seconds\n    // - Advance to the first frame even when autoplay is false\n    const activeStateMachines = this.animator.stateMachines.filter(\n      (a) => a.playing\n    );\n    for (const stateMachine of activeStateMachines) {\n      stateMachine.advance(elapsedTime);\n      // stateMachine.instance.apply(this.artboard);\n    }\n\n    // Once the animations have been applied to the artboard, advance it\n    // by the elapsed time.\n    this.artboard.advance(elapsedTime);\n\n    const { renderer } = this;\n    // Canvas must be wiped to prevent artifacts\n    renderer.clear();\n    renderer.save();\n\n    // Update the renderer alignment if necessary\n    this.alignRenderer();\n\n    this.artboard.draw(renderer);\n\n    renderer.restore();\n    renderer.flush();\n\n    // Check for any animations that looped\n    this.animator.handleLooping();\n\n    // Check for any state machines that had a state change\n    this.animator.handleStateChanges();\n\n    // Add duration to create frame to durations array\n    this.frameCount++;\n    const after = performance.now();\n    this.frameTimes.push(after);\n    this.durations.push(after - before);\n    while (this.frameTimes[0] <= after - 1000) {\n      this.frameTimes.shift();\n      this.durations.shift();\n    }\n\n    // Calling requestAnimationFrame will rerun draw() at the correct rate:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_animations\n    if (this.animator.isPlaying) {\n      // Request a new rendering frame\n      this.startRendering();\n    } else if (this.animator.isPaused) {\n      // Reset the end time so on playback it starts at the correct frame\n      this.lastRenderTime = 0;\n    } else if (this.animator.isStopped) {\n      // Reset animation instances, artboard and time\n      // TODO: implement this properly when we have instancing\n      // this.initArtboard();\n      // this.drawFrame();\n      this.lastRenderTime = 0;\n    }\n  }\n\n  /**\n   * Align the renderer\n   */\n  private alignRenderer(): void {\n    const { renderer, runtime, _layout, artboard } = this;\n    // Align things up safe in the knowledge we can restore if changed\n    renderer.align(\n      _layout.runtimeFit(runtime),\n      _layout.runtimeAlignment(runtime),\n      {\n        minX: _layout.minX,\n        minY: _layout.minY,\n        maxX: _layout.maxX,\n        maxY: _layout.maxY,\n      },\n      artboard.bounds\n    );\n  }\n\n  public get fps() {\n    return this.durations.length;\n  }\n\n  public get frameTime() {\n    if (this.durations.length === 0) {\n      return 0;\n    }\n    return (\n      this.durations.reduce((a, b) => a + b, 0) / this.durations.length\n    ).toFixed(4);\n  }\n\n  /**\n   * Cleans up all Wasm-generated objects that need to be manually destroyed:\n   * artboard instances, animation instances, state machine instances,\n   * renderer instance, file and runtime.\n   *\n   * Once this is called, you will need to initialise a new instance of the\n   * Rive class\n   */\n  public cleanup() {\n    // Stop the renderer if it hasn't already been stopped.\n    this.stopRendering();\n    // Clean up any artboard, animation or state machine instances.\n    this.cleanupInstances();\n    // Delete the renderer\n    this.renderer?.delete();\n    this.renderer = null;\n    // Delete the rive file\n    this.file?.delete();\n    this.file = null;\n  }\n\n  /**\n   * Cleans up any Wasm-generated objects that need to be manually destroyed:\n   * artboard instances, animation instances, state machine instances.\n   *\n   * Once this is called, things will need to be reinitialized or bad things\n   * might happen.\n   */\n  public cleanupInstances() {\n    if (this.eventCleanup !== null) {\n      this.eventCleanup();\n    }\n    // Delete all animation and state machine instances\n    this.stop();\n    if (this.artboard) {\n      this.artboard.delete();\n      this.artboard = null;\n    }\n  }\n\n  // Plays specified animations; if none specified, it unpauses everything.\n  public play(animationNames?: string | string[], autoplay?: true): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, queue up the play\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.play(animationNames, autoplay),\n      });\n      return;\n    }\n    this.animator.play(animationNames);\n    if (this.eventCleanup) {\n      this.eventCleanup();\n    }\n    this.setupRiveListeners();\n    this.startRendering();\n  }\n\n  // Pauses specified animations; if none specified, pauses all.\n  public pause(animationNames?: string | string[]): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.pause(animationNames),\n      });\n      return;\n    }\n    this.animator.pause(animationNames);\n  }\n\n  public scrub(animationNames?: string | string[], value?: number): void {\n    animationNames = mapToStringArray(animationNames);\n\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.scrub(animationNames, value),\n      });\n      return;\n    }\n\n    // Scrub the animation time; we draw a single frame here so that if\n    // nothing's currently playing, the scrubbed animation is still rendered/\n    this.animator.scrub(animationNames, value || 0);\n    this.drawFrame();\n  }\n\n  // Stops specified animations; if none specifies, stops them all.\n  public stop(animationNames?: string | string[] | undefined): void {\n    animationNames = mapToStringArray(animationNames);\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.readyForPlaying) {\n      this.taskQueue.add({\n        action: () => this.stop(animationNames),\n      });\n      return;\n    }\n    this.animator.stop(animationNames);\n    if (this.eventCleanup) {\n      this.eventCleanup();\n    }\n  }\n\n  /**\n   * Resets the animation\n   * @param artboard the name of the artboard, or default if none given\n   * @param animations the names of animations for playback\n   * @param stateMachines the names of state machines for playback\n   * @param autoplay whether to autoplay when reset, defaults to false\n   *\n   */\n  public reset(params?: RiveResetParameters): void {\n    // Get the current artboard, animations, state machines, and playback states\n    const artBoardName = params?.artboard;\n    const animationNames = mapToStringArray(params?.animations);\n    const stateMachineNames = mapToStringArray(params?.stateMachines);\n    const autoplay = params?.autoplay ?? false;\n\n    // Stop everything and clean up\n    this.cleanupInstances();\n\n    // Reinitialize an artboard instance with the state\n    this.initArtboard(\n      artBoardName,\n      animationNames,\n      stateMachineNames,\n      autoplay\n    );\n    this.taskQueue.process();\n  }\n\n  // Loads a new Rive file, keeping listeners in place\n  public load(params: RiveLoadParameters): void {\n    // Stop all animations\n    this.stop();\n    // Reinitialize\n    this.init(params);\n  }\n\n  // Sets a new layout\n  public set layout(layout: Layout) {\n    this._layout = layout;\n    // If the maxX or maxY are 0, then set them to the canvas width and height\n    if (!layout.maxX || !layout.maxY) {\n      this.resizeToCanvas();\n    }\n    if (this.loaded && !this.animator.isPlaying) {\n      this.drawFrame();\n    }\n  }\n\n  /**\n   * Returns the current layout. Note that layout should be treated as\n   * immutable. If you want to change the layout, create a new one use the\n   * layout setter\n   */\n  public get layout() {\n    return this._layout;\n  }\n\n  /**\n   * Sets the layout bounds to the current canvas size; this is typically called\n   * when the canvas is resized\n   */\n  public resizeToCanvas() {\n    this._layout = this.layout.copyWith({\n      minX: 0,\n      minY: 0,\n      maxX: this.canvas.width,\n      maxY: this.canvas.height,\n    });\n  }\n\n  /**\n   * Accounts for devicePixelRatio as a multiplier to render the size of the canvas drawing surface.\n   * Uses the size of the backing canvas to set new width/height attributes. Need to re-render\n   * and resize the layout to match the new drawing surface afterwards.\n   * Useful function for consumers to include in a window resize listener\n   */\n  public resizeDrawingSurfaceToCanvas() {\n    if (this.canvas instanceof HTMLCanvasElement && !!window) {\n      const { width, height } = this.canvas.getBoundingClientRect();\n      const dpr = window.devicePixelRatio || 1;\n      this.canvas.width = dpr * width;\n      this.canvas.height = dpr * height;\n      this.startRendering();\n      this.resizeToCanvas();\n    }\n  }\n\n  // Returns the animation source, which may be undefined\n  public get source(): string {\n    return this.src;\n  }\n\n  /**\n   * Returns the name of the active artboard\n   */\n  public get activeArtboard(): string {\n    return this.artboard ? this.artboard.name : \"\";\n  }\n\n  // Returns a list of animation names on the chosen artboard\n  public get animationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const animationNames: string[] = [];\n    for (let i = 0; i < this.artboard.animationCount(); i++) {\n      animationNames.push(this.artboard.animationByIndex(i).name);\n    }\n    return animationNames;\n  }\n\n  /**\n   * Returns a list of state machine names from the current artboard\n   */\n  public get stateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    const stateMachineNames: string[] = [];\n    for (let i = 0; i < this.artboard.stateMachineCount(); i++) {\n      stateMachineNames.push(this.artboard.stateMachineByIndex(i).name);\n    }\n    return stateMachineNames;\n  }\n\n  /**\n   * Returns the inputs for the specified instanced state machine, or an empty\n   * list if the name is invalid or the state machine is not instanced\n   * @param name the state machine name\n   * @returns the inputs for the named state machine\n   */\n  public stateMachineInputs(name: string): StateMachineInput[] {\n    // If the file's not loaded, early out, nothing to pause\n    if (!this.loaded) {\n      return;\n    }\n    const stateMachine = this.animator.stateMachines.find(\n      (m) => m.name === name\n    );\n    return stateMachine?.inputs;\n  }\n\n  // Returns a list of playing machine names\n  public get playingStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter((m) => m.playing)\n      .map((m) => m.name);\n  }\n\n  // Returns a list of playing animation names\n  public get playingAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations.filter((a) => a.playing).map((a) => a.name);\n  }\n\n  // Returns a list of paused animation names\n  public get pausedAnimationNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.animations\n      .filter((a) => !a.playing)\n      .map((a) => a.name);\n  }\n\n  /**\n   *  Returns a list of paused machine names\n   * @returns a list of state machine names that are paused\n   */\n  public get pausedStateMachineNames(): string[] {\n    // If the file's not loaded, we got nothing to return\n    if (!this.loaded) {\n      return [];\n    }\n    return this.animator.stateMachines\n      .filter((m) => !m.playing)\n      .map((m) => m.name);\n  }\n\n  /**\n   * @returns true if any animation is playing\n   */\n  public get isPlaying(): boolean {\n    return this.animator.isPlaying;\n  }\n\n  /**\n   * @returns true if all instanced animations are paused\n   */\n  public get isPaused(): boolean {\n    return this.animator.isPaused;\n  }\n\n  /**\n   * @returns true if no animations are playing or paused\n   */\n  public get isStopped(): boolean {\n    return this.animator.isStopped;\n  }\n\n  /**\n   * @returns the bounds of the current artboard, or undefined if the artboard\n   * isn't loaded yet.\n   */\n  public get bounds(): Bounds {\n    return this.artboard ? this.artboard.bounds : undefined;\n  }\n\n  /**\n   * Subscribe to Rive-generated events\n   * @param type the type of event to subscribe to\n   * @param callback callback to fire when the event occurs\n   */\n  public on(type: EventType, callback: EventCallback) {\n    this.eventManager.add({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes from a Rive-generated event\n   * @param callback the callback to unsubscribe from\n   */\n  public unsubscribe(type: EventType, callback: EventCallback) {\n    this.eventManager.remove({\n      type: type,\n      callback: callback,\n    });\n  }\n\n  /**\n   * Unsubscribes all listeners from an event type, or everything if no type is\n   * given\n   * @param type the type of event to unsubscribe from, or all types if\n   * undefined\n   */\n  public unsubscribeAll(type?: EventType) {\n    this.eventManager.removeAll(type);\n  }\n\n  /**\n   * Stops the rendering loop; this is different from pausing in that it doesn't\n   * change the state of any animation. It stops rendering from occurring. This\n   * is designed for situations such as when Rive isn't visible.\n   *\n   * The only way to start rendering again is to call `startRendering`.\n   * Animations that are marked as playing will start from the position that\n   * they would have been at if rendering had not been stopped.\n   */\n  public stopRendering() {\n    if (this.loaded && this.frameRequestId) {\n      if (this.runtime.cancelAnimationFrame) {\n        this.runtime.cancelAnimationFrame(this.frameRequestId);\n      } else {\n        cancelAnimationFrame(this.frameRequestId);\n      }\n      this.frameRequestId = null;\n    }\n  }\n\n  /**\n   * Starts the rendering loop if it has been previously stopped. If the\n   * renderer is already active, then this will have zero effect.\n   */\n  public startRendering() {\n    if (this.loaded && this.artboard && !this.frameRequestId) {\n      if (this.runtime.requestAnimationFrame) {\n        this.frameRequestId = this.runtime.requestAnimationFrame(\n          this.draw.bind(this)\n        );\n      } else {\n        this.frameRequestId = requestAnimationFrame(this.draw.bind(this));\n      }\n    }\n  }\n\n  /**\n   * Enables frames-per-second (FPS) reporting for the runtime\n   * If no callback is provided, Rive will append a fixed-position div at the top-right corner of\n   * the page with the FPS reading\n   * @param fpsCallback - Callback from the runtime during the RAF loop that supplies the FPS value\n   */\n  public enableFPSCounter(fpsCallback?: FPSCallback) {\n    this.runtime.enableFPSCounter(fpsCallback);\n  }\n\n  /**\n   * Disables frames-per-second (FPS) reporting for the runtime\n   */\n  public disableFPSCounter() {\n    this.runtime.disableFPSCounter();\n  }\n\n  /**\n   * Returns the contents of a Rive file: the artboards, animations, and state machines\n   */\n  public get contents(): RiveFileContents {\n    if (!this.loaded) {\n      return undefined;\n    }\n    const riveContents: RiveFileContents = {\n      artboards: [],\n    };\n    for (let i = 0; i < this.file.artboardCount(); i++) {\n      const artboard = this.file.artboardByIndex(i);\n      const artboardContents: ArtboardContents = {\n        name: artboard.name,\n        animations: [],\n        stateMachines: [],\n      };\n      for (let j = 0; j < artboard.animationCount(); j++) {\n        const animation = artboard.animationByIndex(j);\n        artboardContents.animations.push(animation.name);\n      }\n      for (let k = 0; k < artboard.stateMachineCount(); k++) {\n        const stateMachine = artboard.stateMachineByIndex(k);\n        const name = stateMachine.name;\n        const instance = new this.runtime.StateMachineInstance(\n          stateMachine,\n          artboard\n        );\n        const inputContents: StateMachineInputContents[] = [];\n        for (let l = 0; l < instance.inputCount(); l++) {\n          const input = instance.input(l);\n          inputContents.push({ name: input.name, type: input.type });\n        }\n        artboardContents.stateMachines.push({\n          name: name,\n          inputs: inputContents,\n        });\n      }\n      riveContents.artboards.push(artboardContents);\n    }\n    return riveContents;\n  }\n}\n\n/**\n * Contents of a state machine input\n */\ninterface StateMachineInputContents {\n  name: string;\n  type: StateMachineInputType;\n  initialValue?: boolean | number;\n}\n\n/**\n * Contents of a state machine\n */\ninterface StateMachineContents {\n  name: string;\n  inputs: StateMachineInputContents[];\n}\n\n/**\n * Contents of an artboard\n */\ninterface ArtboardContents {\n  animations: string[];\n  stateMachines: StateMachineContents[];\n  name: string;\n}\n\n/**\n * contents of a Rive file\n */\ninterface RiveFileContents {\n  artboards?: ArtboardContents[];\n}\n\n// Loads Rive data from a URI via fetch.\nconst loadRiveFile = async (src: string): Promise<ArrayBuffer> => {\n  const req = new Request(src);\n  const res = await fetch(req);\n  const buffer = await res.arrayBuffer();\n  return buffer;\n};\n\n// #endregion\n\n// #region utility functions\n\n/*\n * Utility function to ensure an object is a string array\n */\nconst mapToStringArray = (obj?: string[] | string | undefined): string[] => {\n  if (typeof obj === \"string\") {\n    return [obj];\n  } else if (obj instanceof Array) {\n    return obj;\n  }\n  // If obj is undefined, return empty array\n  return [];\n};\n\n// #endregion\n\n// #region testing utilities\n\n// Exports to only be used for tests\nexport const Testing = {\n  EventManager: EventManager,\n  TaskQueueManager: TaskQueueManager,\n};\n\n// #endregion\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}